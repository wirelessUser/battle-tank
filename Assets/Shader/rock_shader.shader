Shader "Custom/rock_shader" {
Properties {
 _MainTex ("Base (RGB)", 2D) = "white" { }
 _BumpMap ("Normalmap", 2D) = "bump" { }
 _DetailTex ("Detail Map", 2D) = "white" { }
}
SubShader { 
 LOD 250
 Tags { "RenderType"="Opaque" }
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
  GpuProgramID 58497
Program "vp" {
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_6;
					  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_7;
					  v_7.x = unity_WorldToObject[0].x;
					  v_7.y = unity_WorldToObject[1].x;
					  v_7.z = unity_WorldToObject[2].x;
					  v_7.w = unity_WorldToObject[3].x;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].y;
					  v_8.y = unity_WorldToObject[1].y;
					  v_8.z = unity_WorldToObject[2].y;
					  v_8.w = unity_WorldToObject[3].y;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].z;
					  v_9.y = unity_WorldToObject[1].z;
					  v_9.z = unity_WorldToObject[2].z;
					  v_9.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize(((
					    (v_7.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_9.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_6.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_6.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_6.z;
					  mediump vec3 normal_18;
					  normal_18 = worldNormal_3;
					  mediump vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = normal_18;
					  mediump vec3 res_20;
					  mediump vec3 x_21;
					  x_21.x = dot (unity_SHAr, tmpvar_19);
					  x_21.y = dot (unity_SHAg, tmpvar_19);
					  x_21.z = dot (unity_SHAb, tmpvar_19);
					  mediump vec3 x1_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23 = (normal_18.xyzz * normal_18.yzzx);
					  x1_22.x = dot (unity_SHBr, tmpvar_23);
					  x1_22.y = dot (unity_SHBg, tmpvar_23);
					  x1_22.z = dot (unity_SHBb, tmpvar_23);
					  res_20 = (x_21 + (x1_22 + (unity_SHC.xyz * 
					    ((normal_18.x * normal_18.x) - (normal_18.y * normal_18.y))
					  )));
					  res_20 = max (((1.055 * 
					    pow (max (res_20, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = (glstate_matrix_mvp * tmpvar_5);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_15;
					  xlv_TEXCOORD2 = tmpvar_16;
					  xlv_TEXCOORD3 = tmpvar_17;
					  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), res_20);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_7 = (tmpvar_8.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_9;
					  tmpvar_9 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_12;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7 * tmpvar_1) * diff_15);
					  c_14.w = tmpvar_8.w;
					  c_13.w = c_14.w;
					  c_13.xyz = (c_14.xyz + (tmpvar_7 * xlv_TEXCOORD4));
					  c_4.xyz = c_13.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_6;
					  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_7;
					  v_7.x = unity_WorldToObject[0].x;
					  v_7.y = unity_WorldToObject[1].x;
					  v_7.z = unity_WorldToObject[2].x;
					  v_7.w = unity_WorldToObject[3].x;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].y;
					  v_8.y = unity_WorldToObject[1].y;
					  v_8.z = unity_WorldToObject[2].y;
					  v_8.w = unity_WorldToObject[3].y;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].z;
					  v_9.y = unity_WorldToObject[1].z;
					  v_9.z = unity_WorldToObject[2].z;
					  v_9.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize(((
					    (v_7.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_9.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_6.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_6.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_6.z;
					  mediump vec3 normal_18;
					  normal_18 = worldNormal_3;
					  mediump vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = normal_18;
					  mediump vec3 res_20;
					  mediump vec3 x_21;
					  x_21.x = dot (unity_SHAr, tmpvar_19);
					  x_21.y = dot (unity_SHAg, tmpvar_19);
					  x_21.z = dot (unity_SHAb, tmpvar_19);
					  mediump vec3 x1_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23 = (normal_18.xyzz * normal_18.yzzx);
					  x1_22.x = dot (unity_SHBr, tmpvar_23);
					  x1_22.y = dot (unity_SHBg, tmpvar_23);
					  x1_22.z = dot (unity_SHBb, tmpvar_23);
					  res_20 = (x_21 + (x1_22 + (unity_SHC.xyz * 
					    ((normal_18.x * normal_18.x) - (normal_18.y * normal_18.y))
					  )));
					  res_20 = max (((1.055 * 
					    pow (max (res_20, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = (glstate_matrix_mvp * tmpvar_5);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_15;
					  xlv_TEXCOORD2 = tmpvar_16;
					  xlv_TEXCOORD3 = tmpvar_17;
					  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), res_20);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_7 = (tmpvar_8.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_9;
					  tmpvar_9 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_12;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7 * tmpvar_1) * diff_15);
					  c_14.w = tmpvar_8.w;
					  c_13.w = c_14.w;
					  c_13.xyz = (c_14.xyz + (tmpvar_7 * xlv_TEXCOORD4));
					  c_4.xyz = c_13.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_6;
					  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_7;
					  v_7.x = unity_WorldToObject[0].x;
					  v_7.y = unity_WorldToObject[1].x;
					  v_7.z = unity_WorldToObject[2].x;
					  v_7.w = unity_WorldToObject[3].x;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].y;
					  v_8.y = unity_WorldToObject[1].y;
					  v_8.z = unity_WorldToObject[2].y;
					  v_8.w = unity_WorldToObject[3].y;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].z;
					  v_9.y = unity_WorldToObject[1].z;
					  v_9.z = unity_WorldToObject[2].z;
					  v_9.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize(((
					    (v_7.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_9.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_6.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_6.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_6.z;
					  mediump vec3 normal_18;
					  normal_18 = worldNormal_3;
					  mediump vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = normal_18;
					  mediump vec3 res_20;
					  mediump vec3 x_21;
					  x_21.x = dot (unity_SHAr, tmpvar_19);
					  x_21.y = dot (unity_SHAg, tmpvar_19);
					  x_21.z = dot (unity_SHAb, tmpvar_19);
					  mediump vec3 x1_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23 = (normal_18.xyzz * normal_18.yzzx);
					  x1_22.x = dot (unity_SHBr, tmpvar_23);
					  x1_22.y = dot (unity_SHBg, tmpvar_23);
					  x1_22.z = dot (unity_SHBb, tmpvar_23);
					  res_20 = (x_21 + (x1_22 + (unity_SHC.xyz * 
					    ((normal_18.x * normal_18.x) - (normal_18.y * normal_18.y))
					  )));
					  res_20 = max (((1.055 * 
					    pow (max (res_20, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = (glstate_matrix_mvp * tmpvar_5);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_15;
					  xlv_TEXCOORD2 = tmpvar_16;
					  xlv_TEXCOORD3 = tmpvar_17;
					  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), res_20);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_7 = (tmpvar_8.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_9;
					  tmpvar_9 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_12;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7 * tmpvar_1) * diff_15);
					  c_14.w = tmpvar_8.w;
					  c_13.w = c_14.w;
					  c_13.xyz = (c_14.xyz + (tmpvar_7 * xlv_TEXCOORD4));
					  c_4.xyz = c_13.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat10_1.xyz * _LightColor0.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    SV_Target0.xyz = u_xlat16_2.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat10_1.xyz * _LightColor0.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    SV_Target0.xyz = u_xlat16_2.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat10_1.xyz * _LightColor0.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    SV_Target0.xyz = u_xlat16_2.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_7.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_7.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_7.z;
					  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  gl_Position = (glstate_matrix_mvp * tmpvar_6);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_5;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 c_1;
					  lowp vec4 tmpvar_2;
					  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_3;
					  tmpvar_3 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_4;
					  tmpvar_4 = (2.0 * tmpvar_3.xyz);
					  lowp vec4 c_5;
					  lowp vec4 c_6;
					  c_6.xyz = vec3(0.0, 0.0, 0.0);
					  c_6.w = tmpvar_2.w;
					  c_5.w = c_6.w;
					  c_5.xyz = ((tmpvar_2.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * tmpvar_4);
					  c_1.xyz = c_5.xyz;
					  c_1.w = 1.0;
					  gl_FragData[0] = c_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_7.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_7.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_7.z;
					  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  gl_Position = (glstate_matrix_mvp * tmpvar_6);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_5;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 c_1;
					  lowp vec4 tmpvar_2;
					  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_3;
					  tmpvar_3 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_4;
					  tmpvar_4 = (2.0 * tmpvar_3.xyz);
					  lowp vec4 c_5;
					  lowp vec4 c_6;
					  c_6.xyz = vec3(0.0, 0.0, 0.0);
					  c_6.w = tmpvar_2.w;
					  c_5.w = c_6.w;
					  c_5.xyz = ((tmpvar_2.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * tmpvar_4);
					  c_1.xyz = c_5.xyz;
					  c_1.w = 1.0;
					  gl_FragData[0] = c_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_7.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_7.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_7.z;
					  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  gl_Position = (glstate_matrix_mvp * tmpvar_6);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_5;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 c_1;
					  lowp vec4 tmpvar_2;
					  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_3;
					  tmpvar_3 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_4;
					  tmpvar_4 = (2.0 * tmpvar_3.xyz);
					  lowp vec4 c_5;
					  lowp vec4 c_6;
					  c_6.xyz = vec3(0.0, 0.0, 0.0);
					  c_6.w = tmpvar_2.w;
					  c_5.w = c_6.w;
					  c_5.xyz = ((tmpvar_2.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * tmpvar_4);
					  c_1.xyz = c_5.xyz;
					  c_1.w = 1.0;
					  gl_FragData[0] = c_1;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec3 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    SV_Target0.xyz = u_xlat16_4.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec3 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    SV_Target0.xyz = u_xlat16_4.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec3 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    SV_Target0.xyz = u_xlat16_4.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_6 = tmpvar_7.xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_6.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_6.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_6.z;
					  mediump vec3 normal_19;
					  normal_19 = worldNormal_3;
					  mediump vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = normal_19;
					  mediump vec3 res_21;
					  mediump vec3 x_22;
					  x_22.x = dot (unity_SHAr, tmpvar_20);
					  x_22.y = dot (unity_SHAg, tmpvar_20);
					  x_22.z = dot (unity_SHAb, tmpvar_20);
					  mediump vec3 x1_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24 = (normal_19.xyzz * normal_19.yzzx);
					  x1_23.x = dot (unity_SHBr, tmpvar_24);
					  x1_23.y = dot (unity_SHBg, tmpvar_24);
					  x1_23.z = dot (unity_SHBb, tmpvar_24);
					  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
					    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
					  )));
					  res_21 = max (((1.055 * 
					    pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = (glstate_matrix_mvp * tmpvar_5);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), res_21);
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_7);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_8 = (tmpvar_9.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_10;
					  tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_11;
					  highp float lightShadowDataX_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = _LightShadowData.x;
					  lightShadowDataX_12 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_12);
					  tmpvar_11 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_17;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_18;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_18) * diff_21);
					  c_20.w = tmpvar_9.w;
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_8 * xlv_TEXCOORD4));
					  c_5.xyz = c_19.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_6 = tmpvar_7.xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_6.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_6.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_6.z;
					  mediump vec3 normal_19;
					  normal_19 = worldNormal_3;
					  mediump vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = normal_19;
					  mediump vec3 res_21;
					  mediump vec3 x_22;
					  x_22.x = dot (unity_SHAr, tmpvar_20);
					  x_22.y = dot (unity_SHAg, tmpvar_20);
					  x_22.z = dot (unity_SHAb, tmpvar_20);
					  mediump vec3 x1_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24 = (normal_19.xyzz * normal_19.yzzx);
					  x1_23.x = dot (unity_SHBr, tmpvar_24);
					  x1_23.y = dot (unity_SHBg, tmpvar_24);
					  x1_23.z = dot (unity_SHBb, tmpvar_24);
					  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
					    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
					  )));
					  res_21 = max (((1.055 * 
					    pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = (glstate_matrix_mvp * tmpvar_5);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), res_21);
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_7);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_8 = (tmpvar_9.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_10;
					  tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_11;
					  highp float lightShadowDataX_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = _LightShadowData.x;
					  lightShadowDataX_12 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_12);
					  tmpvar_11 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_17;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_18;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_18) * diff_21);
					  c_20.w = tmpvar_9.w;
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_8 * xlv_TEXCOORD4));
					  c_5.xyz = c_19.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_6 = tmpvar_7.xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_6.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_6.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_6.z;
					  mediump vec3 normal_19;
					  normal_19 = worldNormal_3;
					  mediump vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = normal_19;
					  mediump vec3 res_21;
					  mediump vec3 x_22;
					  x_22.x = dot (unity_SHAr, tmpvar_20);
					  x_22.y = dot (unity_SHAg, tmpvar_20);
					  x_22.z = dot (unity_SHAb, tmpvar_20);
					  mediump vec3 x1_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24 = (normal_19.xyzz * normal_19.yzzx);
					  x1_23.x = dot (unity_SHBr, tmpvar_24);
					  x1_23.y = dot (unity_SHBg, tmpvar_24);
					  x1_23.z = dot (unity_SHBb, tmpvar_24);
					  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
					    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
					  )));
					  res_21 = max (((1.055 * 
					    pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = (glstate_matrix_mvp * tmpvar_5);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), res_21);
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_7);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_8 = (tmpvar_9.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_10;
					  tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_11;
					  highp float lightShadowDataX_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = _LightShadowData.x;
					  lightShadowDataX_12 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_12);
					  tmpvar_11 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_17;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_18;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_18) * diff_21);
					  c_20.w = tmpvar_9.w;
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_8 * xlv_TEXCOORD4));
					  c_5.xyz = c_19.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz;
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    vec3 txVec633 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec633, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_7.xyz = u_xlat16_7.xxx * _LightColor0.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat10_1.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    SV_Target0.xyz = u_xlat16_2.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz;
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    vec3 txVec562 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec562, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_7.xyz = u_xlat16_7.xxx * _LightColor0.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat10_1.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    SV_Target0.xyz = u_xlat16_2.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz;
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    vec3 txVec599 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec599, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_7.xyz = u_xlat16_7.xxx * _LightColor0.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat10_1.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    SV_Target0.xyz = u_xlat16_2.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_7 = tmpvar_8.xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_7.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_7.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_7.z;
					  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  gl_Position = (glstate_matrix_mvp * tmpvar_6);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_8);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform sampler2D unity_Lightmap;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  lowp vec3 worldN_2;
					  lowp vec4 c_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec3 tmpvar_5;
					  tmpvar_5 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_6;
					  highp float lightShadowDataX_7;
					  mediump float tmpvar_8;
					  tmpvar_8 = _LightShadowData.x;
					  lightShadowDataX_7 = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_7);
					  tmpvar_6 = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_2.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_2.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_2.z = tmpvar_12;
					  tmpvar_1 = tmpvar_6;
					  mediump vec3 normalWorld_13;
					  normalWorld_13 = worldN_2;
					  mediump vec3 tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = (2.0 * tmpvar_15.xyz);
					  mediump vec3 lightmapTint_17;
					  lowp vec3 tmpvar_18;
					  tmpvar_18 = tmpvar_15.xyz;
					  lightmapTint_17 = tmpvar_18;
					  tmpvar_14 = max (min (tmpvar_16, (lightmapTint_17 * tmpvar_1)), (tmpvar_16 - (
					    (clamp (dot (normalWorld_13, _WorldSpaceLightPos0.xyz), 0.0, 1.0) * (1.0 - max (0.0, (tmpvar_1 - _LightShadowData.x))))
					   * _LightColor0.xyz)));
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  c_20.xyz = vec3(0.0, 0.0, 0.0);
					  c_20.w = tmpvar_4.w;
					  c_19.w = c_20.w;
					  c_19.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * tmpvar_14);
					  c_3.xyz = c_19.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_7 = tmpvar_8.xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_7.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_7.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_7.z;
					  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  gl_Position = (glstate_matrix_mvp * tmpvar_6);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_8);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform sampler2D unity_Lightmap;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  lowp vec3 worldN_2;
					  lowp vec4 c_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec3 tmpvar_5;
					  tmpvar_5 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_6;
					  highp float lightShadowDataX_7;
					  mediump float tmpvar_8;
					  tmpvar_8 = _LightShadowData.x;
					  lightShadowDataX_7 = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_7);
					  tmpvar_6 = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_2.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_2.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_2.z = tmpvar_12;
					  tmpvar_1 = tmpvar_6;
					  mediump vec3 normalWorld_13;
					  normalWorld_13 = worldN_2;
					  mediump vec3 tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = (2.0 * tmpvar_15.xyz);
					  mediump vec3 lightmapTint_17;
					  lowp vec3 tmpvar_18;
					  tmpvar_18 = tmpvar_15.xyz;
					  lightmapTint_17 = tmpvar_18;
					  tmpvar_14 = max (min (tmpvar_16, (lightmapTint_17 * tmpvar_1)), (tmpvar_16 - (
					    (clamp (dot (normalWorld_13, _WorldSpaceLightPos0.xyz), 0.0, 1.0) * (1.0 - max (0.0, (tmpvar_1 - _LightShadowData.x))))
					   * _LightColor0.xyz)));
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  c_20.xyz = vec3(0.0, 0.0, 0.0);
					  c_20.w = tmpvar_4.w;
					  c_19.w = c_20.w;
					  c_19.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * tmpvar_14);
					  c_3.xyz = c_19.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_7 = tmpvar_8.xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_7.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_7.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_7.z;
					  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  gl_Position = (glstate_matrix_mvp * tmpvar_6);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_8);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform sampler2D unity_Lightmap;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  lowp vec3 worldN_2;
					  lowp vec4 c_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec3 tmpvar_5;
					  tmpvar_5 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_6;
					  highp float lightShadowDataX_7;
					  mediump float tmpvar_8;
					  tmpvar_8 = _LightShadowData.x;
					  lightShadowDataX_7 = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_7);
					  tmpvar_6 = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_2.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_2.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_2.z = tmpvar_12;
					  tmpvar_1 = tmpvar_6;
					  mediump vec3 normalWorld_13;
					  normalWorld_13 = worldN_2;
					  mediump vec3 tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = (2.0 * tmpvar_15.xyz);
					  mediump vec3 lightmapTint_17;
					  lowp vec3 tmpvar_18;
					  tmpvar_18 = tmpvar_15.xyz;
					  lightmapTint_17 = tmpvar_18;
					  tmpvar_14 = max (min (tmpvar_16, (lightmapTint_17 * tmpvar_1)), (tmpvar_16 - (
					    (clamp (dot (normalWorld_13, _WorldSpaceLightPos0.xyz), 0.0, 1.0) * (1.0 - max (0.0, (tmpvar_1 - _LightShadowData.x))))
					   * _LightColor0.xyz)));
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  c_20.xyz = vec3(0.0, 0.0, 0.0);
					  c_20.w = tmpvar_4.w;
					  c_19.w = c_20.w;
					  c_19.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * tmpvar_14);
					  c_3.xyz = c_19.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2D unity_Lightmap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in highp vec4 vs_TEXCOORD4;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					lowp vec3 u_xlat10_4;
					mediump vec3 u_xlat16_7;
					mediump float u_xlat16_12;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					#ifdef UNITY_ADRENO_ES3
					    u_xlat16_2.x = min(max(u_xlat16_2.x, 0.0), 1.0);
					#else
					    u_xlat16_2.x = clamp(u_xlat16_2.x, 0.0, 1.0);
					#endif
					    vec3 txVec563 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec563, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_12 = u_xlat10_0.x * u_xlat16_7.x;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_12 = max(u_xlat16_12, 0.0);
					    u_xlat16_12 = (-u_xlat16_12) + 1.0;
					    u_xlat16_2.x = u_xlat16_12 * u_xlat16_2.x;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_7.xyz = u_xlat16_7.xxx * u_xlat10_0.xyz;
					    u_xlat16_7.xyz = min(u_xlat10_1.xyz, u_xlat16_7.xyz);
					    u_xlat16_3.xyz = (-u_xlat16_2.xxx) * _LightColor0.xyz + u_xlat10_1.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_7.xyz, u_xlat16_3.xyz);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_4.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_4.xyz;
					    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat10_1.xyz;
					    SV_Target0.xyz = u_xlat16_2.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2D unity_Lightmap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in highp vec4 vs_TEXCOORD4;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					lowp vec3 u_xlat10_4;
					mediump vec3 u_xlat16_7;
					mediump float u_xlat16_12;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					#ifdef UNITY_ADRENO_ES3
					    u_xlat16_2.x = min(max(u_xlat16_2.x, 0.0), 1.0);
					#else
					    u_xlat16_2.x = clamp(u_xlat16_2.x, 0.0, 1.0);
					#endif
					    vec3 txVec600 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec600, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_12 = u_xlat10_0.x * u_xlat16_7.x;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_12 = max(u_xlat16_12, 0.0);
					    u_xlat16_12 = (-u_xlat16_12) + 1.0;
					    u_xlat16_2.x = u_xlat16_12 * u_xlat16_2.x;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_7.xyz = u_xlat16_7.xxx * u_xlat10_0.xyz;
					    u_xlat16_7.xyz = min(u_xlat10_1.xyz, u_xlat16_7.xyz);
					    u_xlat16_3.xyz = (-u_xlat16_2.xxx) * _LightColor0.xyz + u_xlat10_1.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_7.xyz, u_xlat16_3.xyz);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_4.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_4.xyz;
					    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat10_1.xyz;
					    SV_Target0.xyz = u_xlat16_2.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2D unity_Lightmap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in highp vec4 vs_TEXCOORD4;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					lowp vec3 u_xlat10_4;
					mediump vec3 u_xlat16_7;
					mediump float u_xlat16_12;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					#ifdef UNITY_ADRENO_ES3
					    u_xlat16_2.x = min(max(u_xlat16_2.x, 0.0), 1.0);
					#else
					    u_xlat16_2.x = clamp(u_xlat16_2.x, 0.0, 1.0);
					#endif
					    vec3 txVec634 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec634, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_12 = u_xlat10_0.x * u_xlat16_7.x;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_12 = max(u_xlat16_12, 0.0);
					    u_xlat16_12 = (-u_xlat16_12) + 1.0;
					    u_xlat16_2.x = u_xlat16_12 * u_xlat16_2.x;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_7.xyz = u_xlat16_7.xxx * u_xlat10_0.xyz;
					    u_xlat16_7.xyz = min(u_xlat10_1.xyz, u_xlat16_7.xyz);
					    u_xlat16_3.xyz = (-u_xlat16_2.xxx) * _LightColor0.xyz + u_xlat10_1.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_7.xyz, u_xlat16_3.xyz);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_4.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_4.xyz;
					    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat10_1.xyz;
					    SV_Target0.xyz = u_xlat16_2.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_7.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_7.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_7.z;
					  highp vec3 lightColor0_19;
					  lightColor0_19 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_20;
					  lightColor1_20 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_21;
					  lightColor2_21 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_22;
					  lightColor3_22 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_23;
					  lightAttenSq_23 = unity_4LightAtten0;
					  highp vec3 normal_24;
					  normal_24 = worldNormal_3;
					  highp vec3 col_25;
					  highp vec4 ndotl_26;
					  highp vec4 lengthSq_27;
					  highp vec4 tmpvar_28;
					  tmpvar_28 = (unity_4LightPosX0 - tmpvar_7.x);
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosY0 - tmpvar_7.y);
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosZ0 - tmpvar_7.z);
					  lengthSq_27 = (tmpvar_28 * tmpvar_28);
					  lengthSq_27 = (lengthSq_27 + (tmpvar_29 * tmpvar_29));
					  lengthSq_27 = (lengthSq_27 + (tmpvar_30 * tmpvar_30));
					  ndotl_26 = (tmpvar_28 * normal_24.x);
					  ndotl_26 = (ndotl_26 + (tmpvar_29 * normal_24.y));
					  ndotl_26 = (ndotl_26 + (tmpvar_30 * normal_24.z));
					  highp vec4 tmpvar_31;
					  tmpvar_31 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_26 * inversesqrt(lengthSq_27)));
					  ndotl_26 = tmpvar_31;
					  highp vec4 tmpvar_32;
					  tmpvar_32 = (tmpvar_31 * (1.0/((1.0 + 
					    (lengthSq_27 * lightAttenSq_23)
					  ))));
					  col_25 = (lightColor0_19 * tmpvar_32.x);
					  col_25 = (col_25 + (lightColor1_20 * tmpvar_32.y));
					  col_25 = (col_25 + (lightColor2_21 * tmpvar_32.z));
					  col_25 = (col_25 + (lightColor3_22 * tmpvar_32.w));
					  tmpvar_5 = col_25;
					  mediump vec3 normal_33;
					  normal_33 = worldNormal_3;
					  mediump vec3 ambient_34;
					  mediump vec4 tmpvar_35;
					  tmpvar_35.w = 1.0;
					  tmpvar_35.xyz = normal_33;
					  mediump vec3 res_36;
					  mediump vec3 x_37;
					  x_37.x = dot (unity_SHAr, tmpvar_35);
					  x_37.y = dot (unity_SHAg, tmpvar_35);
					  x_37.z = dot (unity_SHAb, tmpvar_35);
					  mediump vec3 x1_38;
					  mediump vec4 tmpvar_39;
					  tmpvar_39 = (normal_33.xyzz * normal_33.yzzx);
					  x1_38.x = dot (unity_SHBr, tmpvar_39);
					  x1_38.y = dot (unity_SHBg, tmpvar_39);
					  x1_38.z = dot (unity_SHBb, tmpvar_39);
					  res_36 = (x_37 + (x1_38 + (unity_SHC.xyz * 
					    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
					  )));
					  res_36 = max (((1.055 * 
					    pow (max (res_36, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  ambient_34 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), res_36));
					  tmpvar_5 = ambient_34;
					  gl_Position = (glstate_matrix_mvp * tmpvar_6);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = ambient_34;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_7 = (tmpvar_8.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_9;
					  tmpvar_9 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_12;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7 * tmpvar_1) * diff_15);
					  c_14.w = tmpvar_8.w;
					  c_13.w = c_14.w;
					  c_13.xyz = (c_14.xyz + (tmpvar_7 * xlv_TEXCOORD4));
					  c_4.xyz = c_13.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_7.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_7.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_7.z;
					  highp vec3 lightColor0_19;
					  lightColor0_19 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_20;
					  lightColor1_20 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_21;
					  lightColor2_21 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_22;
					  lightColor3_22 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_23;
					  lightAttenSq_23 = unity_4LightAtten0;
					  highp vec3 normal_24;
					  normal_24 = worldNormal_3;
					  highp vec3 col_25;
					  highp vec4 ndotl_26;
					  highp vec4 lengthSq_27;
					  highp vec4 tmpvar_28;
					  tmpvar_28 = (unity_4LightPosX0 - tmpvar_7.x);
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosY0 - tmpvar_7.y);
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosZ0 - tmpvar_7.z);
					  lengthSq_27 = (tmpvar_28 * tmpvar_28);
					  lengthSq_27 = (lengthSq_27 + (tmpvar_29 * tmpvar_29));
					  lengthSq_27 = (lengthSq_27 + (tmpvar_30 * tmpvar_30));
					  ndotl_26 = (tmpvar_28 * normal_24.x);
					  ndotl_26 = (ndotl_26 + (tmpvar_29 * normal_24.y));
					  ndotl_26 = (ndotl_26 + (tmpvar_30 * normal_24.z));
					  highp vec4 tmpvar_31;
					  tmpvar_31 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_26 * inversesqrt(lengthSq_27)));
					  ndotl_26 = tmpvar_31;
					  highp vec4 tmpvar_32;
					  tmpvar_32 = (tmpvar_31 * (1.0/((1.0 + 
					    (lengthSq_27 * lightAttenSq_23)
					  ))));
					  col_25 = (lightColor0_19 * tmpvar_32.x);
					  col_25 = (col_25 + (lightColor1_20 * tmpvar_32.y));
					  col_25 = (col_25 + (lightColor2_21 * tmpvar_32.z));
					  col_25 = (col_25 + (lightColor3_22 * tmpvar_32.w));
					  tmpvar_5 = col_25;
					  mediump vec3 normal_33;
					  normal_33 = worldNormal_3;
					  mediump vec3 ambient_34;
					  mediump vec4 tmpvar_35;
					  tmpvar_35.w = 1.0;
					  tmpvar_35.xyz = normal_33;
					  mediump vec3 res_36;
					  mediump vec3 x_37;
					  x_37.x = dot (unity_SHAr, tmpvar_35);
					  x_37.y = dot (unity_SHAg, tmpvar_35);
					  x_37.z = dot (unity_SHAb, tmpvar_35);
					  mediump vec3 x1_38;
					  mediump vec4 tmpvar_39;
					  tmpvar_39 = (normal_33.xyzz * normal_33.yzzx);
					  x1_38.x = dot (unity_SHBr, tmpvar_39);
					  x1_38.y = dot (unity_SHBg, tmpvar_39);
					  x1_38.z = dot (unity_SHBb, tmpvar_39);
					  res_36 = (x_37 + (x1_38 + (unity_SHC.xyz * 
					    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
					  )));
					  res_36 = max (((1.055 * 
					    pow (max (res_36, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  ambient_34 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), res_36));
					  tmpvar_5 = ambient_34;
					  gl_Position = (glstate_matrix_mvp * tmpvar_6);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = ambient_34;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_7 = (tmpvar_8.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_9;
					  tmpvar_9 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_12;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7 * tmpvar_1) * diff_15);
					  c_14.w = tmpvar_8.w;
					  c_13.w = c_14.w;
					  c_13.xyz = (c_14.xyz + (tmpvar_7 * xlv_TEXCOORD4));
					  c_4.xyz = c_13.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_7.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_7.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_7.z;
					  highp vec3 lightColor0_19;
					  lightColor0_19 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_20;
					  lightColor1_20 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_21;
					  lightColor2_21 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_22;
					  lightColor3_22 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_23;
					  lightAttenSq_23 = unity_4LightAtten0;
					  highp vec3 normal_24;
					  normal_24 = worldNormal_3;
					  highp vec3 col_25;
					  highp vec4 ndotl_26;
					  highp vec4 lengthSq_27;
					  highp vec4 tmpvar_28;
					  tmpvar_28 = (unity_4LightPosX0 - tmpvar_7.x);
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosY0 - tmpvar_7.y);
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosZ0 - tmpvar_7.z);
					  lengthSq_27 = (tmpvar_28 * tmpvar_28);
					  lengthSq_27 = (lengthSq_27 + (tmpvar_29 * tmpvar_29));
					  lengthSq_27 = (lengthSq_27 + (tmpvar_30 * tmpvar_30));
					  ndotl_26 = (tmpvar_28 * normal_24.x);
					  ndotl_26 = (ndotl_26 + (tmpvar_29 * normal_24.y));
					  ndotl_26 = (ndotl_26 + (tmpvar_30 * normal_24.z));
					  highp vec4 tmpvar_31;
					  tmpvar_31 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_26 * inversesqrt(lengthSq_27)));
					  ndotl_26 = tmpvar_31;
					  highp vec4 tmpvar_32;
					  tmpvar_32 = (tmpvar_31 * (1.0/((1.0 + 
					    (lengthSq_27 * lightAttenSq_23)
					  ))));
					  col_25 = (lightColor0_19 * tmpvar_32.x);
					  col_25 = (col_25 + (lightColor1_20 * tmpvar_32.y));
					  col_25 = (col_25 + (lightColor2_21 * tmpvar_32.z));
					  col_25 = (col_25 + (lightColor3_22 * tmpvar_32.w));
					  tmpvar_5 = col_25;
					  mediump vec3 normal_33;
					  normal_33 = worldNormal_3;
					  mediump vec3 ambient_34;
					  mediump vec4 tmpvar_35;
					  tmpvar_35.w = 1.0;
					  tmpvar_35.xyz = normal_33;
					  mediump vec3 res_36;
					  mediump vec3 x_37;
					  x_37.x = dot (unity_SHAr, tmpvar_35);
					  x_37.y = dot (unity_SHAg, tmpvar_35);
					  x_37.z = dot (unity_SHAb, tmpvar_35);
					  mediump vec3 x1_38;
					  mediump vec4 tmpvar_39;
					  tmpvar_39 = (normal_33.xyzz * normal_33.yzzx);
					  x1_38.x = dot (unity_SHBr, tmpvar_39);
					  x1_38.y = dot (unity_SHBg, tmpvar_39);
					  x1_38.z = dot (unity_SHBb, tmpvar_39);
					  res_36 = (x_37 + (x1_38 + (unity_SHC.xyz * 
					    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
					  )));
					  res_36 = max (((1.055 * 
					    pow (max (res_36, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  ambient_34 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), res_36));
					  tmpvar_5 = ambient_34;
					  gl_Position = (glstate_matrix_mvp * tmpvar_6);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = ambient_34;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_7 = (tmpvar_8.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_9;
					  tmpvar_9 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_12;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7 * tmpvar_1) * diff_15);
					  c_14.w = tmpvar_8.w;
					  c_13.w = c_14.w;
					  c_13.xyz = (c_14.xyz + (tmpvar_7 * xlv_TEXCOORD4));
					  c_4.xyz = c_13.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					mediump vec4 u_xlat16_2;
					vec4 u_xlat3;
					lowp vec3 u_xlat10_3;
					vec4 u_xlat4;
					mediump vec3 u_xlat16_5;
					mediump vec3 u_xlat16_6;
					vec3 u_xlat7;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat7.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat7.xyz;
					    u_xlat1.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat7.xyz = u_xlat7.xyz * u_xlat1.xxx;
					    u_xlat1.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat1.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat1.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat2.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat2.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat2.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat2.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat2.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = dot(u_xlat1.xyw, u_xlat1.xyw);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat1 = u_xlat1.xywz * u_xlat2.xxxx;
					    u_xlat10_3.xyz = u_xlat7.xyz * u_xlat1.zxy;
					    u_xlat10_3.xyz = u_xlat1.yzx * u_xlat7.yzx + (-u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xxx * u_xlat10_3.xyz;
					    vs_TEXCOORD1.y = u_xlat10_3.x;
					    vs_TEXCOORD1.x = u_xlat7.z;
					    vs_TEXCOORD1.z = u_xlat1.x;
					    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;
					    vs_TEXCOORD1.w = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat7.x;
					    vs_TEXCOORD3.x = u_xlat7.y;
					    vs_TEXCOORD2.y = u_xlat10_3.y;
					    vs_TEXCOORD3.y = u_xlat10_3.z;
					    vs_TEXCOORD2.z = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat1.z;
					    vs_TEXCOORD3.w = u_xlat2.z;
					    u_xlat0 = (-u_xlat2.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat0;
					    u_xlat0 = u_xlat0 * u_xlat0;
					    u_xlat4 = (-u_xlat2.xxxx) + unity_4LightPosX0;
					    u_xlat2 = (-u_xlat2.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;
					    u_xlat0 = u_xlat2 * u_xlat2 + u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat1.zzwz + u_xlat3;
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat3;
					    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat2;
					    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
					    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
					    u_xlat16_2 = u_xlat1.yzwx * u_xlat1.xywz;
					    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
					    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
					    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
					    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
					    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
					    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
					    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
					    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat1.xyz = log2(u_xlat16_5.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat1.xyz = exp2(u_xlat1.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat10_1.xyz * _LightColor0.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    SV_Target0.xyz = u_xlat16_2.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					mediump vec4 u_xlat16_2;
					vec4 u_xlat3;
					lowp vec3 u_xlat10_3;
					vec4 u_xlat4;
					mediump vec3 u_xlat16_5;
					mediump vec3 u_xlat16_6;
					vec3 u_xlat7;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat7.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat7.xyz;
					    u_xlat1.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat7.xyz = u_xlat7.xyz * u_xlat1.xxx;
					    u_xlat1.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat1.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat1.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat2.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat2.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat2.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat2.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat2.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = dot(u_xlat1.xyw, u_xlat1.xyw);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat1 = u_xlat1.xywz * u_xlat2.xxxx;
					    u_xlat10_3.xyz = u_xlat7.xyz * u_xlat1.zxy;
					    u_xlat10_3.xyz = u_xlat1.yzx * u_xlat7.yzx + (-u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xxx * u_xlat10_3.xyz;
					    vs_TEXCOORD1.y = u_xlat10_3.x;
					    vs_TEXCOORD1.x = u_xlat7.z;
					    vs_TEXCOORD1.z = u_xlat1.x;
					    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;
					    vs_TEXCOORD1.w = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat7.x;
					    vs_TEXCOORD3.x = u_xlat7.y;
					    vs_TEXCOORD2.y = u_xlat10_3.y;
					    vs_TEXCOORD3.y = u_xlat10_3.z;
					    vs_TEXCOORD2.z = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat1.z;
					    vs_TEXCOORD3.w = u_xlat2.z;
					    u_xlat0 = (-u_xlat2.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat0;
					    u_xlat0 = u_xlat0 * u_xlat0;
					    u_xlat4 = (-u_xlat2.xxxx) + unity_4LightPosX0;
					    u_xlat2 = (-u_xlat2.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;
					    u_xlat0 = u_xlat2 * u_xlat2 + u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat1.zzwz + u_xlat3;
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat3;
					    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat2;
					    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
					    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
					    u_xlat16_2 = u_xlat1.yzwx * u_xlat1.xywz;
					    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
					    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
					    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
					    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
					    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
					    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
					    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
					    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat1.xyz = log2(u_xlat16_5.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat1.xyz = exp2(u_xlat1.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat10_1.xyz * _LightColor0.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    SV_Target0.xyz = u_xlat16_2.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					mediump vec4 u_xlat16_2;
					vec4 u_xlat3;
					lowp vec3 u_xlat10_3;
					vec4 u_xlat4;
					mediump vec3 u_xlat16_5;
					mediump vec3 u_xlat16_6;
					vec3 u_xlat7;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat7.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat7.xyz;
					    u_xlat1.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat7.xyz = u_xlat7.xyz * u_xlat1.xxx;
					    u_xlat1.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat1.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat1.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat2.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat2.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat2.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat2.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat2.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = dot(u_xlat1.xyw, u_xlat1.xyw);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat1 = u_xlat1.xywz * u_xlat2.xxxx;
					    u_xlat10_3.xyz = u_xlat7.xyz * u_xlat1.zxy;
					    u_xlat10_3.xyz = u_xlat1.yzx * u_xlat7.yzx + (-u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xxx * u_xlat10_3.xyz;
					    vs_TEXCOORD1.y = u_xlat10_3.x;
					    vs_TEXCOORD1.x = u_xlat7.z;
					    vs_TEXCOORD1.z = u_xlat1.x;
					    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;
					    vs_TEXCOORD1.w = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat7.x;
					    vs_TEXCOORD3.x = u_xlat7.y;
					    vs_TEXCOORD2.y = u_xlat10_3.y;
					    vs_TEXCOORD3.y = u_xlat10_3.z;
					    vs_TEXCOORD2.z = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat1.z;
					    vs_TEXCOORD3.w = u_xlat2.z;
					    u_xlat0 = (-u_xlat2.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat0;
					    u_xlat0 = u_xlat0 * u_xlat0;
					    u_xlat4 = (-u_xlat2.xxxx) + unity_4LightPosX0;
					    u_xlat2 = (-u_xlat2.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;
					    u_xlat0 = u_xlat2 * u_xlat2 + u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat1.zzwz + u_xlat3;
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat3;
					    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat2;
					    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
					    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
					    u_xlat16_2 = u_xlat1.yzwx * u_xlat1.xywz;
					    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
					    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
					    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
					    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
					    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
					    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
					    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
					    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat1.xyz = log2(u_xlat16_5.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat1.xyz = exp2(u_xlat1.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat10_1.xyz * _LightColor0.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    SV_Target0.xyz = u_xlat16_2.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_7 = tmpvar_8.xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_7.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_7.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_7.z;
					  highp vec3 lightColor0_20;
					  lightColor0_20 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_21;
					  lightColor1_21 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_22;
					  lightColor2_22 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_23;
					  lightColor3_23 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_24;
					  lightAttenSq_24 = unity_4LightAtten0;
					  highp vec3 normal_25;
					  normal_25 = worldNormal_3;
					  highp vec3 col_26;
					  highp vec4 ndotl_27;
					  highp vec4 lengthSq_28;
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosX0 - tmpvar_8.x);
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosY0 - tmpvar_8.y);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosZ0 - tmpvar_8.z);
					  lengthSq_28 = (tmpvar_29 * tmpvar_29);
					  lengthSq_28 = (lengthSq_28 + (tmpvar_30 * tmpvar_30));
					  lengthSq_28 = (lengthSq_28 + (tmpvar_31 * tmpvar_31));
					  ndotl_27 = (tmpvar_29 * normal_25.x);
					  ndotl_27 = (ndotl_27 + (tmpvar_30 * normal_25.y));
					  ndotl_27 = (ndotl_27 + (tmpvar_31 * normal_25.z));
					  highp vec4 tmpvar_32;
					  tmpvar_32 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_27 * inversesqrt(lengthSq_28)));
					  ndotl_27 = tmpvar_32;
					  highp vec4 tmpvar_33;
					  tmpvar_33 = (tmpvar_32 * (1.0/((1.0 + 
					    (lengthSq_28 * lightAttenSq_24)
					  ))));
					  col_26 = (lightColor0_20 * tmpvar_33.x);
					  col_26 = (col_26 + (lightColor1_21 * tmpvar_33.y));
					  col_26 = (col_26 + (lightColor2_22 * tmpvar_33.z));
					  col_26 = (col_26 + (lightColor3_23 * tmpvar_33.w));
					  tmpvar_5 = col_26;
					  mediump vec3 normal_34;
					  normal_34 = worldNormal_3;
					  mediump vec3 ambient_35;
					  mediump vec4 tmpvar_36;
					  tmpvar_36.w = 1.0;
					  tmpvar_36.xyz = normal_34;
					  mediump vec3 res_37;
					  mediump vec3 x_38;
					  x_38.x = dot (unity_SHAr, tmpvar_36);
					  x_38.y = dot (unity_SHAg, tmpvar_36);
					  x_38.z = dot (unity_SHAb, tmpvar_36);
					  mediump vec3 x1_39;
					  mediump vec4 tmpvar_40;
					  tmpvar_40 = (normal_34.xyzz * normal_34.yzzx);
					  x1_39.x = dot (unity_SHBr, tmpvar_40);
					  x1_39.y = dot (unity_SHBg, tmpvar_40);
					  x1_39.z = dot (unity_SHBb, tmpvar_40);
					  res_37 = (x_38 + (x1_39 + (unity_SHC.xyz * 
					    ((normal_34.x * normal_34.x) - (normal_34.y * normal_34.y))
					  )));
					  res_37 = max (((1.055 * 
					    pow (max (res_37, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  ambient_35 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), res_37));
					  tmpvar_5 = ambient_35;
					  gl_Position = (glstate_matrix_mvp * tmpvar_6);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = ambient_35;
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_8);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_8 = (tmpvar_9.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_10;
					  tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_11;
					  highp float lightShadowDataX_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = _LightShadowData.x;
					  lightShadowDataX_12 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_12);
					  tmpvar_11 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_17;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_18;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_18) * diff_21);
					  c_20.w = tmpvar_9.w;
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_8 * xlv_TEXCOORD4));
					  c_5.xyz = c_19.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_7 = tmpvar_8.xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_7.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_7.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_7.z;
					  highp vec3 lightColor0_20;
					  lightColor0_20 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_21;
					  lightColor1_21 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_22;
					  lightColor2_22 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_23;
					  lightColor3_23 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_24;
					  lightAttenSq_24 = unity_4LightAtten0;
					  highp vec3 normal_25;
					  normal_25 = worldNormal_3;
					  highp vec3 col_26;
					  highp vec4 ndotl_27;
					  highp vec4 lengthSq_28;
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosX0 - tmpvar_8.x);
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosY0 - tmpvar_8.y);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosZ0 - tmpvar_8.z);
					  lengthSq_28 = (tmpvar_29 * tmpvar_29);
					  lengthSq_28 = (lengthSq_28 + (tmpvar_30 * tmpvar_30));
					  lengthSq_28 = (lengthSq_28 + (tmpvar_31 * tmpvar_31));
					  ndotl_27 = (tmpvar_29 * normal_25.x);
					  ndotl_27 = (ndotl_27 + (tmpvar_30 * normal_25.y));
					  ndotl_27 = (ndotl_27 + (tmpvar_31 * normal_25.z));
					  highp vec4 tmpvar_32;
					  tmpvar_32 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_27 * inversesqrt(lengthSq_28)));
					  ndotl_27 = tmpvar_32;
					  highp vec4 tmpvar_33;
					  tmpvar_33 = (tmpvar_32 * (1.0/((1.0 + 
					    (lengthSq_28 * lightAttenSq_24)
					  ))));
					  col_26 = (lightColor0_20 * tmpvar_33.x);
					  col_26 = (col_26 + (lightColor1_21 * tmpvar_33.y));
					  col_26 = (col_26 + (lightColor2_22 * tmpvar_33.z));
					  col_26 = (col_26 + (lightColor3_23 * tmpvar_33.w));
					  tmpvar_5 = col_26;
					  mediump vec3 normal_34;
					  normal_34 = worldNormal_3;
					  mediump vec3 ambient_35;
					  mediump vec4 tmpvar_36;
					  tmpvar_36.w = 1.0;
					  tmpvar_36.xyz = normal_34;
					  mediump vec3 res_37;
					  mediump vec3 x_38;
					  x_38.x = dot (unity_SHAr, tmpvar_36);
					  x_38.y = dot (unity_SHAg, tmpvar_36);
					  x_38.z = dot (unity_SHAb, tmpvar_36);
					  mediump vec3 x1_39;
					  mediump vec4 tmpvar_40;
					  tmpvar_40 = (normal_34.xyzz * normal_34.yzzx);
					  x1_39.x = dot (unity_SHBr, tmpvar_40);
					  x1_39.y = dot (unity_SHBg, tmpvar_40);
					  x1_39.z = dot (unity_SHBb, tmpvar_40);
					  res_37 = (x_38 + (x1_39 + (unity_SHC.xyz * 
					    ((normal_34.x * normal_34.x) - (normal_34.y * normal_34.y))
					  )));
					  res_37 = max (((1.055 * 
					    pow (max (res_37, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  ambient_35 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), res_37));
					  tmpvar_5 = ambient_35;
					  gl_Position = (glstate_matrix_mvp * tmpvar_6);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = ambient_35;
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_8);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_8 = (tmpvar_9.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_10;
					  tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_11;
					  highp float lightShadowDataX_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = _LightShadowData.x;
					  lightShadowDataX_12 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_12);
					  tmpvar_11 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_17;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_18;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_18) * diff_21);
					  c_20.w = tmpvar_9.w;
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_8 * xlv_TEXCOORD4));
					  c_5.xyz = c_19.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_7 = tmpvar_8.xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_7.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_7.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_7.z;
					  highp vec3 lightColor0_20;
					  lightColor0_20 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_21;
					  lightColor1_21 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_22;
					  lightColor2_22 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_23;
					  lightColor3_23 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_24;
					  lightAttenSq_24 = unity_4LightAtten0;
					  highp vec3 normal_25;
					  normal_25 = worldNormal_3;
					  highp vec3 col_26;
					  highp vec4 ndotl_27;
					  highp vec4 lengthSq_28;
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosX0 - tmpvar_8.x);
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosY0 - tmpvar_8.y);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosZ0 - tmpvar_8.z);
					  lengthSq_28 = (tmpvar_29 * tmpvar_29);
					  lengthSq_28 = (lengthSq_28 + (tmpvar_30 * tmpvar_30));
					  lengthSq_28 = (lengthSq_28 + (tmpvar_31 * tmpvar_31));
					  ndotl_27 = (tmpvar_29 * normal_25.x);
					  ndotl_27 = (ndotl_27 + (tmpvar_30 * normal_25.y));
					  ndotl_27 = (ndotl_27 + (tmpvar_31 * normal_25.z));
					  highp vec4 tmpvar_32;
					  tmpvar_32 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_27 * inversesqrt(lengthSq_28)));
					  ndotl_27 = tmpvar_32;
					  highp vec4 tmpvar_33;
					  tmpvar_33 = (tmpvar_32 * (1.0/((1.0 + 
					    (lengthSq_28 * lightAttenSq_24)
					  ))));
					  col_26 = (lightColor0_20 * tmpvar_33.x);
					  col_26 = (col_26 + (lightColor1_21 * tmpvar_33.y));
					  col_26 = (col_26 + (lightColor2_22 * tmpvar_33.z));
					  col_26 = (col_26 + (lightColor3_23 * tmpvar_33.w));
					  tmpvar_5 = col_26;
					  mediump vec3 normal_34;
					  normal_34 = worldNormal_3;
					  mediump vec3 ambient_35;
					  mediump vec4 tmpvar_36;
					  tmpvar_36.w = 1.0;
					  tmpvar_36.xyz = normal_34;
					  mediump vec3 res_37;
					  mediump vec3 x_38;
					  x_38.x = dot (unity_SHAr, tmpvar_36);
					  x_38.y = dot (unity_SHAg, tmpvar_36);
					  x_38.z = dot (unity_SHAb, tmpvar_36);
					  mediump vec3 x1_39;
					  mediump vec4 tmpvar_40;
					  tmpvar_40 = (normal_34.xyzz * normal_34.yzzx);
					  x1_39.x = dot (unity_SHBr, tmpvar_40);
					  x1_39.y = dot (unity_SHBg, tmpvar_40);
					  x1_39.z = dot (unity_SHBb, tmpvar_40);
					  res_37 = (x_38 + (x1_39 + (unity_SHC.xyz * 
					    ((normal_34.x * normal_34.x) - (normal_34.y * normal_34.y))
					  )));
					  res_37 = max (((1.055 * 
					    pow (max (res_37, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  ambient_35 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), res_37));
					  tmpvar_5 = ambient_35;
					  gl_Position = (glstate_matrix_mvp * tmpvar_6);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = ambient_35;
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_8);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_8 = (tmpvar_9.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_10;
					  tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_11;
					  highp float lightShadowDataX_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = _LightShadowData.x;
					  lightShadowDataX_12 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_12);
					  tmpvar_11 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_17;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_18;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_18) * diff_21);
					  c_20.w = tmpvar_9.w;
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_8 * xlv_TEXCOORD4));
					  c_5.xyz = c_19.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					mediump vec4 u_xlat16_2;
					vec4 u_xlat3;
					lowp vec3 u_xlat10_3;
					vec4 u_xlat4;
					mediump vec3 u_xlat16_5;
					mediump vec3 u_xlat16_6;
					vec3 u_xlat7;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat7.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat7.xyz;
					    u_xlat1.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat7.xyz = u_xlat7.xyz * u_xlat1.xxx;
					    u_xlat1.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat1.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat1.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat2.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat2.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat2.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat2.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat2.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = dot(u_xlat1.xyw, u_xlat1.xyw);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat1 = u_xlat1.xywz * u_xlat2.xxxx;
					    u_xlat10_3.xyz = u_xlat7.xyz * u_xlat1.zxy;
					    u_xlat10_3.xyz = u_xlat1.yzx * u_xlat7.yzx + (-u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xxx * u_xlat10_3.xyz;
					    vs_TEXCOORD1.y = u_xlat10_3.x;
					    vs_TEXCOORD1.x = u_xlat7.z;
					    vs_TEXCOORD1.z = u_xlat1.x;
					    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;
					    vs_TEXCOORD1.w = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat7.x;
					    vs_TEXCOORD3.x = u_xlat7.y;
					    vs_TEXCOORD2.y = u_xlat10_3.y;
					    vs_TEXCOORD3.y = u_xlat10_3.z;
					    vs_TEXCOORD2.z = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat1.z;
					    vs_TEXCOORD3.w = u_xlat2.z;
					    u_xlat0 = (-u_xlat2.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat0;
					    u_xlat0 = u_xlat0 * u_xlat0;
					    u_xlat4 = (-u_xlat2.xxxx) + unity_4LightPosX0;
					    u_xlat2 = (-u_xlat2.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;
					    u_xlat0 = u_xlat2 * u_xlat2 + u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat1.zzwz + u_xlat3;
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat3;
					    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat2;
					    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
					    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
					    u_xlat16_2 = u_xlat1.yzwx * u_xlat1.xywz;
					    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
					    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
					    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
					    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
					    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
					    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
					    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
					    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat1.xyz = log2(u_xlat16_5.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat1.xyz = exp2(u_xlat1.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    vec3 txVec601 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec601, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_7.xyz = u_xlat16_7.xxx * _LightColor0.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat10_1.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    SV_Target0.xyz = u_xlat16_2.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					mediump vec4 u_xlat16_2;
					vec4 u_xlat3;
					lowp vec3 u_xlat10_3;
					vec4 u_xlat4;
					mediump vec3 u_xlat16_5;
					mediump vec3 u_xlat16_6;
					vec3 u_xlat7;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat7.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat7.xyz;
					    u_xlat1.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat7.xyz = u_xlat7.xyz * u_xlat1.xxx;
					    u_xlat1.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat1.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat1.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat2.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat2.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat2.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat2.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat2.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = dot(u_xlat1.xyw, u_xlat1.xyw);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat1 = u_xlat1.xywz * u_xlat2.xxxx;
					    u_xlat10_3.xyz = u_xlat7.xyz * u_xlat1.zxy;
					    u_xlat10_3.xyz = u_xlat1.yzx * u_xlat7.yzx + (-u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xxx * u_xlat10_3.xyz;
					    vs_TEXCOORD1.y = u_xlat10_3.x;
					    vs_TEXCOORD1.x = u_xlat7.z;
					    vs_TEXCOORD1.z = u_xlat1.x;
					    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;
					    vs_TEXCOORD1.w = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat7.x;
					    vs_TEXCOORD3.x = u_xlat7.y;
					    vs_TEXCOORD2.y = u_xlat10_3.y;
					    vs_TEXCOORD3.y = u_xlat10_3.z;
					    vs_TEXCOORD2.z = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat1.z;
					    vs_TEXCOORD3.w = u_xlat2.z;
					    u_xlat0 = (-u_xlat2.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat0;
					    u_xlat0 = u_xlat0 * u_xlat0;
					    u_xlat4 = (-u_xlat2.xxxx) + unity_4LightPosX0;
					    u_xlat2 = (-u_xlat2.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;
					    u_xlat0 = u_xlat2 * u_xlat2 + u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat1.zzwz + u_xlat3;
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat3;
					    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat2;
					    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
					    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
					    u_xlat16_2 = u_xlat1.yzwx * u_xlat1.xywz;
					    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
					    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
					    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
					    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
					    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
					    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
					    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
					    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat1.xyz = log2(u_xlat16_5.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat1.xyz = exp2(u_xlat1.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    vec3 txVec564 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec564, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_7.xyz = u_xlat16_7.xxx * _LightColor0.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat10_1.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    SV_Target0.xyz = u_xlat16_2.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					mediump vec4 u_xlat16_2;
					vec4 u_xlat3;
					lowp vec3 u_xlat10_3;
					vec4 u_xlat4;
					mediump vec3 u_xlat16_5;
					mediump vec3 u_xlat16_6;
					vec3 u_xlat7;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat7.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat7.xyz;
					    u_xlat1.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat7.xyz = u_xlat7.xyz * u_xlat1.xxx;
					    u_xlat1.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat1.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat1.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat2.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat2.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat2.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat2.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat2.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = dot(u_xlat1.xyw, u_xlat1.xyw);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat1 = u_xlat1.xywz * u_xlat2.xxxx;
					    u_xlat10_3.xyz = u_xlat7.xyz * u_xlat1.zxy;
					    u_xlat10_3.xyz = u_xlat1.yzx * u_xlat7.yzx + (-u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xxx * u_xlat10_3.xyz;
					    vs_TEXCOORD1.y = u_xlat10_3.x;
					    vs_TEXCOORD1.x = u_xlat7.z;
					    vs_TEXCOORD1.z = u_xlat1.x;
					    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;
					    vs_TEXCOORD1.w = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat7.x;
					    vs_TEXCOORD3.x = u_xlat7.y;
					    vs_TEXCOORD2.y = u_xlat10_3.y;
					    vs_TEXCOORD3.y = u_xlat10_3.z;
					    vs_TEXCOORD2.z = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat1.z;
					    vs_TEXCOORD3.w = u_xlat2.z;
					    u_xlat0 = (-u_xlat2.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat0;
					    u_xlat0 = u_xlat0 * u_xlat0;
					    u_xlat4 = (-u_xlat2.xxxx) + unity_4LightPosX0;
					    u_xlat2 = (-u_xlat2.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;
					    u_xlat0 = u_xlat2 * u_xlat2 + u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat1.zzwz + u_xlat3;
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat3;
					    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat2;
					    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
					    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
					    u_xlat16_2 = u_xlat1.yzwx * u_xlat1.xywz;
					    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
					    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
					    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
					    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
					    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
					    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
					    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
					    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat1.xyz = log2(u_xlat16_5.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat1.xyz = exp2(u_xlat1.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    vec3 txVec635 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec635, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_7.xyz = u_xlat16_7.xxx * _LightColor0.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat10_1.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    SV_Target0.xyz = u_xlat16_2.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_7.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_7.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_7.z;
					  mediump vec3 normal_19;
					  normal_19 = worldNormal_3;
					  mediump vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = normal_19;
					  mediump vec3 res_21;
					  mediump vec3 x_22;
					  x_22.x = dot (unity_SHAr, tmpvar_20);
					  x_22.y = dot (unity_SHAg, tmpvar_20);
					  x_22.z = dot (unity_SHAb, tmpvar_20);
					  mediump vec3 x1_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24 = (normal_19.xyzz * normal_19.yzzx);
					  x1_23.x = dot (unity_SHBr, tmpvar_24);
					  x1_23.y = dot (unity_SHBg, tmpvar_24);
					  x1_23.z = dot (unity_SHBb, tmpvar_24);
					  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
					    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
					  )));
					  res_21 = max (((1.055 * 
					    pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), res_21);
					  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_7 = (tmpvar_8.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_9;
					  tmpvar_9 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_12;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7 * tmpvar_1) * diff_15);
					  c_14.w = tmpvar_8.w;
					  c_13.w = c_14.w;
					  c_13.xyz = (c_14.xyz + (tmpvar_7 * xlv_TEXCOORD4));
					  highp float tmpvar_17;
					  tmpvar_17 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_13.xyz, vec3(tmpvar_17));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_7.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_7.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_7.z;
					  mediump vec3 normal_19;
					  normal_19 = worldNormal_3;
					  mediump vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = normal_19;
					  mediump vec3 res_21;
					  mediump vec3 x_22;
					  x_22.x = dot (unity_SHAr, tmpvar_20);
					  x_22.y = dot (unity_SHAg, tmpvar_20);
					  x_22.z = dot (unity_SHAb, tmpvar_20);
					  mediump vec3 x1_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24 = (normal_19.xyzz * normal_19.yzzx);
					  x1_23.x = dot (unity_SHBr, tmpvar_24);
					  x1_23.y = dot (unity_SHBg, tmpvar_24);
					  x1_23.z = dot (unity_SHBb, tmpvar_24);
					  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
					    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
					  )));
					  res_21 = max (((1.055 * 
					    pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), res_21);
					  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_7 = (tmpvar_8.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_9;
					  tmpvar_9 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_12;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7 * tmpvar_1) * diff_15);
					  c_14.w = tmpvar_8.w;
					  c_13.w = c_14.w;
					  c_13.xyz = (c_14.xyz + (tmpvar_7 * xlv_TEXCOORD4));
					  highp float tmpvar_17;
					  tmpvar_17 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_13.xyz, vec3(tmpvar_17));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_7.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_7.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_7.z;
					  mediump vec3 normal_19;
					  normal_19 = worldNormal_3;
					  mediump vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = normal_19;
					  mediump vec3 res_21;
					  mediump vec3 x_22;
					  x_22.x = dot (unity_SHAr, tmpvar_20);
					  x_22.y = dot (unity_SHAg, tmpvar_20);
					  x_22.z = dot (unity_SHAb, tmpvar_20);
					  mediump vec3 x1_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24 = (normal_19.xyzz * normal_19.yzzx);
					  x1_23.x = dot (unity_SHBr, tmpvar_24);
					  x1_23.y = dot (unity_SHBg, tmpvar_24);
					  x1_23.z = dot (unity_SHBb, tmpvar_24);
					  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
					    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
					  )));
					  res_21 = max (((1.055 * 
					    pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), res_21);
					  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_7 = (tmpvar_8.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_9;
					  tmpvar_9 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_12;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7 * tmpvar_1) * diff_15);
					  c_14.w = tmpvar_8.w;
					  c_13.w = c_14.w;
					  c_13.xyz = (c_14.xyz + (tmpvar_7 * xlv_TEXCOORD4));
					  highp float tmpvar_17;
					  tmpvar_17 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_13.xyz, vec3(tmpvar_17));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat10_1.xyz * _LightColor0.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat10_1.xyz * _LightColor0.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat10_1.xyz * _LightColor0.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_8.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_8.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_8.z;
					  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD6 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp vec4 c_1;
					  lowp vec4 tmpvar_2;
					  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_3;
					  tmpvar_3 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_4;
					  tmpvar_4 = (2.0 * tmpvar_3.xyz);
					  lowp vec4 c_5;
					  lowp vec4 c_6;
					  c_6.xyz = vec3(0.0, 0.0, 0.0);
					  c_6.w = tmpvar_2.w;
					  c_5.w = c_6.w;
					  c_5.xyz = ((tmpvar_2.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * tmpvar_4);
					  highp float tmpvar_7;
					  tmpvar_7 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_1.xyz = mix (unity_FogColor.xyz, c_5.xyz, vec3(tmpvar_7));
					  c_1.w = 1.0;
					  gl_FragData[0] = c_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_8.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_8.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_8.z;
					  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD6 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp vec4 c_1;
					  lowp vec4 tmpvar_2;
					  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_3;
					  tmpvar_3 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_4;
					  tmpvar_4 = (2.0 * tmpvar_3.xyz);
					  lowp vec4 c_5;
					  lowp vec4 c_6;
					  c_6.xyz = vec3(0.0, 0.0, 0.0);
					  c_6.w = tmpvar_2.w;
					  c_5.w = c_6.w;
					  c_5.xyz = ((tmpvar_2.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * tmpvar_4);
					  highp float tmpvar_7;
					  tmpvar_7 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_1.xyz = mix (unity_FogColor.xyz, c_5.xyz, vec3(tmpvar_7));
					  c_1.w = 1.0;
					  gl_FragData[0] = c_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_8.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_8.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_8.z;
					  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD6 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp vec4 c_1;
					  lowp vec4 tmpvar_2;
					  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_3;
					  tmpvar_3 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_4;
					  tmpvar_4 = (2.0 * tmpvar_3.xyz);
					  lowp vec4 c_5;
					  lowp vec4 c_6;
					  c_6.xyz = vec3(0.0, 0.0, 0.0);
					  c_6.w = tmpvar_2.w;
					  c_5.w = c_6.w;
					  c_5.xyz = ((tmpvar_2.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * tmpvar_4);
					  highp float tmpvar_7;
					  tmpvar_7 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_1.xyz = mix (unity_FogColor.xyz, c_5.xyz, vec3(tmpvar_7));
					  c_1.w = 1.0;
					  gl_FragData[0] = c_1;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec3 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					float u_xlat12;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_0.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz + (-unity_FogColor.xyz);
					    u_xlat12 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
					#else
					    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec3 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					float u_xlat12;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_0.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz + (-unity_FogColor.xyz);
					    u_xlat12 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
					#else
					    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec3 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					float u_xlat12;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_0.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz + (-unity_FogColor.xyz);
					    u_xlat12 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
					#else
					    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_7 = tmpvar_8.xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_7.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_7.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_7.z;
					  mediump vec3 normal_20;
					  normal_20 = worldNormal_3;
					  mediump vec4 tmpvar_21;
					  tmpvar_21.w = 1.0;
					  tmpvar_21.xyz = normal_20;
					  mediump vec3 res_22;
					  mediump vec3 x_23;
					  x_23.x = dot (unity_SHAr, tmpvar_21);
					  x_23.y = dot (unity_SHAg, tmpvar_21);
					  x_23.z = dot (unity_SHAb, tmpvar_21);
					  mediump vec3 x1_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25 = (normal_20.xyzz * normal_20.yzzx);
					  x1_24.x = dot (unity_SHBr, tmpvar_25);
					  x1_24.y = dot (unity_SHBg, tmpvar_25);
					  x1_24.z = dot (unity_SHBb, tmpvar_25);
					  res_22 = (x_23 + (x1_24 + (unity_SHC.xyz * 
					    ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
					  )));
					  res_22 = max (((1.055 * 
					    pow (max (res_22, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), res_22);
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_8);
					  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_8 = (tmpvar_9.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_10;
					  tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_11;
					  highp float lightShadowDataX_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = _LightShadowData.x;
					  lightShadowDataX_12 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_12);
					  tmpvar_11 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_17;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_18;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_18) * diff_21);
					  c_20.w = tmpvar_9.w;
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_8 * xlv_TEXCOORD4));
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_19.xyz, vec3(tmpvar_23));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_7 = tmpvar_8.xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_7.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_7.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_7.z;
					  mediump vec3 normal_20;
					  normal_20 = worldNormal_3;
					  mediump vec4 tmpvar_21;
					  tmpvar_21.w = 1.0;
					  tmpvar_21.xyz = normal_20;
					  mediump vec3 res_22;
					  mediump vec3 x_23;
					  x_23.x = dot (unity_SHAr, tmpvar_21);
					  x_23.y = dot (unity_SHAg, tmpvar_21);
					  x_23.z = dot (unity_SHAb, tmpvar_21);
					  mediump vec3 x1_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25 = (normal_20.xyzz * normal_20.yzzx);
					  x1_24.x = dot (unity_SHBr, tmpvar_25);
					  x1_24.y = dot (unity_SHBg, tmpvar_25);
					  x1_24.z = dot (unity_SHBb, tmpvar_25);
					  res_22 = (x_23 + (x1_24 + (unity_SHC.xyz * 
					    ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
					  )));
					  res_22 = max (((1.055 * 
					    pow (max (res_22, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), res_22);
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_8);
					  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_8 = (tmpvar_9.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_10;
					  tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_11;
					  highp float lightShadowDataX_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = _LightShadowData.x;
					  lightShadowDataX_12 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_12);
					  tmpvar_11 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_17;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_18;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_18) * diff_21);
					  c_20.w = tmpvar_9.w;
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_8 * xlv_TEXCOORD4));
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_19.xyz, vec3(tmpvar_23));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_7 = tmpvar_8.xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_7.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_7.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_7.z;
					  mediump vec3 normal_20;
					  normal_20 = worldNormal_3;
					  mediump vec4 tmpvar_21;
					  tmpvar_21.w = 1.0;
					  tmpvar_21.xyz = normal_20;
					  mediump vec3 res_22;
					  mediump vec3 x_23;
					  x_23.x = dot (unity_SHAr, tmpvar_21);
					  x_23.y = dot (unity_SHAg, tmpvar_21);
					  x_23.z = dot (unity_SHAb, tmpvar_21);
					  mediump vec3 x1_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25 = (normal_20.xyzz * normal_20.yzzx);
					  x1_24.x = dot (unity_SHBr, tmpvar_25);
					  x1_24.y = dot (unity_SHBg, tmpvar_25);
					  x1_24.z = dot (unity_SHBb, tmpvar_25);
					  res_22 = (x_23 + (x1_24 + (unity_SHC.xyz * 
					    ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
					  )));
					  res_22 = max (((1.055 * 
					    pow (max (res_22, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), res_22);
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_8);
					  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_8 = (tmpvar_9.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_10;
					  tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_11;
					  highp float lightShadowDataX_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = _LightShadowData.x;
					  lightShadowDataX_12 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_12);
					  tmpvar_11 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_17;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_18;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_18) * diff_21);
					  c_20.w = tmpvar_9.w;
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_8 * xlv_TEXCOORD4));
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_19.xyz, vec3(tmpvar_23));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz;
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    vec3 txVec636 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec636, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_7.xyz = u_xlat16_7.xxx * _LightColor0.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat10_1.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz;
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    vec3 txVec565 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec565, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_7.xyz = u_xlat16_7.xxx * _LightColor0.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat10_1.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz;
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    vec3 txVec600 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec600, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_7.xyz = u_xlat16_7.xxx * _LightColor0.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat10_1.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_8 = tmpvar_9.xyz;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].x;
					  v_10.y = unity_WorldToObject[1].x;
					  v_10.z = unity_WorldToObject[2].x;
					  v_10.w = unity_WorldToObject[3].x;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].y;
					  v_11.y = unity_WorldToObject[1].y;
					  v_11.z = unity_WorldToObject[2].y;
					  v_11.w = unity_WorldToObject[3].y;
					  highp vec4 v_12;
					  v_12.x = unity_WorldToObject[0].z;
					  v_12.y = unity_WorldToObject[1].z;
					  v_12.z = unity_WorldToObject[2].z;
					  v_12.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize(((
					    (v_10.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_12.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_13;
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_15;
					  tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_16;
					  lowp vec3 tmpvar_17;
					  tmpvar_17 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.x;
					  tmpvar_18.y = tmpvar_17.x;
					  tmpvar_18.z = worldNormal_3.x;
					  tmpvar_18.w = tmpvar_8.x;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.y;
					  tmpvar_19.y = tmpvar_17.y;
					  tmpvar_19.z = worldNormal_3.y;
					  tmpvar_19.w = tmpvar_8.y;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_2.z;
					  tmpvar_20.y = tmpvar_17.z;
					  tmpvar_20.z = worldNormal_3.z;
					  tmpvar_20.w = tmpvar_8.z;
					  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_18;
					  xlv_TEXCOORD2 = tmpvar_19;
					  xlv_TEXCOORD3 = tmpvar_20;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_9);
					  xlv_TEXCOORD6 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  lowp vec3 worldN_2;
					  lowp vec4 c_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec3 tmpvar_5;
					  tmpvar_5 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_6;
					  highp float lightShadowDataX_7;
					  mediump float tmpvar_8;
					  tmpvar_8 = _LightShadowData.x;
					  lightShadowDataX_7 = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_7);
					  tmpvar_6 = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_2.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_2.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_2.z = tmpvar_12;
					  tmpvar_1 = tmpvar_6;
					  mediump vec3 normalWorld_13;
					  normalWorld_13 = worldN_2;
					  mediump vec3 tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = (2.0 * tmpvar_15.xyz);
					  mediump vec3 lightmapTint_17;
					  lowp vec3 tmpvar_18;
					  tmpvar_18 = tmpvar_15.xyz;
					  lightmapTint_17 = tmpvar_18;
					  tmpvar_14 = max (min (tmpvar_16, (lightmapTint_17 * tmpvar_1)), (tmpvar_16 - (
					    (clamp (dot (normalWorld_13, _WorldSpaceLightPos0.xyz), 0.0, 1.0) * (1.0 - max (0.0, (tmpvar_1 - _LightShadowData.x))))
					   * _LightColor0.xyz)));
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  c_20.xyz = vec3(0.0, 0.0, 0.0);
					  c_20.w = tmpvar_4.w;
					  c_19.w = c_20.w;
					  c_19.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * tmpvar_14);
					  highp float tmpvar_21;
					  tmpvar_21 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_19.xyz, vec3(tmpvar_21));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_8 = tmpvar_9.xyz;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].x;
					  v_10.y = unity_WorldToObject[1].x;
					  v_10.z = unity_WorldToObject[2].x;
					  v_10.w = unity_WorldToObject[3].x;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].y;
					  v_11.y = unity_WorldToObject[1].y;
					  v_11.z = unity_WorldToObject[2].y;
					  v_11.w = unity_WorldToObject[3].y;
					  highp vec4 v_12;
					  v_12.x = unity_WorldToObject[0].z;
					  v_12.y = unity_WorldToObject[1].z;
					  v_12.z = unity_WorldToObject[2].z;
					  v_12.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize(((
					    (v_10.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_12.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_13;
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_15;
					  tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_16;
					  lowp vec3 tmpvar_17;
					  tmpvar_17 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.x;
					  tmpvar_18.y = tmpvar_17.x;
					  tmpvar_18.z = worldNormal_3.x;
					  tmpvar_18.w = tmpvar_8.x;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.y;
					  tmpvar_19.y = tmpvar_17.y;
					  tmpvar_19.z = worldNormal_3.y;
					  tmpvar_19.w = tmpvar_8.y;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_2.z;
					  tmpvar_20.y = tmpvar_17.z;
					  tmpvar_20.z = worldNormal_3.z;
					  tmpvar_20.w = tmpvar_8.z;
					  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_18;
					  xlv_TEXCOORD2 = tmpvar_19;
					  xlv_TEXCOORD3 = tmpvar_20;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_9);
					  xlv_TEXCOORD6 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  lowp vec3 worldN_2;
					  lowp vec4 c_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec3 tmpvar_5;
					  tmpvar_5 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_6;
					  highp float lightShadowDataX_7;
					  mediump float tmpvar_8;
					  tmpvar_8 = _LightShadowData.x;
					  lightShadowDataX_7 = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_7);
					  tmpvar_6 = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_2.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_2.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_2.z = tmpvar_12;
					  tmpvar_1 = tmpvar_6;
					  mediump vec3 normalWorld_13;
					  normalWorld_13 = worldN_2;
					  mediump vec3 tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = (2.0 * tmpvar_15.xyz);
					  mediump vec3 lightmapTint_17;
					  lowp vec3 tmpvar_18;
					  tmpvar_18 = tmpvar_15.xyz;
					  lightmapTint_17 = tmpvar_18;
					  tmpvar_14 = max (min (tmpvar_16, (lightmapTint_17 * tmpvar_1)), (tmpvar_16 - (
					    (clamp (dot (normalWorld_13, _WorldSpaceLightPos0.xyz), 0.0, 1.0) * (1.0 - max (0.0, (tmpvar_1 - _LightShadowData.x))))
					   * _LightColor0.xyz)));
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  c_20.xyz = vec3(0.0, 0.0, 0.0);
					  c_20.w = tmpvar_4.w;
					  c_19.w = c_20.w;
					  c_19.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * tmpvar_14);
					  highp float tmpvar_21;
					  tmpvar_21 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_19.xyz, vec3(tmpvar_21));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_8 = tmpvar_9.xyz;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].x;
					  v_10.y = unity_WorldToObject[1].x;
					  v_10.z = unity_WorldToObject[2].x;
					  v_10.w = unity_WorldToObject[3].x;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].y;
					  v_11.y = unity_WorldToObject[1].y;
					  v_11.z = unity_WorldToObject[2].y;
					  v_11.w = unity_WorldToObject[3].y;
					  highp vec4 v_12;
					  v_12.x = unity_WorldToObject[0].z;
					  v_12.y = unity_WorldToObject[1].z;
					  v_12.z = unity_WorldToObject[2].z;
					  v_12.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize(((
					    (v_10.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_12.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_13;
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_15;
					  tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_16;
					  lowp vec3 tmpvar_17;
					  tmpvar_17 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.x;
					  tmpvar_18.y = tmpvar_17.x;
					  tmpvar_18.z = worldNormal_3.x;
					  tmpvar_18.w = tmpvar_8.x;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.y;
					  tmpvar_19.y = tmpvar_17.y;
					  tmpvar_19.z = worldNormal_3.y;
					  tmpvar_19.w = tmpvar_8.y;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_2.z;
					  tmpvar_20.y = tmpvar_17.z;
					  tmpvar_20.z = worldNormal_3.z;
					  tmpvar_20.w = tmpvar_8.z;
					  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_18;
					  xlv_TEXCOORD2 = tmpvar_19;
					  xlv_TEXCOORD3 = tmpvar_20;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_9);
					  xlv_TEXCOORD6 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  lowp vec3 worldN_2;
					  lowp vec4 c_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec3 tmpvar_5;
					  tmpvar_5 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_6;
					  highp float lightShadowDataX_7;
					  mediump float tmpvar_8;
					  tmpvar_8 = _LightShadowData.x;
					  lightShadowDataX_7 = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_7);
					  tmpvar_6 = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_2.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_2.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_2.z = tmpvar_12;
					  tmpvar_1 = tmpvar_6;
					  mediump vec3 normalWorld_13;
					  normalWorld_13 = worldN_2;
					  mediump vec3 tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = (2.0 * tmpvar_15.xyz);
					  mediump vec3 lightmapTint_17;
					  lowp vec3 tmpvar_18;
					  tmpvar_18 = tmpvar_15.xyz;
					  lightmapTint_17 = tmpvar_18;
					  tmpvar_14 = max (min (tmpvar_16, (lightmapTint_17 * tmpvar_1)), (tmpvar_16 - (
					    (clamp (dot (normalWorld_13, _WorldSpaceLightPos0.xyz), 0.0, 1.0) * (1.0 - max (0.0, (tmpvar_1 - _LightShadowData.x))))
					   * _LightColor0.xyz)));
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  c_20.xyz = vec3(0.0, 0.0, 0.0);
					  c_20.w = tmpvar_4.w;
					  c_19.w = c_20.w;
					  c_19.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * tmpvar_14);
					  highp float tmpvar_21;
					  tmpvar_21 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_19.xyz, vec3(tmpvar_21));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2D unity_Lightmap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in highp vec4 vs_TEXCOORD4;
					in highp vec4 vs_TEXCOORD5;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					lowp vec3 u_xlat10_4;
					mediump vec3 u_xlat16_7;
					mediump float u_xlat16_12;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					#ifdef UNITY_ADRENO_ES3
					    u_xlat16_2.x = min(max(u_xlat16_2.x, 0.0), 1.0);
					#else
					    u_xlat16_2.x = clamp(u_xlat16_2.x, 0.0, 1.0);
					#endif
					    vec3 txVec566 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec566, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_12 = u_xlat10_0.x * u_xlat16_7.x;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_12 = max(u_xlat16_12, 0.0);
					    u_xlat16_12 = (-u_xlat16_12) + 1.0;
					    u_xlat16_2.x = u_xlat16_12 * u_xlat16_2.x;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_7.xyz = u_xlat16_7.xxx * u_xlat10_0.xyz;
					    u_xlat16_7.xyz = min(u_xlat10_1.xyz, u_xlat16_7.xyz);
					    u_xlat16_3.xyz = (-u_xlat16_2.xxx) * _LightColor0.xyz + u_xlat10_1.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_7.xyz, u_xlat16_3.xyz);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_4.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_4.xyz;
					    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2D unity_Lightmap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in highp vec4 vs_TEXCOORD4;
					in highp vec4 vs_TEXCOORD5;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					lowp vec3 u_xlat10_4;
					mediump vec3 u_xlat16_7;
					mediump float u_xlat16_12;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					#ifdef UNITY_ADRENO_ES3
					    u_xlat16_2.x = min(max(u_xlat16_2.x, 0.0), 1.0);
					#else
					    u_xlat16_2.x = clamp(u_xlat16_2.x, 0.0, 1.0);
					#endif
					    vec3 txVec601 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec601, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_12 = u_xlat10_0.x * u_xlat16_7.x;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_12 = max(u_xlat16_12, 0.0);
					    u_xlat16_12 = (-u_xlat16_12) + 1.0;
					    u_xlat16_2.x = u_xlat16_12 * u_xlat16_2.x;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_7.xyz = u_xlat16_7.xxx * u_xlat10_0.xyz;
					    u_xlat16_7.xyz = min(u_xlat10_1.xyz, u_xlat16_7.xyz);
					    u_xlat16_3.xyz = (-u_xlat16_2.xxx) * _LightColor0.xyz + u_xlat10_1.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_7.xyz, u_xlat16_3.xyz);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_4.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_4.xyz;
					    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2D unity_Lightmap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in highp vec4 vs_TEXCOORD4;
					in highp vec4 vs_TEXCOORD5;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					lowp vec3 u_xlat10_4;
					mediump vec3 u_xlat16_7;
					mediump float u_xlat16_12;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					#ifdef UNITY_ADRENO_ES3
					    u_xlat16_2.x = min(max(u_xlat16_2.x, 0.0), 1.0);
					#else
					    u_xlat16_2.x = clamp(u_xlat16_2.x, 0.0, 1.0);
					#endif
					    vec3 txVec602 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec602, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_12 = u_xlat10_0.x * u_xlat16_7.x;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_12 = max(u_xlat16_12, 0.0);
					    u_xlat16_12 = (-u_xlat16_12) + 1.0;
					    u_xlat16_2.x = u_xlat16_12 * u_xlat16_2.x;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_7.xyz = u_xlat16_7.xxx * u_xlat10_0.xyz;
					    u_xlat16_7.xyz = min(u_xlat10_1.xyz, u_xlat16_7.xyz);
					    u_xlat16_3.xyz = (-u_xlat16_2.xxx) * _LightColor0.xyz + u_xlat10_1.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_7.xyz, u_xlat16_3.xyz);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_4.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_4.xyz;
					    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_8.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_8.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_8.z;
					  highp vec3 lightColor0_20;
					  lightColor0_20 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_21;
					  lightColor1_21 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_22;
					  lightColor2_22 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_23;
					  lightColor3_23 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_24;
					  lightAttenSq_24 = unity_4LightAtten0;
					  highp vec3 normal_25;
					  normal_25 = worldNormal_3;
					  highp vec3 col_26;
					  highp vec4 ndotl_27;
					  highp vec4 lengthSq_28;
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosX0 - tmpvar_8.x);
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosY0 - tmpvar_8.y);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosZ0 - tmpvar_8.z);
					  lengthSq_28 = (tmpvar_29 * tmpvar_29);
					  lengthSq_28 = (lengthSq_28 + (tmpvar_30 * tmpvar_30));
					  lengthSq_28 = (lengthSq_28 + (tmpvar_31 * tmpvar_31));
					  ndotl_27 = (tmpvar_29 * normal_25.x);
					  ndotl_27 = (ndotl_27 + (tmpvar_30 * normal_25.y));
					  ndotl_27 = (ndotl_27 + (tmpvar_31 * normal_25.z));
					  highp vec4 tmpvar_32;
					  tmpvar_32 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_27 * inversesqrt(lengthSq_28)));
					  ndotl_27 = tmpvar_32;
					  highp vec4 tmpvar_33;
					  tmpvar_33 = (tmpvar_32 * (1.0/((1.0 + 
					    (lengthSq_28 * lightAttenSq_24)
					  ))));
					  col_26 = (lightColor0_20 * tmpvar_33.x);
					  col_26 = (col_26 + (lightColor1_21 * tmpvar_33.y));
					  col_26 = (col_26 + (lightColor2_22 * tmpvar_33.z));
					  col_26 = (col_26 + (lightColor3_23 * tmpvar_33.w));
					  tmpvar_5 = col_26;
					  mediump vec3 normal_34;
					  normal_34 = worldNormal_3;
					  mediump vec3 ambient_35;
					  mediump vec4 tmpvar_36;
					  tmpvar_36.w = 1.0;
					  tmpvar_36.xyz = normal_34;
					  mediump vec3 res_37;
					  mediump vec3 x_38;
					  x_38.x = dot (unity_SHAr, tmpvar_36);
					  x_38.y = dot (unity_SHAg, tmpvar_36);
					  x_38.z = dot (unity_SHAb, tmpvar_36);
					  mediump vec3 x1_39;
					  mediump vec4 tmpvar_40;
					  tmpvar_40 = (normal_34.xyzz * normal_34.yzzx);
					  x1_39.x = dot (unity_SHBr, tmpvar_40);
					  x1_39.y = dot (unity_SHBg, tmpvar_40);
					  x1_39.z = dot (unity_SHBb, tmpvar_40);
					  res_37 = (x_38 + (x1_39 + (unity_SHC.xyz * 
					    ((normal_34.x * normal_34.x) - (normal_34.y * normal_34.y))
					  )));
					  res_37 = max (((1.055 * 
					    pow (max (res_37, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  ambient_35 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), res_37));
					  tmpvar_5 = ambient_35;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = ambient_35;
					  xlv_TEXCOORD6 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_7 = (tmpvar_8.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_9;
					  tmpvar_9 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_12;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7 * tmpvar_1) * diff_15);
					  c_14.w = tmpvar_8.w;
					  c_13.w = c_14.w;
					  c_13.xyz = (c_14.xyz + (tmpvar_7 * xlv_TEXCOORD4));
					  highp float tmpvar_17;
					  tmpvar_17 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_13.xyz, vec3(tmpvar_17));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_8.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_8.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_8.z;
					  highp vec3 lightColor0_20;
					  lightColor0_20 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_21;
					  lightColor1_21 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_22;
					  lightColor2_22 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_23;
					  lightColor3_23 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_24;
					  lightAttenSq_24 = unity_4LightAtten0;
					  highp vec3 normal_25;
					  normal_25 = worldNormal_3;
					  highp vec3 col_26;
					  highp vec4 ndotl_27;
					  highp vec4 lengthSq_28;
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosX0 - tmpvar_8.x);
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosY0 - tmpvar_8.y);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosZ0 - tmpvar_8.z);
					  lengthSq_28 = (tmpvar_29 * tmpvar_29);
					  lengthSq_28 = (lengthSq_28 + (tmpvar_30 * tmpvar_30));
					  lengthSq_28 = (lengthSq_28 + (tmpvar_31 * tmpvar_31));
					  ndotl_27 = (tmpvar_29 * normal_25.x);
					  ndotl_27 = (ndotl_27 + (tmpvar_30 * normal_25.y));
					  ndotl_27 = (ndotl_27 + (tmpvar_31 * normal_25.z));
					  highp vec4 tmpvar_32;
					  tmpvar_32 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_27 * inversesqrt(lengthSq_28)));
					  ndotl_27 = tmpvar_32;
					  highp vec4 tmpvar_33;
					  tmpvar_33 = (tmpvar_32 * (1.0/((1.0 + 
					    (lengthSq_28 * lightAttenSq_24)
					  ))));
					  col_26 = (lightColor0_20 * tmpvar_33.x);
					  col_26 = (col_26 + (lightColor1_21 * tmpvar_33.y));
					  col_26 = (col_26 + (lightColor2_22 * tmpvar_33.z));
					  col_26 = (col_26 + (lightColor3_23 * tmpvar_33.w));
					  tmpvar_5 = col_26;
					  mediump vec3 normal_34;
					  normal_34 = worldNormal_3;
					  mediump vec3 ambient_35;
					  mediump vec4 tmpvar_36;
					  tmpvar_36.w = 1.0;
					  tmpvar_36.xyz = normal_34;
					  mediump vec3 res_37;
					  mediump vec3 x_38;
					  x_38.x = dot (unity_SHAr, tmpvar_36);
					  x_38.y = dot (unity_SHAg, tmpvar_36);
					  x_38.z = dot (unity_SHAb, tmpvar_36);
					  mediump vec3 x1_39;
					  mediump vec4 tmpvar_40;
					  tmpvar_40 = (normal_34.xyzz * normal_34.yzzx);
					  x1_39.x = dot (unity_SHBr, tmpvar_40);
					  x1_39.y = dot (unity_SHBg, tmpvar_40);
					  x1_39.z = dot (unity_SHBb, tmpvar_40);
					  res_37 = (x_38 + (x1_39 + (unity_SHC.xyz * 
					    ((normal_34.x * normal_34.x) - (normal_34.y * normal_34.y))
					  )));
					  res_37 = max (((1.055 * 
					    pow (max (res_37, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  ambient_35 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), res_37));
					  tmpvar_5 = ambient_35;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = ambient_35;
					  xlv_TEXCOORD6 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_7 = (tmpvar_8.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_9;
					  tmpvar_9 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_12;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7 * tmpvar_1) * diff_15);
					  c_14.w = tmpvar_8.w;
					  c_13.w = c_14.w;
					  c_13.xyz = (c_14.xyz + (tmpvar_7 * xlv_TEXCOORD4));
					  highp float tmpvar_17;
					  tmpvar_17 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_13.xyz, vec3(tmpvar_17));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_8.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_8.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_8.z;
					  highp vec3 lightColor0_20;
					  lightColor0_20 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_21;
					  lightColor1_21 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_22;
					  lightColor2_22 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_23;
					  lightColor3_23 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_24;
					  lightAttenSq_24 = unity_4LightAtten0;
					  highp vec3 normal_25;
					  normal_25 = worldNormal_3;
					  highp vec3 col_26;
					  highp vec4 ndotl_27;
					  highp vec4 lengthSq_28;
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosX0 - tmpvar_8.x);
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosY0 - tmpvar_8.y);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosZ0 - tmpvar_8.z);
					  lengthSq_28 = (tmpvar_29 * tmpvar_29);
					  lengthSq_28 = (lengthSq_28 + (tmpvar_30 * tmpvar_30));
					  lengthSq_28 = (lengthSq_28 + (tmpvar_31 * tmpvar_31));
					  ndotl_27 = (tmpvar_29 * normal_25.x);
					  ndotl_27 = (ndotl_27 + (tmpvar_30 * normal_25.y));
					  ndotl_27 = (ndotl_27 + (tmpvar_31 * normal_25.z));
					  highp vec4 tmpvar_32;
					  tmpvar_32 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_27 * inversesqrt(lengthSq_28)));
					  ndotl_27 = tmpvar_32;
					  highp vec4 tmpvar_33;
					  tmpvar_33 = (tmpvar_32 * (1.0/((1.0 + 
					    (lengthSq_28 * lightAttenSq_24)
					  ))));
					  col_26 = (lightColor0_20 * tmpvar_33.x);
					  col_26 = (col_26 + (lightColor1_21 * tmpvar_33.y));
					  col_26 = (col_26 + (lightColor2_22 * tmpvar_33.z));
					  col_26 = (col_26 + (lightColor3_23 * tmpvar_33.w));
					  tmpvar_5 = col_26;
					  mediump vec3 normal_34;
					  normal_34 = worldNormal_3;
					  mediump vec3 ambient_35;
					  mediump vec4 tmpvar_36;
					  tmpvar_36.w = 1.0;
					  tmpvar_36.xyz = normal_34;
					  mediump vec3 res_37;
					  mediump vec3 x_38;
					  x_38.x = dot (unity_SHAr, tmpvar_36);
					  x_38.y = dot (unity_SHAg, tmpvar_36);
					  x_38.z = dot (unity_SHAb, tmpvar_36);
					  mediump vec3 x1_39;
					  mediump vec4 tmpvar_40;
					  tmpvar_40 = (normal_34.xyzz * normal_34.yzzx);
					  x1_39.x = dot (unity_SHBr, tmpvar_40);
					  x1_39.y = dot (unity_SHBg, tmpvar_40);
					  x1_39.z = dot (unity_SHBb, tmpvar_40);
					  res_37 = (x_38 + (x1_39 + (unity_SHC.xyz * 
					    ((normal_34.x * normal_34.x) - (normal_34.y * normal_34.y))
					  )));
					  res_37 = max (((1.055 * 
					    pow (max (res_37, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  ambient_35 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), res_37));
					  tmpvar_5 = ambient_35;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = ambient_35;
					  xlv_TEXCOORD6 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_7 = (tmpvar_8.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_9;
					  tmpvar_9 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_12;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7 * tmpvar_1) * diff_15);
					  c_14.w = tmpvar_8.w;
					  c_13.w = c_14.w;
					  c_13.xyz = (c_14.xyz + (tmpvar_7 * xlv_TEXCOORD4));
					  highp float tmpvar_17;
					  tmpvar_17 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_13.xyz, vec3(tmpvar_17));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					mediump vec4 u_xlat16_2;
					vec4 u_xlat3;
					lowp vec3 u_xlat10_3;
					vec4 u_xlat4;
					mediump vec3 u_xlat16_5;
					mediump vec3 u_xlat16_6;
					vec3 u_xlat7;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat7.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat7.xyz;
					    u_xlat1.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat7.xyz = u_xlat7.xyz * u_xlat1.xxx;
					    u_xlat1.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat1.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat1.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat2.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat2.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat2.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat2.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat2.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = dot(u_xlat1.xyw, u_xlat1.xyw);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat1 = u_xlat1.xywz * u_xlat2.xxxx;
					    u_xlat10_3.xyz = u_xlat7.xyz * u_xlat1.zxy;
					    u_xlat10_3.xyz = u_xlat1.yzx * u_xlat7.yzx + (-u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xxx * u_xlat10_3.xyz;
					    vs_TEXCOORD1.y = u_xlat10_3.x;
					    vs_TEXCOORD1.x = u_xlat7.z;
					    vs_TEXCOORD1.z = u_xlat1.x;
					    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;
					    vs_TEXCOORD1.w = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat7.x;
					    vs_TEXCOORD3.x = u_xlat7.y;
					    vs_TEXCOORD2.y = u_xlat10_3.y;
					    vs_TEXCOORD3.y = u_xlat10_3.z;
					    vs_TEXCOORD2.z = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat1.z;
					    vs_TEXCOORD3.w = u_xlat2.z;
					    u_xlat0 = (-u_xlat2.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat0;
					    u_xlat0 = u_xlat0 * u_xlat0;
					    u_xlat4 = (-u_xlat2.xxxx) + unity_4LightPosX0;
					    u_xlat2 = (-u_xlat2.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;
					    u_xlat0 = u_xlat2 * u_xlat2 + u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat1.zzwz + u_xlat3;
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat3;
					    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat2;
					    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
					    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
					    u_xlat16_2 = u_xlat1.yzwx * u_xlat1.xywz;
					    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
					    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
					    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
					    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
					    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
					    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
					    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
					    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat1.xyz = log2(u_xlat16_5.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat1.xyz = exp2(u_xlat1.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat10_1.xyz * _LightColor0.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					mediump vec4 u_xlat16_2;
					vec4 u_xlat3;
					lowp vec3 u_xlat10_3;
					vec4 u_xlat4;
					mediump vec3 u_xlat16_5;
					mediump vec3 u_xlat16_6;
					vec3 u_xlat7;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat7.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat7.xyz;
					    u_xlat1.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat7.xyz = u_xlat7.xyz * u_xlat1.xxx;
					    u_xlat1.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat1.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat1.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat2.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat2.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat2.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat2.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat2.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = dot(u_xlat1.xyw, u_xlat1.xyw);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat1 = u_xlat1.xywz * u_xlat2.xxxx;
					    u_xlat10_3.xyz = u_xlat7.xyz * u_xlat1.zxy;
					    u_xlat10_3.xyz = u_xlat1.yzx * u_xlat7.yzx + (-u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xxx * u_xlat10_3.xyz;
					    vs_TEXCOORD1.y = u_xlat10_3.x;
					    vs_TEXCOORD1.x = u_xlat7.z;
					    vs_TEXCOORD1.z = u_xlat1.x;
					    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;
					    vs_TEXCOORD1.w = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat7.x;
					    vs_TEXCOORD3.x = u_xlat7.y;
					    vs_TEXCOORD2.y = u_xlat10_3.y;
					    vs_TEXCOORD3.y = u_xlat10_3.z;
					    vs_TEXCOORD2.z = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat1.z;
					    vs_TEXCOORD3.w = u_xlat2.z;
					    u_xlat0 = (-u_xlat2.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat0;
					    u_xlat0 = u_xlat0 * u_xlat0;
					    u_xlat4 = (-u_xlat2.xxxx) + unity_4LightPosX0;
					    u_xlat2 = (-u_xlat2.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;
					    u_xlat0 = u_xlat2 * u_xlat2 + u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat1.zzwz + u_xlat3;
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat3;
					    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat2;
					    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
					    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
					    u_xlat16_2 = u_xlat1.yzwx * u_xlat1.xywz;
					    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
					    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
					    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
					    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
					    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
					    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
					    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
					    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat1.xyz = log2(u_xlat16_5.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat1.xyz = exp2(u_xlat1.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat10_1.xyz * _LightColor0.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					mediump vec4 u_xlat16_2;
					vec4 u_xlat3;
					lowp vec3 u_xlat10_3;
					vec4 u_xlat4;
					mediump vec3 u_xlat16_5;
					mediump vec3 u_xlat16_6;
					vec3 u_xlat7;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat7.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat7.xyz;
					    u_xlat1.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat7.xyz = u_xlat7.xyz * u_xlat1.xxx;
					    u_xlat1.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat1.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat1.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat2.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat2.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat2.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat2.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat2.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = dot(u_xlat1.xyw, u_xlat1.xyw);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat1 = u_xlat1.xywz * u_xlat2.xxxx;
					    u_xlat10_3.xyz = u_xlat7.xyz * u_xlat1.zxy;
					    u_xlat10_3.xyz = u_xlat1.yzx * u_xlat7.yzx + (-u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xxx * u_xlat10_3.xyz;
					    vs_TEXCOORD1.y = u_xlat10_3.x;
					    vs_TEXCOORD1.x = u_xlat7.z;
					    vs_TEXCOORD1.z = u_xlat1.x;
					    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;
					    vs_TEXCOORD1.w = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat7.x;
					    vs_TEXCOORD3.x = u_xlat7.y;
					    vs_TEXCOORD2.y = u_xlat10_3.y;
					    vs_TEXCOORD3.y = u_xlat10_3.z;
					    vs_TEXCOORD2.z = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat1.z;
					    vs_TEXCOORD3.w = u_xlat2.z;
					    u_xlat0 = (-u_xlat2.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat0;
					    u_xlat0 = u_xlat0 * u_xlat0;
					    u_xlat4 = (-u_xlat2.xxxx) + unity_4LightPosX0;
					    u_xlat2 = (-u_xlat2.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;
					    u_xlat0 = u_xlat2 * u_xlat2 + u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat1.zzwz + u_xlat3;
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat3;
					    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat2;
					    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
					    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
					    u_xlat16_2 = u_xlat1.yzwx * u_xlat1.xywz;
					    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
					    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
					    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
					    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
					    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
					    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
					    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
					    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat1.xyz = log2(u_xlat16_5.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat1.xyz = exp2(u_xlat1.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat10_1.xyz * _LightColor0.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_8 = tmpvar_9.xyz;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].x;
					  v_10.y = unity_WorldToObject[1].x;
					  v_10.z = unity_WorldToObject[2].x;
					  v_10.w = unity_WorldToObject[3].x;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].y;
					  v_11.y = unity_WorldToObject[1].y;
					  v_11.z = unity_WorldToObject[2].y;
					  v_11.w = unity_WorldToObject[3].y;
					  highp vec4 v_12;
					  v_12.x = unity_WorldToObject[0].z;
					  v_12.y = unity_WorldToObject[1].z;
					  v_12.z = unity_WorldToObject[2].z;
					  v_12.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize(((
					    (v_10.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_12.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_13;
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_15;
					  tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_16;
					  lowp vec3 tmpvar_17;
					  tmpvar_17 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.x;
					  tmpvar_18.y = tmpvar_17.x;
					  tmpvar_18.z = worldNormal_3.x;
					  tmpvar_18.w = tmpvar_8.x;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.y;
					  tmpvar_19.y = tmpvar_17.y;
					  tmpvar_19.z = worldNormal_3.y;
					  tmpvar_19.w = tmpvar_8.y;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_2.z;
					  tmpvar_20.y = tmpvar_17.z;
					  tmpvar_20.z = worldNormal_3.z;
					  tmpvar_20.w = tmpvar_8.z;
					  highp vec3 lightColor0_21;
					  lightColor0_21 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_22;
					  lightColor1_22 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_23;
					  lightColor2_23 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_24;
					  lightColor3_24 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_25;
					  lightAttenSq_25 = unity_4LightAtten0;
					  highp vec3 normal_26;
					  normal_26 = worldNormal_3;
					  highp vec3 col_27;
					  highp vec4 ndotl_28;
					  highp vec4 lengthSq_29;
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosX0 - tmpvar_9.x);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosY0 - tmpvar_9.y);
					  highp vec4 tmpvar_32;
					  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_9.z);
					  lengthSq_29 = (tmpvar_30 * tmpvar_30);
					  lengthSq_29 = (lengthSq_29 + (tmpvar_31 * tmpvar_31));
					  lengthSq_29 = (lengthSq_29 + (tmpvar_32 * tmpvar_32));
					  ndotl_28 = (tmpvar_30 * normal_26.x);
					  ndotl_28 = (ndotl_28 + (tmpvar_31 * normal_26.y));
					  ndotl_28 = (ndotl_28 + (tmpvar_32 * normal_26.z));
					  highp vec4 tmpvar_33;
					  tmpvar_33 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_28 * inversesqrt(lengthSq_29)));
					  ndotl_28 = tmpvar_33;
					  highp vec4 tmpvar_34;
					  tmpvar_34 = (tmpvar_33 * (1.0/((1.0 + 
					    (lengthSq_29 * lightAttenSq_25)
					  ))));
					  col_27 = (lightColor0_21 * tmpvar_34.x);
					  col_27 = (col_27 + (lightColor1_22 * tmpvar_34.y));
					  col_27 = (col_27 + (lightColor2_23 * tmpvar_34.z));
					  col_27 = (col_27 + (lightColor3_24 * tmpvar_34.w));
					  tmpvar_5 = col_27;
					  mediump vec3 normal_35;
					  normal_35 = worldNormal_3;
					  mediump vec3 ambient_36;
					  mediump vec4 tmpvar_37;
					  tmpvar_37.w = 1.0;
					  tmpvar_37.xyz = normal_35;
					  mediump vec3 res_38;
					  mediump vec3 x_39;
					  x_39.x = dot (unity_SHAr, tmpvar_37);
					  x_39.y = dot (unity_SHAg, tmpvar_37);
					  x_39.z = dot (unity_SHAb, tmpvar_37);
					  mediump vec3 x1_40;
					  mediump vec4 tmpvar_41;
					  tmpvar_41 = (normal_35.xyzz * normal_35.yzzx);
					  x1_40.x = dot (unity_SHBr, tmpvar_41);
					  x1_40.y = dot (unity_SHBg, tmpvar_41);
					  x1_40.z = dot (unity_SHBb, tmpvar_41);
					  res_38 = (x_39 + (x1_40 + (unity_SHC.xyz * 
					    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
					  )));
					  res_38 = max (((1.055 * 
					    pow (max (res_38, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  ambient_36 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), res_38));
					  tmpvar_5 = ambient_36;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_18;
					  xlv_TEXCOORD2 = tmpvar_19;
					  xlv_TEXCOORD3 = tmpvar_20;
					  xlv_TEXCOORD4 = ambient_36;
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_9);
					  xlv_TEXCOORD6 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_8 = (tmpvar_9.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_10;
					  tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_11;
					  highp float lightShadowDataX_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = _LightShadowData.x;
					  lightShadowDataX_12 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_12);
					  tmpvar_11 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_17;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_18;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_18) * diff_21);
					  c_20.w = tmpvar_9.w;
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_8 * xlv_TEXCOORD4));
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_19.xyz, vec3(tmpvar_23));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_8 = tmpvar_9.xyz;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].x;
					  v_10.y = unity_WorldToObject[1].x;
					  v_10.z = unity_WorldToObject[2].x;
					  v_10.w = unity_WorldToObject[3].x;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].y;
					  v_11.y = unity_WorldToObject[1].y;
					  v_11.z = unity_WorldToObject[2].y;
					  v_11.w = unity_WorldToObject[3].y;
					  highp vec4 v_12;
					  v_12.x = unity_WorldToObject[0].z;
					  v_12.y = unity_WorldToObject[1].z;
					  v_12.z = unity_WorldToObject[2].z;
					  v_12.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize(((
					    (v_10.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_12.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_13;
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_15;
					  tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_16;
					  lowp vec3 tmpvar_17;
					  tmpvar_17 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.x;
					  tmpvar_18.y = tmpvar_17.x;
					  tmpvar_18.z = worldNormal_3.x;
					  tmpvar_18.w = tmpvar_8.x;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.y;
					  tmpvar_19.y = tmpvar_17.y;
					  tmpvar_19.z = worldNormal_3.y;
					  tmpvar_19.w = tmpvar_8.y;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_2.z;
					  tmpvar_20.y = tmpvar_17.z;
					  tmpvar_20.z = worldNormal_3.z;
					  tmpvar_20.w = tmpvar_8.z;
					  highp vec3 lightColor0_21;
					  lightColor0_21 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_22;
					  lightColor1_22 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_23;
					  lightColor2_23 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_24;
					  lightColor3_24 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_25;
					  lightAttenSq_25 = unity_4LightAtten0;
					  highp vec3 normal_26;
					  normal_26 = worldNormal_3;
					  highp vec3 col_27;
					  highp vec4 ndotl_28;
					  highp vec4 lengthSq_29;
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosX0 - tmpvar_9.x);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosY0 - tmpvar_9.y);
					  highp vec4 tmpvar_32;
					  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_9.z);
					  lengthSq_29 = (tmpvar_30 * tmpvar_30);
					  lengthSq_29 = (lengthSq_29 + (tmpvar_31 * tmpvar_31));
					  lengthSq_29 = (lengthSq_29 + (tmpvar_32 * tmpvar_32));
					  ndotl_28 = (tmpvar_30 * normal_26.x);
					  ndotl_28 = (ndotl_28 + (tmpvar_31 * normal_26.y));
					  ndotl_28 = (ndotl_28 + (tmpvar_32 * normal_26.z));
					  highp vec4 tmpvar_33;
					  tmpvar_33 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_28 * inversesqrt(lengthSq_29)));
					  ndotl_28 = tmpvar_33;
					  highp vec4 tmpvar_34;
					  tmpvar_34 = (tmpvar_33 * (1.0/((1.0 + 
					    (lengthSq_29 * lightAttenSq_25)
					  ))));
					  col_27 = (lightColor0_21 * tmpvar_34.x);
					  col_27 = (col_27 + (lightColor1_22 * tmpvar_34.y));
					  col_27 = (col_27 + (lightColor2_23 * tmpvar_34.z));
					  col_27 = (col_27 + (lightColor3_24 * tmpvar_34.w));
					  tmpvar_5 = col_27;
					  mediump vec3 normal_35;
					  normal_35 = worldNormal_3;
					  mediump vec3 ambient_36;
					  mediump vec4 tmpvar_37;
					  tmpvar_37.w = 1.0;
					  tmpvar_37.xyz = normal_35;
					  mediump vec3 res_38;
					  mediump vec3 x_39;
					  x_39.x = dot (unity_SHAr, tmpvar_37);
					  x_39.y = dot (unity_SHAg, tmpvar_37);
					  x_39.z = dot (unity_SHAb, tmpvar_37);
					  mediump vec3 x1_40;
					  mediump vec4 tmpvar_41;
					  tmpvar_41 = (normal_35.xyzz * normal_35.yzzx);
					  x1_40.x = dot (unity_SHBr, tmpvar_41);
					  x1_40.y = dot (unity_SHBg, tmpvar_41);
					  x1_40.z = dot (unity_SHBb, tmpvar_41);
					  res_38 = (x_39 + (x1_40 + (unity_SHC.xyz * 
					    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
					  )));
					  res_38 = max (((1.055 * 
					    pow (max (res_38, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  ambient_36 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), res_38));
					  tmpvar_5 = ambient_36;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_18;
					  xlv_TEXCOORD2 = tmpvar_19;
					  xlv_TEXCOORD3 = tmpvar_20;
					  xlv_TEXCOORD4 = ambient_36;
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_9);
					  xlv_TEXCOORD6 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_8 = (tmpvar_9.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_10;
					  tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_11;
					  highp float lightShadowDataX_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = _LightShadowData.x;
					  lightShadowDataX_12 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_12);
					  tmpvar_11 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_17;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_18;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_18) * diff_21);
					  c_20.w = tmpvar_9.w;
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_8 * xlv_TEXCOORD4));
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_19.xyz, vec3(tmpvar_23));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_8 = tmpvar_9.xyz;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].x;
					  v_10.y = unity_WorldToObject[1].x;
					  v_10.z = unity_WorldToObject[2].x;
					  v_10.w = unity_WorldToObject[3].x;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].y;
					  v_11.y = unity_WorldToObject[1].y;
					  v_11.z = unity_WorldToObject[2].y;
					  v_11.w = unity_WorldToObject[3].y;
					  highp vec4 v_12;
					  v_12.x = unity_WorldToObject[0].z;
					  v_12.y = unity_WorldToObject[1].z;
					  v_12.z = unity_WorldToObject[2].z;
					  v_12.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize(((
					    (v_10.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_12.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_13;
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_15;
					  tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_16;
					  lowp vec3 tmpvar_17;
					  tmpvar_17 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.x;
					  tmpvar_18.y = tmpvar_17.x;
					  tmpvar_18.z = worldNormal_3.x;
					  tmpvar_18.w = tmpvar_8.x;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.y;
					  tmpvar_19.y = tmpvar_17.y;
					  tmpvar_19.z = worldNormal_3.y;
					  tmpvar_19.w = tmpvar_8.y;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_2.z;
					  tmpvar_20.y = tmpvar_17.z;
					  tmpvar_20.z = worldNormal_3.z;
					  tmpvar_20.w = tmpvar_8.z;
					  highp vec3 lightColor0_21;
					  lightColor0_21 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_22;
					  lightColor1_22 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_23;
					  lightColor2_23 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_24;
					  lightColor3_24 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_25;
					  lightAttenSq_25 = unity_4LightAtten0;
					  highp vec3 normal_26;
					  normal_26 = worldNormal_3;
					  highp vec3 col_27;
					  highp vec4 ndotl_28;
					  highp vec4 lengthSq_29;
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosX0 - tmpvar_9.x);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosY0 - tmpvar_9.y);
					  highp vec4 tmpvar_32;
					  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_9.z);
					  lengthSq_29 = (tmpvar_30 * tmpvar_30);
					  lengthSq_29 = (lengthSq_29 + (tmpvar_31 * tmpvar_31));
					  lengthSq_29 = (lengthSq_29 + (tmpvar_32 * tmpvar_32));
					  ndotl_28 = (tmpvar_30 * normal_26.x);
					  ndotl_28 = (ndotl_28 + (tmpvar_31 * normal_26.y));
					  ndotl_28 = (ndotl_28 + (tmpvar_32 * normal_26.z));
					  highp vec4 tmpvar_33;
					  tmpvar_33 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_28 * inversesqrt(lengthSq_29)));
					  ndotl_28 = tmpvar_33;
					  highp vec4 tmpvar_34;
					  tmpvar_34 = (tmpvar_33 * (1.0/((1.0 + 
					    (lengthSq_29 * lightAttenSq_25)
					  ))));
					  col_27 = (lightColor0_21 * tmpvar_34.x);
					  col_27 = (col_27 + (lightColor1_22 * tmpvar_34.y));
					  col_27 = (col_27 + (lightColor2_23 * tmpvar_34.z));
					  col_27 = (col_27 + (lightColor3_24 * tmpvar_34.w));
					  tmpvar_5 = col_27;
					  mediump vec3 normal_35;
					  normal_35 = worldNormal_3;
					  mediump vec3 ambient_36;
					  mediump vec4 tmpvar_37;
					  tmpvar_37.w = 1.0;
					  tmpvar_37.xyz = normal_35;
					  mediump vec3 res_38;
					  mediump vec3 x_39;
					  x_39.x = dot (unity_SHAr, tmpvar_37);
					  x_39.y = dot (unity_SHAg, tmpvar_37);
					  x_39.z = dot (unity_SHAb, tmpvar_37);
					  mediump vec3 x1_40;
					  mediump vec4 tmpvar_41;
					  tmpvar_41 = (normal_35.xyzz * normal_35.yzzx);
					  x1_40.x = dot (unity_SHBr, tmpvar_41);
					  x1_40.y = dot (unity_SHBg, tmpvar_41);
					  x1_40.z = dot (unity_SHBb, tmpvar_41);
					  res_38 = (x_39 + (x1_40 + (unity_SHC.xyz * 
					    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
					  )));
					  res_38 = max (((1.055 * 
					    pow (max (res_38, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  ambient_36 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), res_38));
					  tmpvar_5 = ambient_36;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_18;
					  xlv_TEXCOORD2 = tmpvar_19;
					  xlv_TEXCOORD3 = tmpvar_20;
					  xlv_TEXCOORD4 = ambient_36;
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_9);
					  xlv_TEXCOORD6 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_8 = (tmpvar_9.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_10;
					  tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_11;
					  highp float lightShadowDataX_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = _LightShadowData.x;
					  lightShadowDataX_12 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_12);
					  tmpvar_11 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_17;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_18;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_18) * diff_21);
					  c_20.w = tmpvar_9.w;
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_8 * xlv_TEXCOORD4));
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_19.xyz, vec3(tmpvar_23));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					mediump vec4 u_xlat16_2;
					vec4 u_xlat3;
					lowp vec3 u_xlat10_3;
					vec4 u_xlat4;
					mediump vec3 u_xlat16_5;
					mediump vec3 u_xlat16_6;
					vec3 u_xlat7;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat7.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat7.xyz;
					    u_xlat1.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat7.xyz = u_xlat7.xyz * u_xlat1.xxx;
					    u_xlat1.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat1.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat1.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat2.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat2.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat2.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat2.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat2.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = dot(u_xlat1.xyw, u_xlat1.xyw);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat1 = u_xlat1.xywz * u_xlat2.xxxx;
					    u_xlat10_3.xyz = u_xlat7.xyz * u_xlat1.zxy;
					    u_xlat10_3.xyz = u_xlat1.yzx * u_xlat7.yzx + (-u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xxx * u_xlat10_3.xyz;
					    vs_TEXCOORD1.y = u_xlat10_3.x;
					    vs_TEXCOORD1.x = u_xlat7.z;
					    vs_TEXCOORD1.z = u_xlat1.x;
					    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;
					    vs_TEXCOORD1.w = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat7.x;
					    vs_TEXCOORD3.x = u_xlat7.y;
					    vs_TEXCOORD2.y = u_xlat10_3.y;
					    vs_TEXCOORD3.y = u_xlat10_3.z;
					    vs_TEXCOORD2.z = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat1.z;
					    vs_TEXCOORD3.w = u_xlat2.z;
					    u_xlat0 = (-u_xlat2.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat0;
					    u_xlat0 = u_xlat0 * u_xlat0;
					    u_xlat4 = (-u_xlat2.xxxx) + unity_4LightPosX0;
					    u_xlat2 = (-u_xlat2.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;
					    u_xlat0 = u_xlat2 * u_xlat2 + u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat1.zzwz + u_xlat3;
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat3;
					    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat2;
					    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
					    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
					    u_xlat16_2 = u_xlat1.yzwx * u_xlat1.xywz;
					    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
					    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
					    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
					    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
					    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
					    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
					    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
					    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat1.xyz = log2(u_xlat16_5.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat1.xyz = exp2(u_xlat1.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    vec3 txVec603 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec603, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_7.xyz = u_xlat16_7.xxx * _LightColor0.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat10_1.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					mediump vec4 u_xlat16_2;
					vec4 u_xlat3;
					lowp vec3 u_xlat10_3;
					vec4 u_xlat4;
					mediump vec3 u_xlat16_5;
					mediump vec3 u_xlat16_6;
					vec3 u_xlat7;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat7.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat7.xyz;
					    u_xlat1.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat7.xyz = u_xlat7.xyz * u_xlat1.xxx;
					    u_xlat1.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat1.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat1.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat2.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat2.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat2.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat2.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat2.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = dot(u_xlat1.xyw, u_xlat1.xyw);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat1 = u_xlat1.xywz * u_xlat2.xxxx;
					    u_xlat10_3.xyz = u_xlat7.xyz * u_xlat1.zxy;
					    u_xlat10_3.xyz = u_xlat1.yzx * u_xlat7.yzx + (-u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xxx * u_xlat10_3.xyz;
					    vs_TEXCOORD1.y = u_xlat10_3.x;
					    vs_TEXCOORD1.x = u_xlat7.z;
					    vs_TEXCOORD1.z = u_xlat1.x;
					    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;
					    vs_TEXCOORD1.w = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat7.x;
					    vs_TEXCOORD3.x = u_xlat7.y;
					    vs_TEXCOORD2.y = u_xlat10_3.y;
					    vs_TEXCOORD3.y = u_xlat10_3.z;
					    vs_TEXCOORD2.z = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat1.z;
					    vs_TEXCOORD3.w = u_xlat2.z;
					    u_xlat0 = (-u_xlat2.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat0;
					    u_xlat0 = u_xlat0 * u_xlat0;
					    u_xlat4 = (-u_xlat2.xxxx) + unity_4LightPosX0;
					    u_xlat2 = (-u_xlat2.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;
					    u_xlat0 = u_xlat2 * u_xlat2 + u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat1.zzwz + u_xlat3;
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat3;
					    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat2;
					    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
					    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
					    u_xlat16_2 = u_xlat1.yzwx * u_xlat1.xywz;
					    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
					    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
					    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
					    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
					    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
					    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
					    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
					    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat1.xyz = log2(u_xlat16_5.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat1.xyz = exp2(u_xlat1.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    vec3 txVec567 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec567, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_7.xyz = u_xlat16_7.xxx * _LightColor0.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat10_1.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					mediump vec4 u_xlat16_2;
					vec4 u_xlat3;
					lowp vec3 u_xlat10_3;
					vec4 u_xlat4;
					mediump vec3 u_xlat16_5;
					mediump vec3 u_xlat16_6;
					vec3 u_xlat7;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat7.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat7.xyz;
					    u_xlat1.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat7.xyz = u_xlat7.xyz * u_xlat1.xxx;
					    u_xlat1.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat1.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat1.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat2.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat2.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat2.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat2.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat2.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = dot(u_xlat1.xyw, u_xlat1.xyw);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat1 = u_xlat1.xywz * u_xlat2.xxxx;
					    u_xlat10_3.xyz = u_xlat7.xyz * u_xlat1.zxy;
					    u_xlat10_3.xyz = u_xlat1.yzx * u_xlat7.yzx + (-u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xxx * u_xlat10_3.xyz;
					    vs_TEXCOORD1.y = u_xlat10_3.x;
					    vs_TEXCOORD1.x = u_xlat7.z;
					    vs_TEXCOORD1.z = u_xlat1.x;
					    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;
					    vs_TEXCOORD1.w = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat7.x;
					    vs_TEXCOORD3.x = u_xlat7.y;
					    vs_TEXCOORD2.y = u_xlat10_3.y;
					    vs_TEXCOORD3.y = u_xlat10_3.z;
					    vs_TEXCOORD2.z = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat1.z;
					    vs_TEXCOORD3.w = u_xlat2.z;
					    u_xlat0 = (-u_xlat2.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat0;
					    u_xlat0 = u_xlat0 * u_xlat0;
					    u_xlat4 = (-u_xlat2.xxxx) + unity_4LightPosX0;
					    u_xlat2 = (-u_xlat2.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;
					    u_xlat0 = u_xlat2 * u_xlat2 + u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat1.zzwz + u_xlat3;
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat3;
					    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat2;
					    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
					    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
					    u_xlat16_2 = u_xlat1.yzwx * u_xlat1.xywz;
					    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
					    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
					    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
					    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
					    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
					    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
					    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
					    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat1.xyz = log2(u_xlat16_5.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat1.xyz = exp2(u_xlat1.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    vec3 txVec637 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec637, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_7.xyz = u_xlat16_7.xxx * _LightColor0.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat10_1.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_7.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_7.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_7.z;
					  mediump vec3 normal_19;
					  normal_19 = worldNormal_3;
					  mediump vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = normal_19;
					  mediump vec3 res_21;
					  mediump vec3 x_22;
					  x_22.x = dot (unity_SHAr, tmpvar_20);
					  x_22.y = dot (unity_SHAg, tmpvar_20);
					  x_22.z = dot (unity_SHAb, tmpvar_20);
					  mediump vec3 x1_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24 = (normal_19.xyzz * normal_19.yzzx);
					  x1_23.x = dot (unity_SHBr, tmpvar_24);
					  x1_23.y = dot (unity_SHBg, tmpvar_24);
					  x1_23.z = dot (unity_SHBb, tmpvar_24);
					  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
					    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
					  )));
					  res_21 = max (((1.055 * 
					    pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), res_21);
					  xlv_TEXCOORD6 = exp2(-((unity_FogParams.y * tmpvar_5.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_7 = (tmpvar_8.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_9;
					  tmpvar_9 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_12;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7 * tmpvar_1) * diff_15);
					  c_14.w = tmpvar_8.w;
					  c_13.w = c_14.w;
					  c_13.xyz = (c_14.xyz + (tmpvar_7 * xlv_TEXCOORD4));
					  highp float tmpvar_17;
					  tmpvar_17 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_13.xyz, vec3(tmpvar_17));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_7.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_7.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_7.z;
					  mediump vec3 normal_19;
					  normal_19 = worldNormal_3;
					  mediump vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = normal_19;
					  mediump vec3 res_21;
					  mediump vec3 x_22;
					  x_22.x = dot (unity_SHAr, tmpvar_20);
					  x_22.y = dot (unity_SHAg, tmpvar_20);
					  x_22.z = dot (unity_SHAb, tmpvar_20);
					  mediump vec3 x1_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24 = (normal_19.xyzz * normal_19.yzzx);
					  x1_23.x = dot (unity_SHBr, tmpvar_24);
					  x1_23.y = dot (unity_SHBg, tmpvar_24);
					  x1_23.z = dot (unity_SHBb, tmpvar_24);
					  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
					    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
					  )));
					  res_21 = max (((1.055 * 
					    pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), res_21);
					  xlv_TEXCOORD6 = exp2(-((unity_FogParams.y * tmpvar_5.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_7 = (tmpvar_8.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_9;
					  tmpvar_9 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_12;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7 * tmpvar_1) * diff_15);
					  c_14.w = tmpvar_8.w;
					  c_13.w = c_14.w;
					  c_13.xyz = (c_14.xyz + (tmpvar_7 * xlv_TEXCOORD4));
					  highp float tmpvar_17;
					  tmpvar_17 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_13.xyz, vec3(tmpvar_17));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_7.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_7.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_7.z;
					  mediump vec3 normal_19;
					  normal_19 = worldNormal_3;
					  mediump vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = normal_19;
					  mediump vec3 res_21;
					  mediump vec3 x_22;
					  x_22.x = dot (unity_SHAr, tmpvar_20);
					  x_22.y = dot (unity_SHAg, tmpvar_20);
					  x_22.z = dot (unity_SHAb, tmpvar_20);
					  mediump vec3 x1_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24 = (normal_19.xyzz * normal_19.yzzx);
					  x1_23.x = dot (unity_SHBr, tmpvar_24);
					  x1_23.y = dot (unity_SHBg, tmpvar_24);
					  x1_23.z = dot (unity_SHBb, tmpvar_24);
					  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
					    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
					  )));
					  res_21 = max (((1.055 * 
					    pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), res_21);
					  xlv_TEXCOORD6 = exp2(-((unity_FogParams.y * tmpvar_5.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_7 = (tmpvar_8.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_9;
					  tmpvar_9 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_12;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7 * tmpvar_1) * diff_15);
					  c_14.w = tmpvar_8.w;
					  c_13.w = c_14.w;
					  c_13.xyz = (c_14.xyz + (tmpvar_7 * xlv_TEXCOORD4));
					  highp float tmpvar_17;
					  tmpvar_17 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_13.xyz, vec3(tmpvar_17));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD6 = exp2((-u_xlat0.x));
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat10_1.xyz * _LightColor0.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD6 = exp2((-u_xlat0.x));
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat10_1.xyz * _LightColor0.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD6 = exp2((-u_xlat0.x));
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat10_1.xyz * _LightColor0.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_8.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_8.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_8.z;
					  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD6 = exp2(-((unity_FogParams.y * tmpvar_6.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp vec4 c_1;
					  lowp vec4 tmpvar_2;
					  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_3;
					  tmpvar_3 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_4;
					  tmpvar_4 = (2.0 * tmpvar_3.xyz);
					  lowp vec4 c_5;
					  lowp vec4 c_6;
					  c_6.xyz = vec3(0.0, 0.0, 0.0);
					  c_6.w = tmpvar_2.w;
					  c_5.w = c_6.w;
					  c_5.xyz = ((tmpvar_2.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * tmpvar_4);
					  highp float tmpvar_7;
					  tmpvar_7 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_1.xyz = mix (unity_FogColor.xyz, c_5.xyz, vec3(tmpvar_7));
					  c_1.w = 1.0;
					  gl_FragData[0] = c_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_8.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_8.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_8.z;
					  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD6 = exp2(-((unity_FogParams.y * tmpvar_6.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp vec4 c_1;
					  lowp vec4 tmpvar_2;
					  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_3;
					  tmpvar_3 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_4;
					  tmpvar_4 = (2.0 * tmpvar_3.xyz);
					  lowp vec4 c_5;
					  lowp vec4 c_6;
					  c_6.xyz = vec3(0.0, 0.0, 0.0);
					  c_6.w = tmpvar_2.w;
					  c_5.w = c_6.w;
					  c_5.xyz = ((tmpvar_2.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * tmpvar_4);
					  highp float tmpvar_7;
					  tmpvar_7 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_1.xyz = mix (unity_FogColor.xyz, c_5.xyz, vec3(tmpvar_7));
					  c_1.w = 1.0;
					  gl_FragData[0] = c_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_8.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_8.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_8.z;
					  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD6 = exp2(-((unity_FogParams.y * tmpvar_6.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp vec4 c_1;
					  lowp vec4 tmpvar_2;
					  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_3;
					  tmpvar_3 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_4;
					  tmpvar_4 = (2.0 * tmpvar_3.xyz);
					  lowp vec4 c_5;
					  lowp vec4 c_6;
					  c_6.xyz = vec3(0.0, 0.0, 0.0);
					  c_6.w = tmpvar_2.w;
					  c_5.w = c_6.w;
					  c_5.xyz = ((tmpvar_2.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * tmpvar_4);
					  highp float tmpvar_7;
					  tmpvar_7 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_1.xyz = mix (unity_FogColor.xyz, c_5.xyz, vec3(tmpvar_7));
					  c_1.w = 1.0;
					  gl_FragData[0] = c_1;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec3 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD6 = exp2((-u_xlat0.x));
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					float u_xlat12;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_0.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz + (-unity_FogColor.xyz);
					    u_xlat12 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
					#else
					    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec3 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD6 = exp2((-u_xlat0.x));
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					float u_xlat12;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_0.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz + (-unity_FogColor.xyz);
					    u_xlat12 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
					#else
					    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec3 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD6 = exp2((-u_xlat0.x));
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					float u_xlat12;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_0.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz + (-unity_FogColor.xyz);
					    u_xlat12 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
					#else
					    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_7 = tmpvar_8.xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_7.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_7.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_7.z;
					  mediump vec3 normal_20;
					  normal_20 = worldNormal_3;
					  mediump vec4 tmpvar_21;
					  tmpvar_21.w = 1.0;
					  tmpvar_21.xyz = normal_20;
					  mediump vec3 res_22;
					  mediump vec3 x_23;
					  x_23.x = dot (unity_SHAr, tmpvar_21);
					  x_23.y = dot (unity_SHAg, tmpvar_21);
					  x_23.z = dot (unity_SHAb, tmpvar_21);
					  mediump vec3 x1_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25 = (normal_20.xyzz * normal_20.yzzx);
					  x1_24.x = dot (unity_SHBr, tmpvar_25);
					  x1_24.y = dot (unity_SHBg, tmpvar_25);
					  x1_24.z = dot (unity_SHBb, tmpvar_25);
					  res_22 = (x_23 + (x1_24 + (unity_SHC.xyz * 
					    ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
					  )));
					  res_22 = max (((1.055 * 
					    pow (max (res_22, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), res_22);
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_8);
					  xlv_TEXCOORD6 = exp2(-((unity_FogParams.y * tmpvar_5.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_8 = (tmpvar_9.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_10;
					  tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_11;
					  highp float lightShadowDataX_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = _LightShadowData.x;
					  lightShadowDataX_12 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_12);
					  tmpvar_11 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_17;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_18;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_18) * diff_21);
					  c_20.w = tmpvar_9.w;
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_8 * xlv_TEXCOORD4));
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_19.xyz, vec3(tmpvar_23));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_7 = tmpvar_8.xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_7.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_7.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_7.z;
					  mediump vec3 normal_20;
					  normal_20 = worldNormal_3;
					  mediump vec4 tmpvar_21;
					  tmpvar_21.w = 1.0;
					  tmpvar_21.xyz = normal_20;
					  mediump vec3 res_22;
					  mediump vec3 x_23;
					  x_23.x = dot (unity_SHAr, tmpvar_21);
					  x_23.y = dot (unity_SHAg, tmpvar_21);
					  x_23.z = dot (unity_SHAb, tmpvar_21);
					  mediump vec3 x1_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25 = (normal_20.xyzz * normal_20.yzzx);
					  x1_24.x = dot (unity_SHBr, tmpvar_25);
					  x1_24.y = dot (unity_SHBg, tmpvar_25);
					  x1_24.z = dot (unity_SHBb, tmpvar_25);
					  res_22 = (x_23 + (x1_24 + (unity_SHC.xyz * 
					    ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
					  )));
					  res_22 = max (((1.055 * 
					    pow (max (res_22, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), res_22);
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_8);
					  xlv_TEXCOORD6 = exp2(-((unity_FogParams.y * tmpvar_5.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_8 = (tmpvar_9.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_10;
					  tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_11;
					  highp float lightShadowDataX_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = _LightShadowData.x;
					  lightShadowDataX_12 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_12);
					  tmpvar_11 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_17;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_18;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_18) * diff_21);
					  c_20.w = tmpvar_9.w;
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_8 * xlv_TEXCOORD4));
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_19.xyz, vec3(tmpvar_23));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_7 = tmpvar_8.xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_7.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_7.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_7.z;
					  mediump vec3 normal_20;
					  normal_20 = worldNormal_3;
					  mediump vec4 tmpvar_21;
					  tmpvar_21.w = 1.0;
					  tmpvar_21.xyz = normal_20;
					  mediump vec3 res_22;
					  mediump vec3 x_23;
					  x_23.x = dot (unity_SHAr, tmpvar_21);
					  x_23.y = dot (unity_SHAg, tmpvar_21);
					  x_23.z = dot (unity_SHAb, tmpvar_21);
					  mediump vec3 x1_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25 = (normal_20.xyzz * normal_20.yzzx);
					  x1_24.x = dot (unity_SHBr, tmpvar_25);
					  x1_24.y = dot (unity_SHBg, tmpvar_25);
					  x1_24.z = dot (unity_SHBb, tmpvar_25);
					  res_22 = (x_23 + (x1_24 + (unity_SHC.xyz * 
					    ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
					  )));
					  res_22 = max (((1.055 * 
					    pow (max (res_22, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), res_22);
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_8);
					  xlv_TEXCOORD6 = exp2(-((unity_FogParams.y * tmpvar_5.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_8 = (tmpvar_9.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_10;
					  tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_11;
					  highp float lightShadowDataX_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = _LightShadowData.x;
					  lightShadowDataX_12 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_12);
					  tmpvar_11 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_17;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_18;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_18) * diff_21);
					  c_20.w = tmpvar_9.w;
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_8 * xlv_TEXCOORD4));
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_19.xyz, vec3(tmpvar_23));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD6 = exp2((-u_xlat0.x));
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz;
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    vec3 txVec568 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec568, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_7.xyz = u_xlat16_7.xxx * _LightColor0.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat10_1.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD6 = exp2((-u_xlat0.x));
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz;
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    vec3 txVec638 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec638, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_7.xyz = u_xlat16_7.xxx * _LightColor0.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat10_1.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD6 = exp2((-u_xlat0.x));
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz;
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    vec3 txVec604 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec604, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_7.xyz = u_xlat16_7.xxx * _LightColor0.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat10_1.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_8 = tmpvar_9.xyz;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].x;
					  v_10.y = unity_WorldToObject[1].x;
					  v_10.z = unity_WorldToObject[2].x;
					  v_10.w = unity_WorldToObject[3].x;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].y;
					  v_11.y = unity_WorldToObject[1].y;
					  v_11.z = unity_WorldToObject[2].y;
					  v_11.w = unity_WorldToObject[3].y;
					  highp vec4 v_12;
					  v_12.x = unity_WorldToObject[0].z;
					  v_12.y = unity_WorldToObject[1].z;
					  v_12.z = unity_WorldToObject[2].z;
					  v_12.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize(((
					    (v_10.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_12.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_13;
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_15;
					  tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_16;
					  lowp vec3 tmpvar_17;
					  tmpvar_17 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.x;
					  tmpvar_18.y = tmpvar_17.x;
					  tmpvar_18.z = worldNormal_3.x;
					  tmpvar_18.w = tmpvar_8.x;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.y;
					  tmpvar_19.y = tmpvar_17.y;
					  tmpvar_19.z = worldNormal_3.y;
					  tmpvar_19.w = tmpvar_8.y;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_2.z;
					  tmpvar_20.y = tmpvar_17.z;
					  tmpvar_20.z = worldNormal_3.z;
					  tmpvar_20.w = tmpvar_8.z;
					  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_18;
					  xlv_TEXCOORD2 = tmpvar_19;
					  xlv_TEXCOORD3 = tmpvar_20;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_9);
					  xlv_TEXCOORD6 = exp2(-((unity_FogParams.y * tmpvar_6.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  lowp vec3 worldN_2;
					  lowp vec4 c_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec3 tmpvar_5;
					  tmpvar_5 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_6;
					  highp float lightShadowDataX_7;
					  mediump float tmpvar_8;
					  tmpvar_8 = _LightShadowData.x;
					  lightShadowDataX_7 = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_7);
					  tmpvar_6 = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_2.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_2.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_2.z = tmpvar_12;
					  tmpvar_1 = tmpvar_6;
					  mediump vec3 normalWorld_13;
					  normalWorld_13 = worldN_2;
					  mediump vec3 tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = (2.0 * tmpvar_15.xyz);
					  mediump vec3 lightmapTint_17;
					  lowp vec3 tmpvar_18;
					  tmpvar_18 = tmpvar_15.xyz;
					  lightmapTint_17 = tmpvar_18;
					  tmpvar_14 = max (min (tmpvar_16, (lightmapTint_17 * tmpvar_1)), (tmpvar_16 - (
					    (clamp (dot (normalWorld_13, _WorldSpaceLightPos0.xyz), 0.0, 1.0) * (1.0 - max (0.0, (tmpvar_1 - _LightShadowData.x))))
					   * _LightColor0.xyz)));
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  c_20.xyz = vec3(0.0, 0.0, 0.0);
					  c_20.w = tmpvar_4.w;
					  c_19.w = c_20.w;
					  c_19.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * tmpvar_14);
					  highp float tmpvar_21;
					  tmpvar_21 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_19.xyz, vec3(tmpvar_21));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_8 = tmpvar_9.xyz;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].x;
					  v_10.y = unity_WorldToObject[1].x;
					  v_10.z = unity_WorldToObject[2].x;
					  v_10.w = unity_WorldToObject[3].x;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].y;
					  v_11.y = unity_WorldToObject[1].y;
					  v_11.z = unity_WorldToObject[2].y;
					  v_11.w = unity_WorldToObject[3].y;
					  highp vec4 v_12;
					  v_12.x = unity_WorldToObject[0].z;
					  v_12.y = unity_WorldToObject[1].z;
					  v_12.z = unity_WorldToObject[2].z;
					  v_12.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize(((
					    (v_10.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_12.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_13;
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_15;
					  tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_16;
					  lowp vec3 tmpvar_17;
					  tmpvar_17 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.x;
					  tmpvar_18.y = tmpvar_17.x;
					  tmpvar_18.z = worldNormal_3.x;
					  tmpvar_18.w = tmpvar_8.x;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.y;
					  tmpvar_19.y = tmpvar_17.y;
					  tmpvar_19.z = worldNormal_3.y;
					  tmpvar_19.w = tmpvar_8.y;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_2.z;
					  tmpvar_20.y = tmpvar_17.z;
					  tmpvar_20.z = worldNormal_3.z;
					  tmpvar_20.w = tmpvar_8.z;
					  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_18;
					  xlv_TEXCOORD2 = tmpvar_19;
					  xlv_TEXCOORD3 = tmpvar_20;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_9);
					  xlv_TEXCOORD6 = exp2(-((unity_FogParams.y * tmpvar_6.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  lowp vec3 worldN_2;
					  lowp vec4 c_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec3 tmpvar_5;
					  tmpvar_5 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_6;
					  highp float lightShadowDataX_7;
					  mediump float tmpvar_8;
					  tmpvar_8 = _LightShadowData.x;
					  lightShadowDataX_7 = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_7);
					  tmpvar_6 = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_2.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_2.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_2.z = tmpvar_12;
					  tmpvar_1 = tmpvar_6;
					  mediump vec3 normalWorld_13;
					  normalWorld_13 = worldN_2;
					  mediump vec3 tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = (2.0 * tmpvar_15.xyz);
					  mediump vec3 lightmapTint_17;
					  lowp vec3 tmpvar_18;
					  tmpvar_18 = tmpvar_15.xyz;
					  lightmapTint_17 = tmpvar_18;
					  tmpvar_14 = max (min (tmpvar_16, (lightmapTint_17 * tmpvar_1)), (tmpvar_16 - (
					    (clamp (dot (normalWorld_13, _WorldSpaceLightPos0.xyz), 0.0, 1.0) * (1.0 - max (0.0, (tmpvar_1 - _LightShadowData.x))))
					   * _LightColor0.xyz)));
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  c_20.xyz = vec3(0.0, 0.0, 0.0);
					  c_20.w = tmpvar_4.w;
					  c_19.w = c_20.w;
					  c_19.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * tmpvar_14);
					  highp float tmpvar_21;
					  tmpvar_21 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_19.xyz, vec3(tmpvar_21));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_8 = tmpvar_9.xyz;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].x;
					  v_10.y = unity_WorldToObject[1].x;
					  v_10.z = unity_WorldToObject[2].x;
					  v_10.w = unity_WorldToObject[3].x;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].y;
					  v_11.y = unity_WorldToObject[1].y;
					  v_11.z = unity_WorldToObject[2].y;
					  v_11.w = unity_WorldToObject[3].y;
					  highp vec4 v_12;
					  v_12.x = unity_WorldToObject[0].z;
					  v_12.y = unity_WorldToObject[1].z;
					  v_12.z = unity_WorldToObject[2].z;
					  v_12.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize(((
					    (v_10.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_12.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_13;
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_15;
					  tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_16;
					  lowp vec3 tmpvar_17;
					  tmpvar_17 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.x;
					  tmpvar_18.y = tmpvar_17.x;
					  tmpvar_18.z = worldNormal_3.x;
					  tmpvar_18.w = tmpvar_8.x;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.y;
					  tmpvar_19.y = tmpvar_17.y;
					  tmpvar_19.z = worldNormal_3.y;
					  tmpvar_19.w = tmpvar_8.y;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_2.z;
					  tmpvar_20.y = tmpvar_17.z;
					  tmpvar_20.z = worldNormal_3.z;
					  tmpvar_20.w = tmpvar_8.z;
					  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_18;
					  xlv_TEXCOORD2 = tmpvar_19;
					  xlv_TEXCOORD3 = tmpvar_20;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_9);
					  xlv_TEXCOORD6 = exp2(-((unity_FogParams.y * tmpvar_6.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  lowp vec3 worldN_2;
					  lowp vec4 c_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec3 tmpvar_5;
					  tmpvar_5 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_6;
					  highp float lightShadowDataX_7;
					  mediump float tmpvar_8;
					  tmpvar_8 = _LightShadowData.x;
					  lightShadowDataX_7 = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_7);
					  tmpvar_6 = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_2.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_2.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_2.z = tmpvar_12;
					  tmpvar_1 = tmpvar_6;
					  mediump vec3 normalWorld_13;
					  normalWorld_13 = worldN_2;
					  mediump vec3 tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = (2.0 * tmpvar_15.xyz);
					  mediump vec3 lightmapTint_17;
					  lowp vec3 tmpvar_18;
					  tmpvar_18 = tmpvar_15.xyz;
					  lightmapTint_17 = tmpvar_18;
					  tmpvar_14 = max (min (tmpvar_16, (lightmapTint_17 * tmpvar_1)), (tmpvar_16 - (
					    (clamp (dot (normalWorld_13, _WorldSpaceLightPos0.xyz), 0.0, 1.0) * (1.0 - max (0.0, (tmpvar_1 - _LightShadowData.x))))
					   * _LightColor0.xyz)));
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  c_20.xyz = vec3(0.0, 0.0, 0.0);
					  c_20.w = tmpvar_4.w;
					  c_19.w = c_20.w;
					  c_19.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * tmpvar_14);
					  highp float tmpvar_21;
					  tmpvar_21 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_19.xyz, vec3(tmpvar_21));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD6 = exp2((-u_xlat0.x));
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2D unity_Lightmap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in highp vec4 vs_TEXCOORD4;
					in highp vec4 vs_TEXCOORD5;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					lowp vec3 u_xlat10_4;
					mediump vec3 u_xlat16_7;
					mediump float u_xlat16_12;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					#ifdef UNITY_ADRENO_ES3
					    u_xlat16_2.x = min(max(u_xlat16_2.x, 0.0), 1.0);
					#else
					    u_xlat16_2.x = clamp(u_xlat16_2.x, 0.0, 1.0);
					#endif
					    vec3 txVec569 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec569, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_12 = u_xlat10_0.x * u_xlat16_7.x;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_12 = max(u_xlat16_12, 0.0);
					    u_xlat16_12 = (-u_xlat16_12) + 1.0;
					    u_xlat16_2.x = u_xlat16_12 * u_xlat16_2.x;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_7.xyz = u_xlat16_7.xxx * u_xlat10_0.xyz;
					    u_xlat16_7.xyz = min(u_xlat10_1.xyz, u_xlat16_7.xyz);
					    u_xlat16_3.xyz = (-u_xlat16_2.xxx) * _LightColor0.xyz + u_xlat10_1.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_7.xyz, u_xlat16_3.xyz);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_4.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_4.xyz;
					    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD6 = exp2((-u_xlat0.x));
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2D unity_Lightmap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in highp vec4 vs_TEXCOORD4;
					in highp vec4 vs_TEXCOORD5;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					lowp vec3 u_xlat10_4;
					mediump vec3 u_xlat16_7;
					mediump float u_xlat16_12;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					#ifdef UNITY_ADRENO_ES3
					    u_xlat16_2.x = min(max(u_xlat16_2.x, 0.0), 1.0);
					#else
					    u_xlat16_2.x = clamp(u_xlat16_2.x, 0.0, 1.0);
					#endif
					    vec3 txVec605 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec605, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_12 = u_xlat10_0.x * u_xlat16_7.x;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_12 = max(u_xlat16_12, 0.0);
					    u_xlat16_12 = (-u_xlat16_12) + 1.0;
					    u_xlat16_2.x = u_xlat16_12 * u_xlat16_2.x;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_7.xyz = u_xlat16_7.xxx * u_xlat10_0.xyz;
					    u_xlat16_7.xyz = min(u_xlat10_1.xyz, u_xlat16_7.xyz);
					    u_xlat16_3.xyz = (-u_xlat16_2.xxx) * _LightColor0.xyz + u_xlat10_1.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_7.xyz, u_xlat16_3.xyz);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_4.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_4.xyz;
					    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD6 = exp2((-u_xlat0.x));
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2D unity_Lightmap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in highp vec4 vs_TEXCOORD4;
					in highp vec4 vs_TEXCOORD5;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					lowp vec3 u_xlat10_4;
					mediump vec3 u_xlat16_7;
					mediump float u_xlat16_12;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					#ifdef UNITY_ADRENO_ES3
					    u_xlat16_2.x = min(max(u_xlat16_2.x, 0.0), 1.0);
					#else
					    u_xlat16_2.x = clamp(u_xlat16_2.x, 0.0, 1.0);
					#endif
					    vec3 txVec639 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec639, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_12 = u_xlat10_0.x * u_xlat16_7.x;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_12 = max(u_xlat16_12, 0.0);
					    u_xlat16_12 = (-u_xlat16_12) + 1.0;
					    u_xlat16_2.x = u_xlat16_12 * u_xlat16_2.x;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_7.xyz = u_xlat16_7.xxx * u_xlat10_0.xyz;
					    u_xlat16_7.xyz = min(u_xlat10_1.xyz, u_xlat16_7.xyz);
					    u_xlat16_3.xyz = (-u_xlat16_2.xxx) * _LightColor0.xyz + u_xlat10_1.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_7.xyz, u_xlat16_3.xyz);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_4.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_4.xyz;
					    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_8.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_8.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_8.z;
					  highp vec3 lightColor0_20;
					  lightColor0_20 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_21;
					  lightColor1_21 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_22;
					  lightColor2_22 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_23;
					  lightColor3_23 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_24;
					  lightAttenSq_24 = unity_4LightAtten0;
					  highp vec3 normal_25;
					  normal_25 = worldNormal_3;
					  highp vec3 col_26;
					  highp vec4 ndotl_27;
					  highp vec4 lengthSq_28;
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosX0 - tmpvar_8.x);
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosY0 - tmpvar_8.y);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosZ0 - tmpvar_8.z);
					  lengthSq_28 = (tmpvar_29 * tmpvar_29);
					  lengthSq_28 = (lengthSq_28 + (tmpvar_30 * tmpvar_30));
					  lengthSq_28 = (lengthSq_28 + (tmpvar_31 * tmpvar_31));
					  ndotl_27 = (tmpvar_29 * normal_25.x);
					  ndotl_27 = (ndotl_27 + (tmpvar_30 * normal_25.y));
					  ndotl_27 = (ndotl_27 + (tmpvar_31 * normal_25.z));
					  highp vec4 tmpvar_32;
					  tmpvar_32 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_27 * inversesqrt(lengthSq_28)));
					  ndotl_27 = tmpvar_32;
					  highp vec4 tmpvar_33;
					  tmpvar_33 = (tmpvar_32 * (1.0/((1.0 + 
					    (lengthSq_28 * lightAttenSq_24)
					  ))));
					  col_26 = (lightColor0_20 * tmpvar_33.x);
					  col_26 = (col_26 + (lightColor1_21 * tmpvar_33.y));
					  col_26 = (col_26 + (lightColor2_22 * tmpvar_33.z));
					  col_26 = (col_26 + (lightColor3_23 * tmpvar_33.w));
					  tmpvar_5 = col_26;
					  mediump vec3 normal_34;
					  normal_34 = worldNormal_3;
					  mediump vec3 ambient_35;
					  mediump vec4 tmpvar_36;
					  tmpvar_36.w = 1.0;
					  tmpvar_36.xyz = normal_34;
					  mediump vec3 res_37;
					  mediump vec3 x_38;
					  x_38.x = dot (unity_SHAr, tmpvar_36);
					  x_38.y = dot (unity_SHAg, tmpvar_36);
					  x_38.z = dot (unity_SHAb, tmpvar_36);
					  mediump vec3 x1_39;
					  mediump vec4 tmpvar_40;
					  tmpvar_40 = (normal_34.xyzz * normal_34.yzzx);
					  x1_39.x = dot (unity_SHBr, tmpvar_40);
					  x1_39.y = dot (unity_SHBg, tmpvar_40);
					  x1_39.z = dot (unity_SHBb, tmpvar_40);
					  res_37 = (x_38 + (x1_39 + (unity_SHC.xyz * 
					    ((normal_34.x * normal_34.x) - (normal_34.y * normal_34.y))
					  )));
					  res_37 = max (((1.055 * 
					    pow (max (res_37, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  ambient_35 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), res_37));
					  tmpvar_5 = ambient_35;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = ambient_35;
					  xlv_TEXCOORD6 = exp2(-((unity_FogParams.y * tmpvar_6.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_7 = (tmpvar_8.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_9;
					  tmpvar_9 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_12;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7 * tmpvar_1) * diff_15);
					  c_14.w = tmpvar_8.w;
					  c_13.w = c_14.w;
					  c_13.xyz = (c_14.xyz + (tmpvar_7 * xlv_TEXCOORD4));
					  highp float tmpvar_17;
					  tmpvar_17 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_13.xyz, vec3(tmpvar_17));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_8.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_8.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_8.z;
					  highp vec3 lightColor0_20;
					  lightColor0_20 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_21;
					  lightColor1_21 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_22;
					  lightColor2_22 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_23;
					  lightColor3_23 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_24;
					  lightAttenSq_24 = unity_4LightAtten0;
					  highp vec3 normal_25;
					  normal_25 = worldNormal_3;
					  highp vec3 col_26;
					  highp vec4 ndotl_27;
					  highp vec4 lengthSq_28;
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosX0 - tmpvar_8.x);
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosY0 - tmpvar_8.y);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosZ0 - tmpvar_8.z);
					  lengthSq_28 = (tmpvar_29 * tmpvar_29);
					  lengthSq_28 = (lengthSq_28 + (tmpvar_30 * tmpvar_30));
					  lengthSq_28 = (lengthSq_28 + (tmpvar_31 * tmpvar_31));
					  ndotl_27 = (tmpvar_29 * normal_25.x);
					  ndotl_27 = (ndotl_27 + (tmpvar_30 * normal_25.y));
					  ndotl_27 = (ndotl_27 + (tmpvar_31 * normal_25.z));
					  highp vec4 tmpvar_32;
					  tmpvar_32 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_27 * inversesqrt(lengthSq_28)));
					  ndotl_27 = tmpvar_32;
					  highp vec4 tmpvar_33;
					  tmpvar_33 = (tmpvar_32 * (1.0/((1.0 + 
					    (lengthSq_28 * lightAttenSq_24)
					  ))));
					  col_26 = (lightColor0_20 * tmpvar_33.x);
					  col_26 = (col_26 + (lightColor1_21 * tmpvar_33.y));
					  col_26 = (col_26 + (lightColor2_22 * tmpvar_33.z));
					  col_26 = (col_26 + (lightColor3_23 * tmpvar_33.w));
					  tmpvar_5 = col_26;
					  mediump vec3 normal_34;
					  normal_34 = worldNormal_3;
					  mediump vec3 ambient_35;
					  mediump vec4 tmpvar_36;
					  tmpvar_36.w = 1.0;
					  tmpvar_36.xyz = normal_34;
					  mediump vec3 res_37;
					  mediump vec3 x_38;
					  x_38.x = dot (unity_SHAr, tmpvar_36);
					  x_38.y = dot (unity_SHAg, tmpvar_36);
					  x_38.z = dot (unity_SHAb, tmpvar_36);
					  mediump vec3 x1_39;
					  mediump vec4 tmpvar_40;
					  tmpvar_40 = (normal_34.xyzz * normal_34.yzzx);
					  x1_39.x = dot (unity_SHBr, tmpvar_40);
					  x1_39.y = dot (unity_SHBg, tmpvar_40);
					  x1_39.z = dot (unity_SHBb, tmpvar_40);
					  res_37 = (x_38 + (x1_39 + (unity_SHC.xyz * 
					    ((normal_34.x * normal_34.x) - (normal_34.y * normal_34.y))
					  )));
					  res_37 = max (((1.055 * 
					    pow (max (res_37, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  ambient_35 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), res_37));
					  tmpvar_5 = ambient_35;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = ambient_35;
					  xlv_TEXCOORD6 = exp2(-((unity_FogParams.y * tmpvar_6.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_7 = (tmpvar_8.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_9;
					  tmpvar_9 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_12;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7 * tmpvar_1) * diff_15);
					  c_14.w = tmpvar_8.w;
					  c_13.w = c_14.w;
					  c_13.xyz = (c_14.xyz + (tmpvar_7 * xlv_TEXCOORD4));
					  highp float tmpvar_17;
					  tmpvar_17 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_13.xyz, vec3(tmpvar_17));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_8.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_8.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_8.z;
					  highp vec3 lightColor0_20;
					  lightColor0_20 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_21;
					  lightColor1_21 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_22;
					  lightColor2_22 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_23;
					  lightColor3_23 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_24;
					  lightAttenSq_24 = unity_4LightAtten0;
					  highp vec3 normal_25;
					  normal_25 = worldNormal_3;
					  highp vec3 col_26;
					  highp vec4 ndotl_27;
					  highp vec4 lengthSq_28;
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosX0 - tmpvar_8.x);
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosY0 - tmpvar_8.y);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosZ0 - tmpvar_8.z);
					  lengthSq_28 = (tmpvar_29 * tmpvar_29);
					  lengthSq_28 = (lengthSq_28 + (tmpvar_30 * tmpvar_30));
					  lengthSq_28 = (lengthSq_28 + (tmpvar_31 * tmpvar_31));
					  ndotl_27 = (tmpvar_29 * normal_25.x);
					  ndotl_27 = (ndotl_27 + (tmpvar_30 * normal_25.y));
					  ndotl_27 = (ndotl_27 + (tmpvar_31 * normal_25.z));
					  highp vec4 tmpvar_32;
					  tmpvar_32 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_27 * inversesqrt(lengthSq_28)));
					  ndotl_27 = tmpvar_32;
					  highp vec4 tmpvar_33;
					  tmpvar_33 = (tmpvar_32 * (1.0/((1.0 + 
					    (lengthSq_28 * lightAttenSq_24)
					  ))));
					  col_26 = (lightColor0_20 * tmpvar_33.x);
					  col_26 = (col_26 + (lightColor1_21 * tmpvar_33.y));
					  col_26 = (col_26 + (lightColor2_22 * tmpvar_33.z));
					  col_26 = (col_26 + (lightColor3_23 * tmpvar_33.w));
					  tmpvar_5 = col_26;
					  mediump vec3 normal_34;
					  normal_34 = worldNormal_3;
					  mediump vec3 ambient_35;
					  mediump vec4 tmpvar_36;
					  tmpvar_36.w = 1.0;
					  tmpvar_36.xyz = normal_34;
					  mediump vec3 res_37;
					  mediump vec3 x_38;
					  x_38.x = dot (unity_SHAr, tmpvar_36);
					  x_38.y = dot (unity_SHAg, tmpvar_36);
					  x_38.z = dot (unity_SHAb, tmpvar_36);
					  mediump vec3 x1_39;
					  mediump vec4 tmpvar_40;
					  tmpvar_40 = (normal_34.xyzz * normal_34.yzzx);
					  x1_39.x = dot (unity_SHBr, tmpvar_40);
					  x1_39.y = dot (unity_SHBg, tmpvar_40);
					  x1_39.z = dot (unity_SHBb, tmpvar_40);
					  res_37 = (x_38 + (x1_39 + (unity_SHC.xyz * 
					    ((normal_34.x * normal_34.x) - (normal_34.y * normal_34.y))
					  )));
					  res_37 = max (((1.055 * 
					    pow (max (res_37, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  ambient_35 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), res_37));
					  tmpvar_5 = ambient_35;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_17;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = ambient_35;
					  xlv_TEXCOORD6 = exp2(-((unity_FogParams.y * tmpvar_6.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_7 = (tmpvar_8.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_9;
					  tmpvar_9 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_12;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7 * tmpvar_1) * diff_15);
					  c_14.w = tmpvar_8.w;
					  c_13.w = c_14.w;
					  c_13.xyz = (c_14.xyz + (tmpvar_7 * xlv_TEXCOORD4));
					  highp float tmpvar_17;
					  tmpvar_17 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_13.xyz, vec3(tmpvar_17));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					mediump vec4 u_xlat16_2;
					vec4 u_xlat3;
					lowp vec3 u_xlat10_3;
					vec4 u_xlat4;
					mediump vec3 u_xlat16_5;
					mediump vec3 u_xlat16_6;
					vec3 u_xlat7;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD6 = exp2((-u_xlat0.x));
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat7.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat7.xyz;
					    u_xlat1.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat7.xyz = u_xlat7.xyz * u_xlat1.xxx;
					    u_xlat1.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat1.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat1.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat2.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat2.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat2.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat2.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat2.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = dot(u_xlat1.xyw, u_xlat1.xyw);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat1 = u_xlat1.xywz * u_xlat2.xxxx;
					    u_xlat10_3.xyz = u_xlat7.xyz * u_xlat1.zxy;
					    u_xlat10_3.xyz = u_xlat1.yzx * u_xlat7.yzx + (-u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xxx * u_xlat10_3.xyz;
					    vs_TEXCOORD1.y = u_xlat10_3.x;
					    vs_TEXCOORD1.x = u_xlat7.z;
					    vs_TEXCOORD1.z = u_xlat1.x;
					    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;
					    vs_TEXCOORD1.w = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat7.x;
					    vs_TEXCOORD3.x = u_xlat7.y;
					    vs_TEXCOORD2.y = u_xlat10_3.y;
					    vs_TEXCOORD3.y = u_xlat10_3.z;
					    vs_TEXCOORD2.z = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat1.z;
					    vs_TEXCOORD3.w = u_xlat2.z;
					    u_xlat0 = (-u_xlat2.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat0;
					    u_xlat0 = u_xlat0 * u_xlat0;
					    u_xlat4 = (-u_xlat2.xxxx) + unity_4LightPosX0;
					    u_xlat2 = (-u_xlat2.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;
					    u_xlat0 = u_xlat2 * u_xlat2 + u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat1.zzwz + u_xlat3;
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat3;
					    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat2;
					    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
					    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
					    u_xlat16_2 = u_xlat1.yzwx * u_xlat1.xywz;
					    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
					    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
					    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
					    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
					    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
					    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
					    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
					    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat1.xyz = log2(u_xlat16_5.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat1.xyz = exp2(u_xlat1.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat10_1.xyz * _LightColor0.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					mediump vec4 u_xlat16_2;
					vec4 u_xlat3;
					lowp vec3 u_xlat10_3;
					vec4 u_xlat4;
					mediump vec3 u_xlat16_5;
					mediump vec3 u_xlat16_6;
					vec3 u_xlat7;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD6 = exp2((-u_xlat0.x));
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat7.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat7.xyz;
					    u_xlat1.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat7.xyz = u_xlat7.xyz * u_xlat1.xxx;
					    u_xlat1.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat1.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat1.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat2.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat2.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat2.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat2.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat2.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = dot(u_xlat1.xyw, u_xlat1.xyw);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat1 = u_xlat1.xywz * u_xlat2.xxxx;
					    u_xlat10_3.xyz = u_xlat7.xyz * u_xlat1.zxy;
					    u_xlat10_3.xyz = u_xlat1.yzx * u_xlat7.yzx + (-u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xxx * u_xlat10_3.xyz;
					    vs_TEXCOORD1.y = u_xlat10_3.x;
					    vs_TEXCOORD1.x = u_xlat7.z;
					    vs_TEXCOORD1.z = u_xlat1.x;
					    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;
					    vs_TEXCOORD1.w = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat7.x;
					    vs_TEXCOORD3.x = u_xlat7.y;
					    vs_TEXCOORD2.y = u_xlat10_3.y;
					    vs_TEXCOORD3.y = u_xlat10_3.z;
					    vs_TEXCOORD2.z = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat1.z;
					    vs_TEXCOORD3.w = u_xlat2.z;
					    u_xlat0 = (-u_xlat2.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat0;
					    u_xlat0 = u_xlat0 * u_xlat0;
					    u_xlat4 = (-u_xlat2.xxxx) + unity_4LightPosX0;
					    u_xlat2 = (-u_xlat2.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;
					    u_xlat0 = u_xlat2 * u_xlat2 + u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat1.zzwz + u_xlat3;
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat3;
					    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat2;
					    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
					    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
					    u_xlat16_2 = u_xlat1.yzwx * u_xlat1.xywz;
					    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
					    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
					    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
					    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
					    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
					    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
					    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
					    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat1.xyz = log2(u_xlat16_5.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat1.xyz = exp2(u_xlat1.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat10_1.xyz * _LightColor0.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					mediump vec4 u_xlat16_2;
					vec4 u_xlat3;
					lowp vec3 u_xlat10_3;
					vec4 u_xlat4;
					mediump vec3 u_xlat16_5;
					mediump vec3 u_xlat16_6;
					vec3 u_xlat7;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD6 = exp2((-u_xlat0.x));
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat7.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat7.xyz;
					    u_xlat1.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat7.xyz = u_xlat7.xyz * u_xlat1.xxx;
					    u_xlat1.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat1.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat1.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat2.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat2.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat2.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat2.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat2.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = dot(u_xlat1.xyw, u_xlat1.xyw);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat1 = u_xlat1.xywz * u_xlat2.xxxx;
					    u_xlat10_3.xyz = u_xlat7.xyz * u_xlat1.zxy;
					    u_xlat10_3.xyz = u_xlat1.yzx * u_xlat7.yzx + (-u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xxx * u_xlat10_3.xyz;
					    vs_TEXCOORD1.y = u_xlat10_3.x;
					    vs_TEXCOORD1.x = u_xlat7.z;
					    vs_TEXCOORD1.z = u_xlat1.x;
					    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;
					    vs_TEXCOORD1.w = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat7.x;
					    vs_TEXCOORD3.x = u_xlat7.y;
					    vs_TEXCOORD2.y = u_xlat10_3.y;
					    vs_TEXCOORD3.y = u_xlat10_3.z;
					    vs_TEXCOORD2.z = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat1.z;
					    vs_TEXCOORD3.w = u_xlat2.z;
					    u_xlat0 = (-u_xlat2.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat0;
					    u_xlat0 = u_xlat0 * u_xlat0;
					    u_xlat4 = (-u_xlat2.xxxx) + unity_4LightPosX0;
					    u_xlat2 = (-u_xlat2.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;
					    u_xlat0 = u_xlat2 * u_xlat2 + u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat1.zzwz + u_xlat3;
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat3;
					    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat2;
					    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
					    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
					    u_xlat16_2 = u_xlat1.yzwx * u_xlat1.xywz;
					    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
					    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
					    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
					    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
					    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
					    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
					    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
					    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat1.xyz = log2(u_xlat16_5.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat1.xyz = exp2(u_xlat1.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat10_1.xyz * _LightColor0.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_8 = tmpvar_9.xyz;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].x;
					  v_10.y = unity_WorldToObject[1].x;
					  v_10.z = unity_WorldToObject[2].x;
					  v_10.w = unity_WorldToObject[3].x;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].y;
					  v_11.y = unity_WorldToObject[1].y;
					  v_11.z = unity_WorldToObject[2].y;
					  v_11.w = unity_WorldToObject[3].y;
					  highp vec4 v_12;
					  v_12.x = unity_WorldToObject[0].z;
					  v_12.y = unity_WorldToObject[1].z;
					  v_12.z = unity_WorldToObject[2].z;
					  v_12.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize(((
					    (v_10.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_12.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_13;
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_15;
					  tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_16;
					  lowp vec3 tmpvar_17;
					  tmpvar_17 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.x;
					  tmpvar_18.y = tmpvar_17.x;
					  tmpvar_18.z = worldNormal_3.x;
					  tmpvar_18.w = tmpvar_8.x;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.y;
					  tmpvar_19.y = tmpvar_17.y;
					  tmpvar_19.z = worldNormal_3.y;
					  tmpvar_19.w = tmpvar_8.y;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_2.z;
					  tmpvar_20.y = tmpvar_17.z;
					  tmpvar_20.z = worldNormal_3.z;
					  tmpvar_20.w = tmpvar_8.z;
					  highp vec3 lightColor0_21;
					  lightColor0_21 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_22;
					  lightColor1_22 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_23;
					  lightColor2_23 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_24;
					  lightColor3_24 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_25;
					  lightAttenSq_25 = unity_4LightAtten0;
					  highp vec3 normal_26;
					  normal_26 = worldNormal_3;
					  highp vec3 col_27;
					  highp vec4 ndotl_28;
					  highp vec4 lengthSq_29;
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosX0 - tmpvar_9.x);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosY0 - tmpvar_9.y);
					  highp vec4 tmpvar_32;
					  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_9.z);
					  lengthSq_29 = (tmpvar_30 * tmpvar_30);
					  lengthSq_29 = (lengthSq_29 + (tmpvar_31 * tmpvar_31));
					  lengthSq_29 = (lengthSq_29 + (tmpvar_32 * tmpvar_32));
					  ndotl_28 = (tmpvar_30 * normal_26.x);
					  ndotl_28 = (ndotl_28 + (tmpvar_31 * normal_26.y));
					  ndotl_28 = (ndotl_28 + (tmpvar_32 * normal_26.z));
					  highp vec4 tmpvar_33;
					  tmpvar_33 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_28 * inversesqrt(lengthSq_29)));
					  ndotl_28 = tmpvar_33;
					  highp vec4 tmpvar_34;
					  tmpvar_34 = (tmpvar_33 * (1.0/((1.0 + 
					    (lengthSq_29 * lightAttenSq_25)
					  ))));
					  col_27 = (lightColor0_21 * tmpvar_34.x);
					  col_27 = (col_27 + (lightColor1_22 * tmpvar_34.y));
					  col_27 = (col_27 + (lightColor2_23 * tmpvar_34.z));
					  col_27 = (col_27 + (lightColor3_24 * tmpvar_34.w));
					  tmpvar_5 = col_27;
					  mediump vec3 normal_35;
					  normal_35 = worldNormal_3;
					  mediump vec3 ambient_36;
					  mediump vec4 tmpvar_37;
					  tmpvar_37.w = 1.0;
					  tmpvar_37.xyz = normal_35;
					  mediump vec3 res_38;
					  mediump vec3 x_39;
					  x_39.x = dot (unity_SHAr, tmpvar_37);
					  x_39.y = dot (unity_SHAg, tmpvar_37);
					  x_39.z = dot (unity_SHAb, tmpvar_37);
					  mediump vec3 x1_40;
					  mediump vec4 tmpvar_41;
					  tmpvar_41 = (normal_35.xyzz * normal_35.yzzx);
					  x1_40.x = dot (unity_SHBr, tmpvar_41);
					  x1_40.y = dot (unity_SHBg, tmpvar_41);
					  x1_40.z = dot (unity_SHBb, tmpvar_41);
					  res_38 = (x_39 + (x1_40 + (unity_SHC.xyz * 
					    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
					  )));
					  res_38 = max (((1.055 * 
					    pow (max (res_38, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  ambient_36 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), res_38));
					  tmpvar_5 = ambient_36;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_18;
					  xlv_TEXCOORD2 = tmpvar_19;
					  xlv_TEXCOORD3 = tmpvar_20;
					  xlv_TEXCOORD4 = ambient_36;
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_9);
					  xlv_TEXCOORD6 = exp2(-((unity_FogParams.y * tmpvar_6.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_8 = (tmpvar_9.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_10;
					  tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_11;
					  highp float lightShadowDataX_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = _LightShadowData.x;
					  lightShadowDataX_12 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_12);
					  tmpvar_11 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_17;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_18;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_18) * diff_21);
					  c_20.w = tmpvar_9.w;
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_8 * xlv_TEXCOORD4));
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_19.xyz, vec3(tmpvar_23));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_8 = tmpvar_9.xyz;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].x;
					  v_10.y = unity_WorldToObject[1].x;
					  v_10.z = unity_WorldToObject[2].x;
					  v_10.w = unity_WorldToObject[3].x;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].y;
					  v_11.y = unity_WorldToObject[1].y;
					  v_11.z = unity_WorldToObject[2].y;
					  v_11.w = unity_WorldToObject[3].y;
					  highp vec4 v_12;
					  v_12.x = unity_WorldToObject[0].z;
					  v_12.y = unity_WorldToObject[1].z;
					  v_12.z = unity_WorldToObject[2].z;
					  v_12.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize(((
					    (v_10.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_12.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_13;
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_15;
					  tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_16;
					  lowp vec3 tmpvar_17;
					  tmpvar_17 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.x;
					  tmpvar_18.y = tmpvar_17.x;
					  tmpvar_18.z = worldNormal_3.x;
					  tmpvar_18.w = tmpvar_8.x;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.y;
					  tmpvar_19.y = tmpvar_17.y;
					  tmpvar_19.z = worldNormal_3.y;
					  tmpvar_19.w = tmpvar_8.y;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_2.z;
					  tmpvar_20.y = tmpvar_17.z;
					  tmpvar_20.z = worldNormal_3.z;
					  tmpvar_20.w = tmpvar_8.z;
					  highp vec3 lightColor0_21;
					  lightColor0_21 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_22;
					  lightColor1_22 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_23;
					  lightColor2_23 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_24;
					  lightColor3_24 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_25;
					  lightAttenSq_25 = unity_4LightAtten0;
					  highp vec3 normal_26;
					  normal_26 = worldNormal_3;
					  highp vec3 col_27;
					  highp vec4 ndotl_28;
					  highp vec4 lengthSq_29;
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosX0 - tmpvar_9.x);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosY0 - tmpvar_9.y);
					  highp vec4 tmpvar_32;
					  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_9.z);
					  lengthSq_29 = (tmpvar_30 * tmpvar_30);
					  lengthSq_29 = (lengthSq_29 + (tmpvar_31 * tmpvar_31));
					  lengthSq_29 = (lengthSq_29 + (tmpvar_32 * tmpvar_32));
					  ndotl_28 = (tmpvar_30 * normal_26.x);
					  ndotl_28 = (ndotl_28 + (tmpvar_31 * normal_26.y));
					  ndotl_28 = (ndotl_28 + (tmpvar_32 * normal_26.z));
					  highp vec4 tmpvar_33;
					  tmpvar_33 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_28 * inversesqrt(lengthSq_29)));
					  ndotl_28 = tmpvar_33;
					  highp vec4 tmpvar_34;
					  tmpvar_34 = (tmpvar_33 * (1.0/((1.0 + 
					    (lengthSq_29 * lightAttenSq_25)
					  ))));
					  col_27 = (lightColor0_21 * tmpvar_34.x);
					  col_27 = (col_27 + (lightColor1_22 * tmpvar_34.y));
					  col_27 = (col_27 + (lightColor2_23 * tmpvar_34.z));
					  col_27 = (col_27 + (lightColor3_24 * tmpvar_34.w));
					  tmpvar_5 = col_27;
					  mediump vec3 normal_35;
					  normal_35 = worldNormal_3;
					  mediump vec3 ambient_36;
					  mediump vec4 tmpvar_37;
					  tmpvar_37.w = 1.0;
					  tmpvar_37.xyz = normal_35;
					  mediump vec3 res_38;
					  mediump vec3 x_39;
					  x_39.x = dot (unity_SHAr, tmpvar_37);
					  x_39.y = dot (unity_SHAg, tmpvar_37);
					  x_39.z = dot (unity_SHAb, tmpvar_37);
					  mediump vec3 x1_40;
					  mediump vec4 tmpvar_41;
					  tmpvar_41 = (normal_35.xyzz * normal_35.yzzx);
					  x1_40.x = dot (unity_SHBr, tmpvar_41);
					  x1_40.y = dot (unity_SHBg, tmpvar_41);
					  x1_40.z = dot (unity_SHBb, tmpvar_41);
					  res_38 = (x_39 + (x1_40 + (unity_SHC.xyz * 
					    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
					  )));
					  res_38 = max (((1.055 * 
					    pow (max (res_38, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  ambient_36 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), res_38));
					  tmpvar_5 = ambient_36;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_18;
					  xlv_TEXCOORD2 = tmpvar_19;
					  xlv_TEXCOORD3 = tmpvar_20;
					  xlv_TEXCOORD4 = ambient_36;
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_9);
					  xlv_TEXCOORD6 = exp2(-((unity_FogParams.y * tmpvar_6.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_8 = (tmpvar_9.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_10;
					  tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_11;
					  highp float lightShadowDataX_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = _LightShadowData.x;
					  lightShadowDataX_12 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_12);
					  tmpvar_11 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_17;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_18;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_18) * diff_21);
					  c_20.w = tmpvar_9.w;
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_8 * xlv_TEXCOORD4));
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_19.xyz, vec3(tmpvar_23));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (glstate_matrix_mvp * tmpvar_7);
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_8 = tmpvar_9.xyz;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].x;
					  v_10.y = unity_WorldToObject[1].x;
					  v_10.z = unity_WorldToObject[2].x;
					  v_10.w = unity_WorldToObject[3].x;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].y;
					  v_11.y = unity_WorldToObject[1].y;
					  v_11.z = unity_WorldToObject[2].y;
					  v_11.w = unity_WorldToObject[3].y;
					  highp vec4 v_12;
					  v_12.x = unity_WorldToObject[0].z;
					  v_12.y = unity_WorldToObject[1].z;
					  v_12.z = unity_WorldToObject[2].z;
					  v_12.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize(((
					    (v_10.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_12.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_13;
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_15;
					  tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_16;
					  lowp vec3 tmpvar_17;
					  tmpvar_17 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.x;
					  tmpvar_18.y = tmpvar_17.x;
					  tmpvar_18.z = worldNormal_3.x;
					  tmpvar_18.w = tmpvar_8.x;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.y;
					  tmpvar_19.y = tmpvar_17.y;
					  tmpvar_19.z = worldNormal_3.y;
					  tmpvar_19.w = tmpvar_8.y;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_2.z;
					  tmpvar_20.y = tmpvar_17.z;
					  tmpvar_20.z = worldNormal_3.z;
					  tmpvar_20.w = tmpvar_8.z;
					  highp vec3 lightColor0_21;
					  lightColor0_21 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_22;
					  lightColor1_22 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_23;
					  lightColor2_23 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_24;
					  lightColor3_24 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_25;
					  lightAttenSq_25 = unity_4LightAtten0;
					  highp vec3 normal_26;
					  normal_26 = worldNormal_3;
					  highp vec3 col_27;
					  highp vec4 ndotl_28;
					  highp vec4 lengthSq_29;
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosX0 - tmpvar_9.x);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosY0 - tmpvar_9.y);
					  highp vec4 tmpvar_32;
					  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_9.z);
					  lengthSq_29 = (tmpvar_30 * tmpvar_30);
					  lengthSq_29 = (lengthSq_29 + (tmpvar_31 * tmpvar_31));
					  lengthSq_29 = (lengthSq_29 + (tmpvar_32 * tmpvar_32));
					  ndotl_28 = (tmpvar_30 * normal_26.x);
					  ndotl_28 = (ndotl_28 + (tmpvar_31 * normal_26.y));
					  ndotl_28 = (ndotl_28 + (tmpvar_32 * normal_26.z));
					  highp vec4 tmpvar_33;
					  tmpvar_33 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_28 * inversesqrt(lengthSq_29)));
					  ndotl_28 = tmpvar_33;
					  highp vec4 tmpvar_34;
					  tmpvar_34 = (tmpvar_33 * (1.0/((1.0 + 
					    (lengthSq_29 * lightAttenSq_25)
					  ))));
					  col_27 = (lightColor0_21 * tmpvar_34.x);
					  col_27 = (col_27 + (lightColor1_22 * tmpvar_34.y));
					  col_27 = (col_27 + (lightColor2_23 * tmpvar_34.z));
					  col_27 = (col_27 + (lightColor3_24 * tmpvar_34.w));
					  tmpvar_5 = col_27;
					  mediump vec3 normal_35;
					  normal_35 = worldNormal_3;
					  mediump vec3 ambient_36;
					  mediump vec4 tmpvar_37;
					  tmpvar_37.w = 1.0;
					  tmpvar_37.xyz = normal_35;
					  mediump vec3 res_38;
					  mediump vec3 x_39;
					  x_39.x = dot (unity_SHAr, tmpvar_37);
					  x_39.y = dot (unity_SHAg, tmpvar_37);
					  x_39.z = dot (unity_SHAb, tmpvar_37);
					  mediump vec3 x1_40;
					  mediump vec4 tmpvar_41;
					  tmpvar_41 = (normal_35.xyzz * normal_35.yzzx);
					  x1_40.x = dot (unity_SHBr, tmpvar_41);
					  x1_40.y = dot (unity_SHBg, tmpvar_41);
					  x1_40.z = dot (unity_SHBb, tmpvar_41);
					  res_38 = (x_39 + (x1_40 + (unity_SHC.xyz * 
					    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
					  )));
					  res_38 = max (((1.055 * 
					    pow (max (res_38, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  ambient_36 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), res_38));
					  tmpvar_5 = ambient_36;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_18;
					  xlv_TEXCOORD2 = tmpvar_19;
					  xlv_TEXCOORD3 = tmpvar_20;
					  xlv_TEXCOORD4 = ambient_36;
					  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_9);
					  xlv_TEXCOORD6 = exp2(-((unity_FogParams.y * tmpvar_6.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 _LightShadowData;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tmpvar_8 = (tmpvar_9.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_10;
					  tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  lowp float tmpvar_11;
					  highp float lightShadowDataX_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = _LightShadowData.x;
					  lightShadowDataX_12 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_12);
					  tmpvar_11 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_17;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_18;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_18) * diff_21);
					  c_20.w = tmpvar_9.w;
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_8 * xlv_TEXCOORD4));
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_19.xyz, vec3(tmpvar_23));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					mediump vec4 u_xlat16_2;
					vec4 u_xlat3;
					lowp vec3 u_xlat10_3;
					vec4 u_xlat4;
					mediump vec3 u_xlat16_5;
					mediump vec3 u_xlat16_6;
					vec3 u_xlat7;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD6 = exp2((-u_xlat0.x));
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat7.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat7.xyz;
					    u_xlat1.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat7.xyz = u_xlat7.xyz * u_xlat1.xxx;
					    u_xlat1.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat1.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat1.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat2.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat2.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat2.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat2.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat2.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = dot(u_xlat1.xyw, u_xlat1.xyw);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat1 = u_xlat1.xywz * u_xlat2.xxxx;
					    u_xlat10_3.xyz = u_xlat7.xyz * u_xlat1.zxy;
					    u_xlat10_3.xyz = u_xlat1.yzx * u_xlat7.yzx + (-u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xxx * u_xlat10_3.xyz;
					    vs_TEXCOORD1.y = u_xlat10_3.x;
					    vs_TEXCOORD1.x = u_xlat7.z;
					    vs_TEXCOORD1.z = u_xlat1.x;
					    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;
					    vs_TEXCOORD1.w = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat7.x;
					    vs_TEXCOORD3.x = u_xlat7.y;
					    vs_TEXCOORD2.y = u_xlat10_3.y;
					    vs_TEXCOORD3.y = u_xlat10_3.z;
					    vs_TEXCOORD2.z = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat1.z;
					    vs_TEXCOORD3.w = u_xlat2.z;
					    u_xlat0 = (-u_xlat2.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat0;
					    u_xlat0 = u_xlat0 * u_xlat0;
					    u_xlat4 = (-u_xlat2.xxxx) + unity_4LightPosX0;
					    u_xlat2 = (-u_xlat2.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;
					    u_xlat0 = u_xlat2 * u_xlat2 + u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat1.zzwz + u_xlat3;
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat3;
					    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat2;
					    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
					    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
					    u_xlat16_2 = u_xlat1.yzwx * u_xlat1.xywz;
					    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
					    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
					    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
					    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
					    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
					    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
					    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
					    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat1.xyz = log2(u_xlat16_5.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat1.xyz = exp2(u_xlat1.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    vec3 txVec606 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec606, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_7.xyz = u_xlat16_7.xxx * _LightColor0.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat10_1.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					mediump vec4 u_xlat16_2;
					vec4 u_xlat3;
					lowp vec3 u_xlat10_3;
					vec4 u_xlat4;
					mediump vec3 u_xlat16_5;
					mediump vec3 u_xlat16_6;
					vec3 u_xlat7;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD6 = exp2((-u_xlat0.x));
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat7.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat7.xyz;
					    u_xlat1.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat7.xyz = u_xlat7.xyz * u_xlat1.xxx;
					    u_xlat1.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat1.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat1.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat2.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat2.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat2.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat2.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat2.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = dot(u_xlat1.xyw, u_xlat1.xyw);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat1 = u_xlat1.xywz * u_xlat2.xxxx;
					    u_xlat10_3.xyz = u_xlat7.xyz * u_xlat1.zxy;
					    u_xlat10_3.xyz = u_xlat1.yzx * u_xlat7.yzx + (-u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xxx * u_xlat10_3.xyz;
					    vs_TEXCOORD1.y = u_xlat10_3.x;
					    vs_TEXCOORD1.x = u_xlat7.z;
					    vs_TEXCOORD1.z = u_xlat1.x;
					    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;
					    vs_TEXCOORD1.w = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat7.x;
					    vs_TEXCOORD3.x = u_xlat7.y;
					    vs_TEXCOORD2.y = u_xlat10_3.y;
					    vs_TEXCOORD3.y = u_xlat10_3.z;
					    vs_TEXCOORD2.z = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat1.z;
					    vs_TEXCOORD3.w = u_xlat2.z;
					    u_xlat0 = (-u_xlat2.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat0;
					    u_xlat0 = u_xlat0 * u_xlat0;
					    u_xlat4 = (-u_xlat2.xxxx) + unity_4LightPosX0;
					    u_xlat2 = (-u_xlat2.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;
					    u_xlat0 = u_xlat2 * u_xlat2 + u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat1.zzwz + u_xlat3;
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat3;
					    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat2;
					    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
					    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
					    u_xlat16_2 = u_xlat1.yzwx * u_xlat1.xywz;
					    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
					    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
					    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
					    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
					    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
					    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
					    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
					    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat1.xyz = log2(u_xlat16_5.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat1.xyz = exp2(u_xlat1.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    vec3 txVec602 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec602, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_7.xyz = u_xlat16_7.xxx * _LightColor0.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat10_1.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out mediump vec3 vs_TEXCOORD4;
					out highp float vs_TEXCOORD6;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					mediump vec4 u_xlat16_2;
					vec4 u_xlat3;
					lowp vec3 u_xlat10_3;
					vec4 u_xlat4;
					mediump vec3 u_xlat16_5;
					mediump vec3 u_xlat16_6;
					vec3 u_xlat7;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD6 = exp2((-u_xlat0.x));
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat7.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat7.xyz;
					    u_xlat1.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat7.xyz = u_xlat7.xyz * u_xlat1.xxx;
					    u_xlat1.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat1.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat1.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat2.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat2.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat2.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat2.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat2.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat1 = u_xlat1 + u_xlat2;
					    u_xlat2.x = dot(u_xlat1.xyw, u_xlat1.xyw);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat1 = u_xlat1.xywz * u_xlat2.xxxx;
					    u_xlat10_3.xyz = u_xlat7.xyz * u_xlat1.zxy;
					    u_xlat10_3.xyz = u_xlat1.yzx * u_xlat7.yzx + (-u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xxx * u_xlat10_3.xyz;
					    vs_TEXCOORD1.y = u_xlat10_3.x;
					    vs_TEXCOORD1.x = u_xlat7.z;
					    vs_TEXCOORD1.z = u_xlat1.x;
					    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;
					    u_xlat2.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;
					    vs_TEXCOORD1.w = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat7.x;
					    vs_TEXCOORD3.x = u_xlat7.y;
					    vs_TEXCOORD2.y = u_xlat10_3.y;
					    vs_TEXCOORD3.y = u_xlat10_3.z;
					    vs_TEXCOORD2.z = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat1.z;
					    vs_TEXCOORD3.w = u_xlat2.z;
					    u_xlat0 = (-u_xlat2.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat0;
					    u_xlat0 = u_xlat0 * u_xlat0;
					    u_xlat4 = (-u_xlat2.xxxx) + unity_4LightPosX0;
					    u_xlat2 = (-u_xlat2.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;
					    u_xlat0 = u_xlat2 * u_xlat2 + u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat1.zzwz + u_xlat3;
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat2 = u_xlat2 * u_xlat3;
					    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat2;
					    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
					    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
					    u_xlat16_2 = u_xlat1.yzwx * u_xlat1.xywz;
					    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
					    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
					    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
					    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
					    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
					    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
					    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
					    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat1.xyz = log2(u_xlat16_5.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat1.xyz = exp2(u_xlat1.xyz);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4unity_ObjectToWorld[1];
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = hlslcc_mtx4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4unity_WorldToShadow[1];
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = hlslcc_mtx4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = hlslcc_mtx4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	mediump vec4 _WorldSpaceLightPos0;
					uniform 	mediump vec4 _LightShadowData;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	lowp vec4 _LightColor0;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
					uniform lowp sampler2D _ShadowMapTexture;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD4;
					in highp float vs_TEXCOORD6;
					in highp vec4 vs_TEXCOORD5;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					mediump vec3 u_xlat16_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_7;
					float u_xlat15;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    u_xlat16_2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);
					    vec3 txVec640 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
					    u_xlat10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec640, 0.0);
					    u_xlat16_7.x = (-_LightShadowData.x) + 1.0;
					    u_xlat16_7.x = u_xlat10_0.x * u_xlat16_7.x + _LightShadowData.x;
					    u_xlat16_7.xyz = u_xlat16_7.xxx * _LightColor0.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * u_xlat10_3.xyz;
					    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat10_1.xyz;
					    u_xlat16_4.xyz = u_xlat10_1.xyz * vs_TEXCOORD4.xyz;
					    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;
					    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD6;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
}
Program "fp" {
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3"
}
}
 }
 Pass {
  Name "PREPASS"
  Tags { "LIGHTMODE"="PrePassBase" "RenderType"="Opaque" }
  GpuProgramID 115462
Program "vp" {
SubProgram "gles hw_tier01 " {
"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4.w = 1.0;
					  tmpvar_4.xyz = _glesVertex.xyz;
					  highp vec3 tmpvar_5;
					  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_6;
					  v_6.x = unity_WorldToObject[0].x;
					  v_6.y = unity_WorldToObject[1].x;
					  v_6.z = unity_WorldToObject[2].x;
					  v_6.w = unity_WorldToObject[3].x;
					  highp vec4 v_7;
					  v_7.x = unity_WorldToObject[0].y;
					  v_7.y = unity_WorldToObject[1].y;
					  v_7.z = unity_WorldToObject[2].y;
					  v_7.w = unity_WorldToObject[3].y;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].z;
					  v_8.y = unity_WorldToObject[1].z;
					  v_8.z = unity_WorldToObject[2].z;
					  v_8.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_7.xyz * _glesNormal.y)
					  ) + (v_8.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  tmpvar_14.w = tmpvar_5.x;
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  tmpvar_15.w = tmpvar_5.y;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  tmpvar_16.w = tmpvar_5.z;
					  gl_Position = (glstate_matrix_mvp * tmpvar_4);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_14;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _BumpMap;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  tmpvar_3 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
					  highp float tmpvar_4;
					  tmpvar_4 = dot (xlv_TEXCOORD1.xyz, tmpvar_3);
					  worldN_2.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = dot (xlv_TEXCOORD2.xyz, tmpvar_3);
					  worldN_2.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = dot (xlv_TEXCOORD3.xyz, tmpvar_3);
					  worldN_2.z = tmpvar_6;
					  res_1.xyz = ((worldN_2 * 0.5) + 0.5);
					  res_1.w = 0.0;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4.w = 1.0;
					  tmpvar_4.xyz = _glesVertex.xyz;
					  highp vec3 tmpvar_5;
					  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_6;
					  v_6.x = unity_WorldToObject[0].x;
					  v_6.y = unity_WorldToObject[1].x;
					  v_6.z = unity_WorldToObject[2].x;
					  v_6.w = unity_WorldToObject[3].x;
					  highp vec4 v_7;
					  v_7.x = unity_WorldToObject[0].y;
					  v_7.y = unity_WorldToObject[1].y;
					  v_7.z = unity_WorldToObject[2].y;
					  v_7.w = unity_WorldToObject[3].y;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].z;
					  v_8.y = unity_WorldToObject[1].z;
					  v_8.z = unity_WorldToObject[2].z;
					  v_8.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_7.xyz * _glesNormal.y)
					  ) + (v_8.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  tmpvar_14.w = tmpvar_5.x;
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  tmpvar_15.w = tmpvar_5.y;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  tmpvar_16.w = tmpvar_5.z;
					  gl_Position = (glstate_matrix_mvp * tmpvar_4);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_14;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _BumpMap;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  tmpvar_3 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
					  highp float tmpvar_4;
					  tmpvar_4 = dot (xlv_TEXCOORD1.xyz, tmpvar_3);
					  worldN_2.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = dot (xlv_TEXCOORD2.xyz, tmpvar_3);
					  worldN_2.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = dot (xlv_TEXCOORD3.xyz, tmpvar_3);
					  worldN_2.z = tmpvar_6;
					  res_1.xyz = ((worldN_2 * 0.5) + 0.5);
					  res_1.w = 0.0;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4.w = 1.0;
					  tmpvar_4.xyz = _glesVertex.xyz;
					  highp vec3 tmpvar_5;
					  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_6;
					  v_6.x = unity_WorldToObject[0].x;
					  v_6.y = unity_WorldToObject[1].x;
					  v_6.z = unity_WorldToObject[2].x;
					  v_6.w = unity_WorldToObject[3].x;
					  highp vec4 v_7;
					  v_7.x = unity_WorldToObject[0].y;
					  v_7.y = unity_WorldToObject[1].y;
					  v_7.z = unity_WorldToObject[2].y;
					  v_7.w = unity_WorldToObject[3].y;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].z;
					  v_8.y = unity_WorldToObject[1].z;
					  v_8.z = unity_WorldToObject[2].z;
					  v_8.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_7.xyz * _glesNormal.y)
					  ) + (v_8.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  tmpvar_14.w = tmpvar_5.x;
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  tmpvar_15.w = tmpvar_5.y;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  tmpvar_16.w = tmpvar_5.z;
					  gl_Position = (glstate_matrix_mvp * tmpvar_4);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_14;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _BumpMap;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  tmpvar_3 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
					  highp float tmpvar_4;
					  tmpvar_4 = dot (xlv_TEXCOORD1.xyz, tmpvar_3);
					  worldN_2.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = dot (xlv_TEXCOORD2.xyz, tmpvar_3);
					  worldN_2.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = dot (xlv_TEXCOORD3.xyz, tmpvar_3);
					  worldN_2.z = tmpvar_6;
					  res_1.xyz = ((worldN_2 * 0.5) + 0.5);
					  res_1.w = 0.0;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec2 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec3 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _BumpMap;
					in highp vec2 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    SV_Target0.xyz = u_xlat0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
					    SV_Target0.w = 0.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec2 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec3 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _BumpMap;
					in highp vec2 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    SV_Target0.xyz = u_xlat0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
					    SV_Target0.w = 0.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec2 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec3 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _BumpMap;
					in highp vec2 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					void main()
					{
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_1.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_1.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_1.xyz);
					    SV_Target0.xyz = u_xlat0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
					    SV_Target0.w = 0.0;
					    return;
					}
					#endif"
}
}
Program "fp" {
SubProgram "gles hw_tier01 " {
"!!GLES"
}
SubProgram "gles hw_tier02 " {
"!!GLES"
}
SubProgram "gles hw_tier03 " {
"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
"!!GLES3"
}
}
 }
 Pass {
  Name "PREPASS"
  Tags { "LIGHTMODE"="PrePassFinal" "RenderType"="Opaque" }
  ZWrite Off
  GpuProgramID 132704
Program "vp" {
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (glstate_matrix_mvp * tmpvar_5);
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  mediump vec4 normal_13;
					  normal_13 = tmpvar_12;
					  mediump vec3 res_14;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, normal_13);
					  x_15.y = dot (unity_SHAg, normal_13);
					  x_15.z = dot (unity_SHAb, normal_13);
					  mediump vec3 x1_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17 = (normal_13.xyzz * normal_13.yzzx);
					  x1_16.x = dot (unity_SHBr, tmpvar_17);
					  x1_16.y = dot (unity_SHBg, tmpvar_17);
					  x1_16.z = dot (unity_SHBb, tmpvar_17);
					  res_14 = (x_15 + (x1_16 + (unity_SHC.xyz * 
					    ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y))
					  )));
					  res_14 = max (((1.055 * 
					    pow (max (res_14, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_14;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_5;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_6;
					  c_6.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_3.xyz);
					  c_6.w = tmpvar_4.w;
					  c_2.xyz = c_6.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (glstate_matrix_mvp * tmpvar_5);
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  mediump vec4 normal_13;
					  normal_13 = tmpvar_12;
					  mediump vec3 res_14;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, normal_13);
					  x_15.y = dot (unity_SHAg, normal_13);
					  x_15.z = dot (unity_SHAb, normal_13);
					  mediump vec3 x1_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17 = (normal_13.xyzz * normal_13.yzzx);
					  x1_16.x = dot (unity_SHBr, tmpvar_17);
					  x1_16.y = dot (unity_SHBg, tmpvar_17);
					  x1_16.z = dot (unity_SHBb, tmpvar_17);
					  res_14 = (x_15 + (x1_16 + (unity_SHC.xyz * 
					    ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y))
					  )));
					  res_14 = max (((1.055 * 
					    pow (max (res_14, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_14;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_5;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_6;
					  c_6.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_3.xyz);
					  c_6.w = tmpvar_4.w;
					  c_2.xyz = c_6.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (glstate_matrix_mvp * tmpvar_5);
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  mediump vec4 normal_13;
					  normal_13 = tmpvar_12;
					  mediump vec3 res_14;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, normal_13);
					  x_15.y = dot (unity_SHAg, normal_13);
					  x_15.z = dot (unity_SHAb, normal_13);
					  mediump vec3 x1_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17 = (normal_13.xyzz * normal_13.yzzx);
					  x1_16.x = dot (unity_SHBr, tmpvar_17);
					  x1_16.y = dot (unity_SHBg, tmpvar_17);
					  x1_16.z = dot (unity_SHBb, tmpvar_17);
					  res_14 = (x_15 + (x1_16 + (unity_SHC.xyz * 
					    ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y))
					  )));
					  res_14 = max (((1.055 * 
					    pow (max (res_14, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_14;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_5;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_6;
					  c_6.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_3.xyz);
					  c_6.w = tmpvar_4.w;
					  c_2.xyz = c_6.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
					    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_2.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD2;
					in highp vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					lowp vec3 u_xlat10_4;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
					    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
					    u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    u_xlat16_1.xyz = u_xlat0.xyz * u_xlat10_4.xyz;
					    SV_Target0.xyz = u_xlat16_1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
					    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_2.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD2;
					in highp vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					lowp vec3 u_xlat10_4;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
					    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
					    u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    u_xlat16_1.xyz = u_xlat0.xyz * u_xlat10_4.xyz;
					    SV_Target0.xyz = u_xlat16_1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
					    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_2.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD2;
					in highp vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					lowp vec3 u_xlat10_4;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
					    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
					    u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    u_xlat16_1.xyz = u_xlat0.xyz * u_xlat10_4.xyz;
					    SV_Target0.xyz = u_xlat16_1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  highp vec4 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = tmpvar_1.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (tmpvar_5 * 0.5);
					  highp vec2 tmpvar_9;
					  tmpvar_9.x = tmpvar_8.x;
					  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
					  o_7.xy = (tmpvar_9 + tmpvar_8.w);
					  o_7.zw = tmpvar_5.zw;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_4.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_1.xyz;
					  tmpvar_4.w = (-((glstate_matrix_modelview0 * tmpvar_11).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = tmpvar_10.xyz;
					  xlv_TEXCOORD2 = o_7;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = tmpvar_4;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  lowp vec3 lm_3;
					  mediump vec4 light_4;
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_4 = tmpvar_6;
					  light_4 = -(log2(max (light_4, vec4(0.001, 0.001, 0.001, 0.001))));
					  lowp vec4 tmpvar_7;
					  tmpvar_7 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = (2.0 * tmpvar_7.xyz);
					  lm_3 = tmpvar_8;
					  light_4.xyz = (light_4.xyz + lm_3);
					  lowp vec4 c_9;
					  c_9.xyz = ((tmpvar_5.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_4.xyz);
					  c_9.w = tmpvar_5.w;
					  c_2.xyz = c_9.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  highp vec4 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = tmpvar_1.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (tmpvar_5 * 0.5);
					  highp vec2 tmpvar_9;
					  tmpvar_9.x = tmpvar_8.x;
					  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
					  o_7.xy = (tmpvar_9 + tmpvar_8.w);
					  o_7.zw = tmpvar_5.zw;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_4.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_1.xyz;
					  tmpvar_4.w = (-((glstate_matrix_modelview0 * tmpvar_11).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = tmpvar_10.xyz;
					  xlv_TEXCOORD2 = o_7;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = tmpvar_4;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  lowp vec3 lm_3;
					  mediump vec4 light_4;
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_4 = tmpvar_6;
					  light_4 = -(log2(max (light_4, vec4(0.001, 0.001, 0.001, 0.001))));
					  lowp vec4 tmpvar_7;
					  tmpvar_7 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = (2.0 * tmpvar_7.xyz);
					  lm_3 = tmpvar_8;
					  light_4.xyz = (light_4.xyz + lm_3);
					  lowp vec4 c_9;
					  c_9.xyz = ((tmpvar_5.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_4.xyz);
					  c_9.w = tmpvar_5.w;
					  c_2.xyz = c_9.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  highp vec4 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = tmpvar_1.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (tmpvar_5 * 0.5);
					  highp vec2 tmpvar_9;
					  tmpvar_9.x = tmpvar_8.x;
					  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
					  o_7.xy = (tmpvar_9 + tmpvar_8.w);
					  o_7.zw = tmpvar_5.zw;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_4.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_1.xyz;
					  tmpvar_4.w = (-((glstate_matrix_modelview0 * tmpvar_11).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = tmpvar_10.xyz;
					  xlv_TEXCOORD2 = o_7;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = tmpvar_4;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  lowp vec3 lm_3;
					  mediump vec4 light_4;
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_4 = tmpvar_6;
					  light_4 = -(log2(max (light_4, vec4(0.001, 0.001, 0.001, 0.001))));
					  lowp vec4 tmpvar_7;
					  tmpvar_7 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = (2.0 * tmpvar_7.xyz);
					  lm_3 = tmpvar_8;
					  light_4.xyz = (light_4.xyz + lm_3);
					  lowp vec4 c_9;
					  c_9.xyz = ((tmpvar_5.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_4.xyz);
					  c_9.w = tmpvar_5.w;
					  c_2.xyz = c_9.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD4.xyz = u_xlat1.xyz * unity_ShadowFadeCenterAndType.www;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat2 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD4.w = u_xlat2 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec2 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
					    u_xlat16_1.xyz = vec3(2.0, 2.0, 2.0) * u_xlat10_0.xyz + (-u_xlat16_1.xyz);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
					    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat10_3.xyz;
					    SV_Target0.xyz = u_xlat16_1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD4.xyz = u_xlat1.xyz * unity_ShadowFadeCenterAndType.www;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat2 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD4.w = u_xlat2 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec2 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
					    u_xlat16_1.xyz = vec3(2.0, 2.0, 2.0) * u_xlat10_0.xyz + (-u_xlat16_1.xyz);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
					    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat10_3.xyz;
					    SV_Target0.xyz = u_xlat16_1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD4.xyz = u_xlat1.xyz * unity_ShadowFadeCenterAndType.www;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat2 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD4.w = u_xlat2 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec2 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
					    u_xlat16_1.xyz = vec3(2.0, 2.0, 2.0) * u_xlat10_0.xyz + (-u_xlat16_1.xyz);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
					    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat10_3.xyz;
					    SV_Target0.xyz = u_xlat16_1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (glstate_matrix_mvp * tmpvar_5);
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  mediump vec4 normal_13;
					  normal_13 = tmpvar_12;
					  mediump vec3 res_14;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, normal_13);
					  x_15.y = dot (unity_SHAg, normal_13);
					  x_15.z = dot (unity_SHAb, normal_13);
					  mediump vec3 x1_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17 = (normal_13.xyzz * normal_13.yzzx);
					  x1_16.x = dot (unity_SHBr, tmpvar_17);
					  x1_16.y = dot (unity_SHBg, tmpvar_17);
					  x1_16.z = dot (unity_SHBb, tmpvar_17);
					  res_14 = (x_15 + (x1_16 + (unity_SHC.xyz * 
					    ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y))
					  )));
					  res_14 = max (((1.055 * 
					    pow (max (res_14, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_14;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_5;
					  mediump vec4 tmpvar_6;
					  tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_6.w;
					  light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_7;
					  c_7.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_3.xyz);
					  c_7.w = tmpvar_4.w;
					  c_2.xyz = c_7.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (glstate_matrix_mvp * tmpvar_5);
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  mediump vec4 normal_13;
					  normal_13 = tmpvar_12;
					  mediump vec3 res_14;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, normal_13);
					  x_15.y = dot (unity_SHAg, normal_13);
					  x_15.z = dot (unity_SHAb, normal_13);
					  mediump vec3 x1_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17 = (normal_13.xyzz * normal_13.yzzx);
					  x1_16.x = dot (unity_SHBr, tmpvar_17);
					  x1_16.y = dot (unity_SHBg, tmpvar_17);
					  x1_16.z = dot (unity_SHBb, tmpvar_17);
					  res_14 = (x_15 + (x1_16 + (unity_SHC.xyz * 
					    ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y))
					  )));
					  res_14 = max (((1.055 * 
					    pow (max (res_14, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_14;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_5;
					  mediump vec4 tmpvar_6;
					  tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_6.w;
					  light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_7;
					  c_7.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_3.xyz);
					  c_7.w = tmpvar_4.w;
					  c_2.xyz = c_7.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (glstate_matrix_mvp * tmpvar_5);
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  mediump vec4 normal_13;
					  normal_13 = tmpvar_12;
					  mediump vec3 res_14;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, normal_13);
					  x_15.y = dot (unity_SHAg, normal_13);
					  x_15.z = dot (unity_SHAb, normal_13);
					  mediump vec3 x1_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17 = (normal_13.xyzz * normal_13.yzzx);
					  x1_16.x = dot (unity_SHBr, tmpvar_17);
					  x1_16.y = dot (unity_SHBg, tmpvar_17);
					  x1_16.z = dot (unity_SHBb, tmpvar_17);
					  res_14 = (x_15 + (x1_16 + (unity_SHC.xyz * 
					    ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y))
					  )));
					  res_14 = max (((1.055 * 
					    pow (max (res_14, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_14;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_5;
					  mediump vec4 tmpvar_6;
					  tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_6.w;
					  light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_7;
					  c_7.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_3.xyz);
					  c_7.w = tmpvar_4.w;
					  c_2.xyz = c_7.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
					    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_2.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD2;
					in highp vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					lowp vec3 u_xlat10_4;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat0.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
					    u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    u_xlat16_1.xyz = u_xlat0.xyz * u_xlat10_4.xyz;
					    SV_Target0.xyz = u_xlat16_1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
					    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_2.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD2;
					in highp vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					lowp vec3 u_xlat10_4;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat0.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
					    u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    u_xlat16_1.xyz = u_xlat0.xyz * u_xlat10_4.xyz;
					    SV_Target0.xyz = u_xlat16_1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
					    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_2.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD2;
					in highp vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					lowp vec3 u_xlat10_4;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat0.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
					    u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    u_xlat16_1.xyz = u_xlat0.xyz * u_xlat10_4.xyz;
					    SV_Target0.xyz = u_xlat16_1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  highp vec4 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = tmpvar_1.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (tmpvar_5 * 0.5);
					  highp vec2 tmpvar_9;
					  tmpvar_9.x = tmpvar_8.x;
					  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
					  o_7.xy = (tmpvar_9 + tmpvar_8.w);
					  o_7.zw = tmpvar_5.zw;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_4.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_1.xyz;
					  tmpvar_4.w = (-((glstate_matrix_modelview0 * tmpvar_11).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = tmpvar_10.xyz;
					  xlv_TEXCOORD2 = o_7;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = tmpvar_4;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  lowp vec3 lm_3;
					  mediump vec4 light_4;
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_4 = tmpvar_6;
					  mediump vec4 tmpvar_7;
					  tmpvar_7 = max (light_4, vec4(0.001, 0.001, 0.001, 0.001));
					  light_4.w = tmpvar_7.w;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = (2.0 * tmpvar_8.xyz);
					  lm_3 = tmpvar_9;
					  light_4.xyz = (tmpvar_7.xyz + lm_3);
					  lowp vec4 c_10;
					  c_10.xyz = ((tmpvar_5.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_4.xyz);
					  c_10.w = tmpvar_5.w;
					  c_2.xyz = c_10.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  highp vec4 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = tmpvar_1.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (tmpvar_5 * 0.5);
					  highp vec2 tmpvar_9;
					  tmpvar_9.x = tmpvar_8.x;
					  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
					  o_7.xy = (tmpvar_9 + tmpvar_8.w);
					  o_7.zw = tmpvar_5.zw;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_4.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_1.xyz;
					  tmpvar_4.w = (-((glstate_matrix_modelview0 * tmpvar_11).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = tmpvar_10.xyz;
					  xlv_TEXCOORD2 = o_7;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = tmpvar_4;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  lowp vec3 lm_3;
					  mediump vec4 light_4;
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_4 = tmpvar_6;
					  mediump vec4 tmpvar_7;
					  tmpvar_7 = max (light_4, vec4(0.001, 0.001, 0.001, 0.001));
					  light_4.w = tmpvar_7.w;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = (2.0 * tmpvar_8.xyz);
					  lm_3 = tmpvar_9;
					  light_4.xyz = (tmpvar_7.xyz + lm_3);
					  lowp vec4 c_10;
					  c_10.xyz = ((tmpvar_5.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_4.xyz);
					  c_10.w = tmpvar_5.w;
					  c_2.xyz = c_10.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  highp vec4 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = tmpvar_1.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (tmpvar_5 * 0.5);
					  highp vec2 tmpvar_9;
					  tmpvar_9.x = tmpvar_8.x;
					  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
					  o_7.xy = (tmpvar_9 + tmpvar_8.w);
					  o_7.zw = tmpvar_5.zw;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_4.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_1.xyz;
					  tmpvar_4.w = (-((glstate_matrix_modelview0 * tmpvar_11).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = tmpvar_10.xyz;
					  xlv_TEXCOORD2 = o_7;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = tmpvar_4;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  lowp vec3 lm_3;
					  mediump vec4 light_4;
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_4 = tmpvar_6;
					  mediump vec4 tmpvar_7;
					  tmpvar_7 = max (light_4, vec4(0.001, 0.001, 0.001, 0.001));
					  light_4.w = tmpvar_7.w;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = (2.0 * tmpvar_8.xyz);
					  lm_3 = tmpvar_9;
					  light_4.xyz = (tmpvar_7.xyz + lm_3);
					  lowp vec4 c_10;
					  c_10.xyz = ((tmpvar_5.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_4.xyz);
					  c_10.w = tmpvar_5.w;
					  c_2.xyz = c_10.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD4.xyz = u_xlat1.xyz * unity_ShadowFadeCenterAndType.www;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat2 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD4.w = u_xlat2 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec2 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
					    u_xlat16_1.xyz = vec3(2.0, 2.0, 2.0) * u_xlat10_0.xyz + u_xlat16_1.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
					    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat10_3.xyz;
					    SV_Target0.xyz = u_xlat16_1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD4.xyz = u_xlat1.xyz * unity_ShadowFadeCenterAndType.www;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat2 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD4.w = u_xlat2 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec2 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
					    u_xlat16_1.xyz = vec3(2.0, 2.0, 2.0) * u_xlat10_0.xyz + u_xlat16_1.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
					    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat10_3.xyz;
					    SV_Target0.xyz = u_xlat16_1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD4.xyz = u_xlat1.xyz * unity_ShadowFadeCenterAndType.www;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat2 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD4.w = u_xlat2 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec2 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
					    u_xlat16_1.xyz = vec3(2.0, 2.0, 2.0) * u_xlat10_0.xyz + u_xlat16_1.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
					    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat10_3.xyz;
					    SV_Target0.xyz = u_xlat16_1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (glstate_matrix_mvp * tmpvar_5);
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  mediump vec4 normal_13;
					  normal_13 = tmpvar_12;
					  mediump vec3 res_14;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, normal_13);
					  x_15.y = dot (unity_SHAg, normal_13);
					  x_15.z = dot (unity_SHAb, normal_13);
					  mediump vec3 x1_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17 = (normal_13.xyzz * normal_13.yzzx);
					  x1_16.x = dot (unity_SHBr, tmpvar_17);
					  x1_16.y = dot (unity_SHBg, tmpvar_17);
					  x1_16.z = dot (unity_SHBb, tmpvar_17);
					  res_14 = (x_15 + (x1_16 + (unity_SHC.xyz * 
					    ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y))
					  )));
					  res_14 = max (((1.055 * 
					    pow (max (res_14, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_14;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_5;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_6;
					  c_6.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_3.xyz);
					  c_6.w = tmpvar_4.w;
					  c_2 = c_6;
					  highp float tmpvar_7;
					  tmpvar_7 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_7));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (glstate_matrix_mvp * tmpvar_5);
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  mediump vec4 normal_13;
					  normal_13 = tmpvar_12;
					  mediump vec3 res_14;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, normal_13);
					  x_15.y = dot (unity_SHAg, normal_13);
					  x_15.z = dot (unity_SHAb, normal_13);
					  mediump vec3 x1_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17 = (normal_13.xyzz * normal_13.yzzx);
					  x1_16.x = dot (unity_SHBr, tmpvar_17);
					  x1_16.y = dot (unity_SHBg, tmpvar_17);
					  x1_16.z = dot (unity_SHBb, tmpvar_17);
					  res_14 = (x_15 + (x1_16 + (unity_SHC.xyz * 
					    ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y))
					  )));
					  res_14 = max (((1.055 * 
					    pow (max (res_14, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_14;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_5;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_6;
					  c_6.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_3.xyz);
					  c_6.w = tmpvar_4.w;
					  c_2 = c_6;
					  highp float tmpvar_7;
					  tmpvar_7 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_7));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (glstate_matrix_mvp * tmpvar_5);
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  mediump vec4 normal_13;
					  normal_13 = tmpvar_12;
					  mediump vec3 res_14;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, normal_13);
					  x_15.y = dot (unity_SHAg, normal_13);
					  x_15.z = dot (unity_SHAb, normal_13);
					  mediump vec3 x1_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17 = (normal_13.xyzz * normal_13.yzzx);
					  x1_16.x = dot (unity_SHBr, tmpvar_17);
					  x1_16.y = dot (unity_SHBg, tmpvar_17);
					  x1_16.z = dot (unity_SHBb, tmpvar_17);
					  res_14 = (x_15 + (x1_16 + (unity_SHC.xyz * 
					    ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y))
					  )));
					  res_14 = max (((1.055 * 
					    pow (max (res_14, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_14;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_5;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_6;
					  c_6.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_3.xyz);
					  c_6.w = tmpvar_4.w;
					  c_2 = c_6;
					  highp float tmpvar_7;
					  tmpvar_7 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_7));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
					    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_2.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					lowp vec3 u_xlat10_4;
					float u_xlat15;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
					    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
					    u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    u_xlat0.xyz = u_xlat10_4.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
					    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_2.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					lowp vec3 u_xlat10_4;
					float u_xlat15;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
					    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
					    u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    u_xlat0.xyz = u_xlat10_4.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
					    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_2.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					lowp vec3 u_xlat10_4;
					float u_xlat15;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
					    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
					    u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    u_xlat0.xyz = u_xlat10_4.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  highp vec4 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = tmpvar_1.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (tmpvar_5 * 0.5);
					  highp vec2 tmpvar_9;
					  tmpvar_9.x = tmpvar_8.x;
					  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
					  o_7.xy = (tmpvar_9 + tmpvar_8.w);
					  o_7.zw = tmpvar_5.zw;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_4.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_1.xyz;
					  tmpvar_4.w = (-((glstate_matrix_modelview0 * tmpvar_11).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = tmpvar_10.xyz;
					  xlv_TEXCOORD2 = o_7;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  lowp vec3 lm_3;
					  mediump vec4 light_4;
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_4 = tmpvar_6;
					  light_4 = -(log2(max (light_4, vec4(0.001, 0.001, 0.001, 0.001))));
					  lowp vec4 tmpvar_7;
					  tmpvar_7 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = (2.0 * tmpvar_7.xyz);
					  lm_3 = tmpvar_8;
					  light_4.xyz = (light_4.xyz + lm_3);
					  lowp vec4 c_9;
					  c_9.xyz = ((tmpvar_5.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_4.xyz);
					  c_9.w = tmpvar_5.w;
					  c_2 = c_9;
					  highp float tmpvar_10;
					  tmpvar_10 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  highp vec4 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = tmpvar_1.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (tmpvar_5 * 0.5);
					  highp vec2 tmpvar_9;
					  tmpvar_9.x = tmpvar_8.x;
					  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
					  o_7.xy = (tmpvar_9 + tmpvar_8.w);
					  o_7.zw = tmpvar_5.zw;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_4.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_1.xyz;
					  tmpvar_4.w = (-((glstate_matrix_modelview0 * tmpvar_11).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = tmpvar_10.xyz;
					  xlv_TEXCOORD2 = o_7;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  lowp vec3 lm_3;
					  mediump vec4 light_4;
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_4 = tmpvar_6;
					  light_4 = -(log2(max (light_4, vec4(0.001, 0.001, 0.001, 0.001))));
					  lowp vec4 tmpvar_7;
					  tmpvar_7 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = (2.0 * tmpvar_7.xyz);
					  lm_3 = tmpvar_8;
					  light_4.xyz = (light_4.xyz + lm_3);
					  lowp vec4 c_9;
					  c_9.xyz = ((tmpvar_5.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_4.xyz);
					  c_9.w = tmpvar_5.w;
					  c_2 = c_9;
					  highp float tmpvar_10;
					  tmpvar_10 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  highp vec4 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = tmpvar_1.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (tmpvar_5 * 0.5);
					  highp vec2 tmpvar_9;
					  tmpvar_9.x = tmpvar_8.x;
					  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
					  o_7.xy = (tmpvar_9 + tmpvar_8.w);
					  o_7.zw = tmpvar_5.zw;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_4.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_1.xyz;
					  tmpvar_4.w = (-((glstate_matrix_modelview0 * tmpvar_11).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = tmpvar_10.xyz;
					  xlv_TEXCOORD2 = o_7;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  lowp vec3 lm_3;
					  mediump vec4 light_4;
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_4 = tmpvar_6;
					  light_4 = -(log2(max (light_4, vec4(0.001, 0.001, 0.001, 0.001))));
					  lowp vec4 tmpvar_7;
					  tmpvar_7 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = (2.0 * tmpvar_7.xyz);
					  lm_3 = tmpvar_8;
					  light_4.xyz = (light_4.xyz + lm_3);
					  lowp vec4 c_9;
					  c_9.xyz = ((tmpvar_5.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_4.xyz);
					  c_9.w = tmpvar_5.w;
					  c_2 = c_9;
					  highp float tmpvar_10;
					  tmpvar_10 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD4.xyz = u_xlat1.xyz * unity_ShadowFadeCenterAndType.www;
					    vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat2 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD4.w = u_xlat2 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
					    u_xlat16_1.xyz = vec3(2.0, 2.0, 2.0) * u_xlat10_0.xyz + (-u_xlat16_1.xyz);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
					    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
					    u_xlat12 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
					#else
					    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD4.xyz = u_xlat1.xyz * unity_ShadowFadeCenterAndType.www;
					    vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat2 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD4.w = u_xlat2 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
					    u_xlat16_1.xyz = vec3(2.0, 2.0, 2.0) * u_xlat10_0.xyz + (-u_xlat16_1.xyz);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
					    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
					    u_xlat12 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
					#else
					    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD4.xyz = u_xlat1.xyz * unity_ShadowFadeCenterAndType.www;
					    vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat2 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD4.w = u_xlat2 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
					    u_xlat16_1.xyz = vec3(2.0, 2.0, 2.0) * u_xlat10_0.xyz + (-u_xlat16_1.xyz);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
					    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
					    u_xlat12 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
					#else
					    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (glstate_matrix_mvp * tmpvar_5);
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  mediump vec4 normal_13;
					  normal_13 = tmpvar_12;
					  mediump vec3 res_14;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, normal_13);
					  x_15.y = dot (unity_SHAg, normal_13);
					  x_15.z = dot (unity_SHAb, normal_13);
					  mediump vec3 x1_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17 = (normal_13.xyzz * normal_13.yzzx);
					  x1_16.x = dot (unity_SHBr, tmpvar_17);
					  x1_16.y = dot (unity_SHBg, tmpvar_17);
					  x1_16.z = dot (unity_SHBb, tmpvar_17);
					  res_14 = (x_15 + (x1_16 + (unity_SHC.xyz * 
					    ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y))
					  )));
					  res_14 = max (((1.055 * 
					    pow (max (res_14, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_14;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_5;
					  mediump vec4 tmpvar_6;
					  tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_6.w;
					  light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_7;
					  c_7.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_3.xyz);
					  c_7.w = tmpvar_4.w;
					  c_2 = c_7;
					  highp float tmpvar_8;
					  tmpvar_8 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_8));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (glstate_matrix_mvp * tmpvar_5);
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  mediump vec4 normal_13;
					  normal_13 = tmpvar_12;
					  mediump vec3 res_14;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, normal_13);
					  x_15.y = dot (unity_SHAg, normal_13);
					  x_15.z = dot (unity_SHAb, normal_13);
					  mediump vec3 x1_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17 = (normal_13.xyzz * normal_13.yzzx);
					  x1_16.x = dot (unity_SHBr, tmpvar_17);
					  x1_16.y = dot (unity_SHBg, tmpvar_17);
					  x1_16.z = dot (unity_SHBb, tmpvar_17);
					  res_14 = (x_15 + (x1_16 + (unity_SHC.xyz * 
					    ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y))
					  )));
					  res_14 = max (((1.055 * 
					    pow (max (res_14, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_14;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_5;
					  mediump vec4 tmpvar_6;
					  tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_6.w;
					  light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_7;
					  c_7.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_3.xyz);
					  c_7.w = tmpvar_4.w;
					  c_2 = c_7;
					  highp float tmpvar_8;
					  tmpvar_8 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_8));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (glstate_matrix_mvp * tmpvar_5);
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  mediump vec4 normal_13;
					  normal_13 = tmpvar_12;
					  mediump vec3 res_14;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, normal_13);
					  x_15.y = dot (unity_SHAg, normal_13);
					  x_15.z = dot (unity_SHAb, normal_13);
					  mediump vec3 x1_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17 = (normal_13.xyzz * normal_13.yzzx);
					  x1_16.x = dot (unity_SHBr, tmpvar_17);
					  x1_16.y = dot (unity_SHBg, tmpvar_17);
					  x1_16.z = dot (unity_SHBb, tmpvar_17);
					  res_14 = (x_15 + (x1_16 + (unity_SHC.xyz * 
					    ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y))
					  )));
					  res_14 = max (((1.055 * 
					    pow (max (res_14, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_14;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_5;
					  mediump vec4 tmpvar_6;
					  tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_6.w;
					  light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_7;
					  c_7.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_3.xyz);
					  c_7.w = tmpvar_4.w;
					  c_2 = c_7;
					  highp float tmpvar_8;
					  tmpvar_8 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_8));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
					    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_2.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					lowp vec3 u_xlat10_4;
					float u_xlat15;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat0.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
					    u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    u_xlat0.xyz = u_xlat10_4.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
					    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_2.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					lowp vec3 u_xlat10_4;
					float u_xlat15;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat0.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
					    u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    u_xlat0.xyz = u_xlat10_4.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
					    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_2.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					lowp vec3 u_xlat10_4;
					float u_xlat15;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat0.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
					    u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    u_xlat0.xyz = u_xlat10_4.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  highp vec4 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = tmpvar_1.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (tmpvar_5 * 0.5);
					  highp vec2 tmpvar_9;
					  tmpvar_9.x = tmpvar_8.x;
					  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
					  o_7.xy = (tmpvar_9 + tmpvar_8.w);
					  o_7.zw = tmpvar_5.zw;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_4.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_1.xyz;
					  tmpvar_4.w = (-((glstate_matrix_modelview0 * tmpvar_11).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = tmpvar_10.xyz;
					  xlv_TEXCOORD2 = o_7;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  lowp vec3 lm_3;
					  mediump vec4 light_4;
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_4 = tmpvar_6;
					  mediump vec4 tmpvar_7;
					  tmpvar_7 = max (light_4, vec4(0.001, 0.001, 0.001, 0.001));
					  light_4.w = tmpvar_7.w;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = (2.0 * tmpvar_8.xyz);
					  lm_3 = tmpvar_9;
					  light_4.xyz = (tmpvar_7.xyz + lm_3);
					  lowp vec4 c_10;
					  c_10.xyz = ((tmpvar_5.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_4.xyz);
					  c_10.w = tmpvar_5.w;
					  c_2 = c_10;
					  highp float tmpvar_11;
					  tmpvar_11 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  highp vec4 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = tmpvar_1.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (tmpvar_5 * 0.5);
					  highp vec2 tmpvar_9;
					  tmpvar_9.x = tmpvar_8.x;
					  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
					  o_7.xy = (tmpvar_9 + tmpvar_8.w);
					  o_7.zw = tmpvar_5.zw;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_4.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_1.xyz;
					  tmpvar_4.w = (-((glstate_matrix_modelview0 * tmpvar_11).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = tmpvar_10.xyz;
					  xlv_TEXCOORD2 = o_7;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  lowp vec3 lm_3;
					  mediump vec4 light_4;
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_4 = tmpvar_6;
					  mediump vec4 tmpvar_7;
					  tmpvar_7 = max (light_4, vec4(0.001, 0.001, 0.001, 0.001));
					  light_4.w = tmpvar_7.w;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = (2.0 * tmpvar_8.xyz);
					  lm_3 = tmpvar_9;
					  light_4.xyz = (tmpvar_7.xyz + lm_3);
					  lowp vec4 c_10;
					  c_10.xyz = ((tmpvar_5.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_4.xyz);
					  c_10.w = tmpvar_5.w;
					  c_2 = c_10;
					  highp float tmpvar_11;
					  tmpvar_11 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  highp vec4 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = tmpvar_1.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (tmpvar_5 * 0.5);
					  highp vec2 tmpvar_9;
					  tmpvar_9.x = tmpvar_8.x;
					  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
					  o_7.xy = (tmpvar_9 + tmpvar_8.w);
					  o_7.zw = tmpvar_5.zw;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_4.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_1.xyz;
					  tmpvar_4.w = (-((glstate_matrix_modelview0 * tmpvar_11).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = tmpvar_10.xyz;
					  xlv_TEXCOORD2 = o_7;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  lowp vec3 lm_3;
					  mediump vec4 light_4;
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_4 = tmpvar_6;
					  mediump vec4 tmpvar_7;
					  tmpvar_7 = max (light_4, vec4(0.001, 0.001, 0.001, 0.001));
					  light_4.w = tmpvar_7.w;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = (2.0 * tmpvar_8.xyz);
					  lm_3 = tmpvar_9;
					  light_4.xyz = (tmpvar_7.xyz + lm_3);
					  lowp vec4 c_10;
					  c_10.xyz = ((tmpvar_5.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_4.xyz);
					  c_10.w = tmpvar_5.w;
					  c_2 = c_10;
					  highp float tmpvar_11;
					  tmpvar_11 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD4.xyz = u_xlat1.xyz * unity_ShadowFadeCenterAndType.www;
					    vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat2 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD4.w = u_xlat2 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
					    u_xlat16_1.xyz = vec3(2.0, 2.0, 2.0) * u_xlat10_0.xyz + u_xlat16_1.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
					    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
					    u_xlat12 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
					#else
					    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD4.xyz = u_xlat1.xyz * unity_ShadowFadeCenterAndType.www;
					    vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat2 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD4.w = u_xlat2 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
					    u_xlat16_1.xyz = vec3(2.0, 2.0, 2.0) * u_xlat10_0.xyz + u_xlat16_1.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
					    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
					    u_xlat12 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
					#else
					    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD4.xyz = u_xlat1.xyz * unity_ShadowFadeCenterAndType.www;
					    vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat2 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD4.w = u_xlat2 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
					    u_xlat16_1.xyz = vec3(2.0, 2.0, 2.0) * u_xlat10_0.xyz + u_xlat16_1.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
					    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
					    u_xlat12 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
					#else
					    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (glstate_matrix_mvp * tmpvar_5);
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  mediump vec4 normal_13;
					  normal_13 = tmpvar_12;
					  mediump vec3 res_14;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, normal_13);
					  x_15.y = dot (unity_SHAg, normal_13);
					  x_15.z = dot (unity_SHAb, normal_13);
					  mediump vec3 x1_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17 = (normal_13.xyzz * normal_13.yzzx);
					  x1_16.x = dot (unity_SHBr, tmpvar_17);
					  x1_16.y = dot (unity_SHBg, tmpvar_17);
					  x1_16.z = dot (unity_SHBb, tmpvar_17);
					  res_14 = (x_15 + (x1_16 + (unity_SHC.xyz * 
					    ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y))
					  )));
					  res_14 = max (((1.055 * 
					    pow (max (res_14, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_14;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_4.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_5;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_6;
					  c_6.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_3.xyz);
					  c_6.w = tmpvar_4.w;
					  c_2 = c_6;
					  highp float tmpvar_7;
					  tmpvar_7 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_7));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (glstate_matrix_mvp * tmpvar_5);
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  mediump vec4 normal_13;
					  normal_13 = tmpvar_12;
					  mediump vec3 res_14;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, normal_13);
					  x_15.y = dot (unity_SHAg, normal_13);
					  x_15.z = dot (unity_SHAb, normal_13);
					  mediump vec3 x1_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17 = (normal_13.xyzz * normal_13.yzzx);
					  x1_16.x = dot (unity_SHBr, tmpvar_17);
					  x1_16.y = dot (unity_SHBg, tmpvar_17);
					  x1_16.z = dot (unity_SHBb, tmpvar_17);
					  res_14 = (x_15 + (x1_16 + (unity_SHC.xyz * 
					    ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y))
					  )));
					  res_14 = max (((1.055 * 
					    pow (max (res_14, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_14;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_4.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_5;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_6;
					  c_6.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_3.xyz);
					  c_6.w = tmpvar_4.w;
					  c_2 = c_6;
					  highp float tmpvar_7;
					  tmpvar_7 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_7));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (glstate_matrix_mvp * tmpvar_5);
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  mediump vec4 normal_13;
					  normal_13 = tmpvar_12;
					  mediump vec3 res_14;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, normal_13);
					  x_15.y = dot (unity_SHAg, normal_13);
					  x_15.z = dot (unity_SHAb, normal_13);
					  mediump vec3 x1_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17 = (normal_13.xyzz * normal_13.yzzx);
					  x1_16.x = dot (unity_SHBr, tmpvar_17);
					  x1_16.y = dot (unity_SHBg, tmpvar_17);
					  x1_16.z = dot (unity_SHBb, tmpvar_17);
					  res_14 = (x_15 + (x1_16 + (unity_SHC.xyz * 
					    ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y))
					  )));
					  res_14 = max (((1.055 * 
					    pow (max (res_14, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_14;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_4.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_5;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_6;
					  c_6.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_3.xyz);
					  c_6.w = tmpvar_4.w;
					  c_2 = c_6;
					  highp float tmpvar_7;
					  tmpvar_7 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_7));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    u_xlat1.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD5 = exp2((-u_xlat1.x));
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
					    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_2.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					lowp vec3 u_xlat10_4;
					float u_xlat15;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
					    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
					    u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    u_xlat0.xyz = u_xlat10_4.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    u_xlat1.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD5 = exp2((-u_xlat1.x));
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
					    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_2.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					lowp vec3 u_xlat10_4;
					float u_xlat15;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
					    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
					    u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    u_xlat0.xyz = u_xlat10_4.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    u_xlat1.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD5 = exp2((-u_xlat1.x));
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
					    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_2.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					lowp vec3 u_xlat10_4;
					float u_xlat15;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
					    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
					    u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    u_xlat0.xyz = u_xlat10_4.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  highp vec4 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = tmpvar_1.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (tmpvar_5 * 0.5);
					  highp vec2 tmpvar_9;
					  tmpvar_9.x = tmpvar_8.x;
					  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
					  o_7.xy = (tmpvar_9 + tmpvar_8.w);
					  o_7.zw = tmpvar_5.zw;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_4.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_1.xyz;
					  tmpvar_4.w = (-((glstate_matrix_modelview0 * tmpvar_11).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = tmpvar_10.xyz;
					  xlv_TEXCOORD2 = o_7;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_5.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  lowp vec3 lm_3;
					  mediump vec4 light_4;
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_4 = tmpvar_6;
					  light_4 = -(log2(max (light_4, vec4(0.001, 0.001, 0.001, 0.001))));
					  lowp vec4 tmpvar_7;
					  tmpvar_7 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = (2.0 * tmpvar_7.xyz);
					  lm_3 = tmpvar_8;
					  light_4.xyz = (light_4.xyz + lm_3);
					  lowp vec4 c_9;
					  c_9.xyz = ((tmpvar_5.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_4.xyz);
					  c_9.w = tmpvar_5.w;
					  c_2 = c_9;
					  highp float tmpvar_10;
					  tmpvar_10 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  highp vec4 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = tmpvar_1.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (tmpvar_5 * 0.5);
					  highp vec2 tmpvar_9;
					  tmpvar_9.x = tmpvar_8.x;
					  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
					  o_7.xy = (tmpvar_9 + tmpvar_8.w);
					  o_7.zw = tmpvar_5.zw;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_4.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_1.xyz;
					  tmpvar_4.w = (-((glstate_matrix_modelview0 * tmpvar_11).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = tmpvar_10.xyz;
					  xlv_TEXCOORD2 = o_7;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_5.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  lowp vec3 lm_3;
					  mediump vec4 light_4;
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_4 = tmpvar_6;
					  light_4 = -(log2(max (light_4, vec4(0.001, 0.001, 0.001, 0.001))));
					  lowp vec4 tmpvar_7;
					  tmpvar_7 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = (2.0 * tmpvar_7.xyz);
					  lm_3 = tmpvar_8;
					  light_4.xyz = (light_4.xyz + lm_3);
					  lowp vec4 c_9;
					  c_9.xyz = ((tmpvar_5.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_4.xyz);
					  c_9.w = tmpvar_5.w;
					  c_2 = c_9;
					  highp float tmpvar_10;
					  tmpvar_10 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  highp vec4 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = tmpvar_1.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (tmpvar_5 * 0.5);
					  highp vec2 tmpvar_9;
					  tmpvar_9.x = tmpvar_8.x;
					  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
					  o_7.xy = (tmpvar_9 + tmpvar_8.w);
					  o_7.zw = tmpvar_5.zw;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_4.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_1.xyz;
					  tmpvar_4.w = (-((glstate_matrix_modelview0 * tmpvar_11).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = tmpvar_10.xyz;
					  xlv_TEXCOORD2 = o_7;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_5.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  lowp vec3 lm_3;
					  mediump vec4 light_4;
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_4 = tmpvar_6;
					  light_4 = -(log2(max (light_4, vec4(0.001, 0.001, 0.001, 0.001))));
					  lowp vec4 tmpvar_7;
					  tmpvar_7 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = (2.0 * tmpvar_7.xyz);
					  lm_3 = tmpvar_8;
					  light_4.xyz = (light_4.xyz + lm_3);
					  lowp vec4 c_9;
					  c_9.xyz = ((tmpvar_5.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_4.xyz);
					  c_9.w = tmpvar_5.w;
					  c_2 = c_9;
					  highp float tmpvar_10;
					  tmpvar_10 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD4.xyz = u_xlat1.xyz * unity_ShadowFadeCenterAndType.www;
					    u_xlat1.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD5 = exp2((-u_xlat1.x));
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat2 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD4.w = u_xlat2 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
					    u_xlat16_1.xyz = vec3(2.0, 2.0, 2.0) * u_xlat10_0.xyz + (-u_xlat16_1.xyz);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
					    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
					    u_xlat12 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
					#else
					    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD4.xyz = u_xlat1.xyz * unity_ShadowFadeCenterAndType.www;
					    u_xlat1.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD5 = exp2((-u_xlat1.x));
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat2 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD4.w = u_xlat2 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
					    u_xlat16_1.xyz = vec3(2.0, 2.0, 2.0) * u_xlat10_0.xyz + (-u_xlat16_1.xyz);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
					    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
					    u_xlat12 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
					#else
					    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD4.xyz = u_xlat1.xyz * unity_ShadowFadeCenterAndType.www;
					    u_xlat1.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD5 = exp2((-u_xlat1.x));
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat2 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD4.w = u_xlat2 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
					    u_xlat16_1.xyz = vec3(2.0, 2.0, 2.0) * u_xlat10_0.xyz + (-u_xlat16_1.xyz);
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
					    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
					    u_xlat12 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
					#else
					    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (glstate_matrix_mvp * tmpvar_5);
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  mediump vec4 normal_13;
					  normal_13 = tmpvar_12;
					  mediump vec3 res_14;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, normal_13);
					  x_15.y = dot (unity_SHAg, normal_13);
					  x_15.z = dot (unity_SHAb, normal_13);
					  mediump vec3 x1_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17 = (normal_13.xyzz * normal_13.yzzx);
					  x1_16.x = dot (unity_SHBr, tmpvar_17);
					  x1_16.y = dot (unity_SHBg, tmpvar_17);
					  x1_16.z = dot (unity_SHBb, tmpvar_17);
					  res_14 = (x_15 + (x1_16 + (unity_SHC.xyz * 
					    ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y))
					  )));
					  res_14 = max (((1.055 * 
					    pow (max (res_14, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_14;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_4.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_5;
					  mediump vec4 tmpvar_6;
					  tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_6.w;
					  light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_7;
					  c_7.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_3.xyz);
					  c_7.w = tmpvar_4.w;
					  c_2 = c_7;
					  highp float tmpvar_8;
					  tmpvar_8 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_8));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (glstate_matrix_mvp * tmpvar_5);
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  mediump vec4 normal_13;
					  normal_13 = tmpvar_12;
					  mediump vec3 res_14;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, normal_13);
					  x_15.y = dot (unity_SHAg, normal_13);
					  x_15.z = dot (unity_SHAb, normal_13);
					  mediump vec3 x1_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17 = (normal_13.xyzz * normal_13.yzzx);
					  x1_16.x = dot (unity_SHBr, tmpvar_17);
					  x1_16.y = dot (unity_SHBg, tmpvar_17);
					  x1_16.z = dot (unity_SHBb, tmpvar_17);
					  res_14 = (x_15 + (x1_16 + (unity_SHC.xyz * 
					    ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y))
					  )));
					  res_14 = max (((1.055 * 
					    pow (max (res_14, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_14;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_4.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_5;
					  mediump vec4 tmpvar_6;
					  tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_6.w;
					  light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_7;
					  c_7.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_3.xyz);
					  c_7.w = tmpvar_4.w;
					  c_2 = c_7;
					  highp float tmpvar_8;
					  tmpvar_8 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_8));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (glstate_matrix_mvp * tmpvar_5);
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].x;
					  v_9.y = unity_WorldToObject[1].x;
					  v_9.z = unity_WorldToObject[2].x;
					  v_9.w = unity_WorldToObject[3].x;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].y;
					  v_10.y = unity_WorldToObject[1].y;
					  v_10.z = unity_WorldToObject[2].y;
					  v_10.w = unity_WorldToObject[3].y;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].z;
					  v_11.y = unity_WorldToObject[1].z;
					  v_11.z = unity_WorldToObject[2].z;
					  v_11.w = unity_WorldToObject[3].z;
					  highp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalize(((
					    (v_9.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_11.xyz * _glesNormal.z)));
					  mediump vec4 normal_13;
					  normal_13 = tmpvar_12;
					  mediump vec3 res_14;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, normal_13);
					  x_15.y = dot (unity_SHAg, normal_13);
					  x_15.z = dot (unity_SHAb, normal_13);
					  mediump vec3 x1_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17 = (normal_13.xyzz * normal_13.yzzx);
					  x1_16.x = dot (unity_SHBr, tmpvar_17);
					  x1_16.y = dot (unity_SHBg, tmpvar_17);
					  x1_16.z = dot (unity_SHBb, tmpvar_17);
					  res_14 = (x_15 + (x1_16 + (unity_SHC.xyz * 
					    ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y))
					  )));
					  res_14 = max (((1.055 * 
					    pow (max (res_14, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_14;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_4.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_5;
					  mediump vec4 tmpvar_6;
					  tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_6.w;
					  light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_7;
					  c_7.xyz = ((tmpvar_4.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_3.xyz);
					  c_7.w = tmpvar_4.w;
					  c_2 = c_7;
					  highp float tmpvar_8;
					  tmpvar_8 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_8));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    u_xlat1.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD5 = exp2((-u_xlat1.x));
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
					    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_2.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					lowp vec3 u_xlat10_4;
					float u_xlat15;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat0.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
					    u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    u_xlat0.xyz = u_xlat10_4.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    u_xlat1.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD5 = exp2((-u_xlat1.x));
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
					    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_2.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					lowp vec3 u_xlat10_4;
					float u_xlat15;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat0.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
					    u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    u_xlat0.xyz = u_xlat10_4.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					mediump vec3 u_xlat16_2;
					mediump vec3 u_xlat16_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    u_xlat1.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD5 = exp2((-u_xlat1.x));
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
					    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
					    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_2.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec3 vs_TEXCOORD4;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					lowp vec3 u_xlat10_4;
					float u_xlat15;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat0.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
					    u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    u_xlat0.xyz = u_xlat10_4.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
					    u_xlat15 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
					#else
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  highp vec4 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = tmpvar_1.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (tmpvar_5 * 0.5);
					  highp vec2 tmpvar_9;
					  tmpvar_9.x = tmpvar_8.x;
					  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
					  o_7.xy = (tmpvar_9 + tmpvar_8.w);
					  o_7.zw = tmpvar_5.zw;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_4.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_1.xyz;
					  tmpvar_4.w = (-((glstate_matrix_modelview0 * tmpvar_11).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = tmpvar_10.xyz;
					  xlv_TEXCOORD2 = o_7;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_5.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  lowp vec3 lm_3;
					  mediump vec4 light_4;
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_4 = tmpvar_6;
					  mediump vec4 tmpvar_7;
					  tmpvar_7 = max (light_4, vec4(0.001, 0.001, 0.001, 0.001));
					  light_4.w = tmpvar_7.w;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = (2.0 * tmpvar_8.xyz);
					  lm_3 = tmpvar_9;
					  light_4.xyz = (tmpvar_7.xyz + lm_3);
					  lowp vec4 c_10;
					  c_10.xyz = ((tmpvar_5.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_4.xyz);
					  c_10.w = tmpvar_5.w;
					  c_2 = c_10;
					  highp float tmpvar_11;
					  tmpvar_11 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  highp vec4 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = tmpvar_1.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (tmpvar_5 * 0.5);
					  highp vec2 tmpvar_9;
					  tmpvar_9.x = tmpvar_8.x;
					  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
					  o_7.xy = (tmpvar_9 + tmpvar_8.w);
					  o_7.zw = tmpvar_5.zw;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_4.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_1.xyz;
					  tmpvar_4.w = (-((glstate_matrix_modelview0 * tmpvar_11).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = tmpvar_10.xyz;
					  xlv_TEXCOORD2 = o_7;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_5.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  lowp vec3 lm_3;
					  mediump vec4 light_4;
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_4 = tmpvar_6;
					  mediump vec4 tmpvar_7;
					  tmpvar_7 = max (light_4, vec4(0.001, 0.001, 0.001, 0.001));
					  light_4.w = tmpvar_7.w;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = (2.0 * tmpvar_8.xyz);
					  lm_3 = tmpvar_9;
					  light_4.xyz = (tmpvar_7.xyz + lm_3);
					  lowp vec4 c_10;
					  c_10.xyz = ((tmpvar_5.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_4.xyz);
					  c_10.w = tmpvar_5.w;
					  c_2 = c_10;
					  highp float tmpvar_11;
					  tmpvar_11 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  highp vec4 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = tmpvar_1.xyz;
					  tmpvar_5 = (glstate_matrix_mvp * tmpvar_6);
					  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec4 o_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8 = (tmpvar_5 * 0.5);
					  highp vec2 tmpvar_9;
					  tmpvar_9.x = tmpvar_8.x;
					  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
					  o_7.xy = (tmpvar_9 + tmpvar_8.w);
					  o_7.zw = tmpvar_5.zw;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_4.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_1.xyz;
					  tmpvar_4.w = (-((glstate_matrix_modelview0 * tmpvar_11).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = tmpvar_5;
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = tmpvar_10.xyz;
					  xlv_TEXCOORD2 = o_7;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_5.z)));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _DetailTex;
					uniform sampler2D _LightBuffer;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  lowp vec3 lm_3;
					  mediump vec4 light_4;
					  lowp vec4 tmpvar_5;
					  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_4 = tmpvar_6;
					  mediump vec4 tmpvar_7;
					  tmpvar_7 = max (light_4, vec4(0.001, 0.001, 0.001, 0.001));
					  light_4.w = tmpvar_7.w;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = (2.0 * tmpvar_8.xyz);
					  lm_3 = tmpvar_9;
					  light_4.xyz = (tmpvar_7.xyz + lm_3);
					  lowp vec4 c_10;
					  c_10.xyz = ((tmpvar_5.xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz) * light_4.xyz);
					  c_10.w = tmpvar_5.w;
					  c_2 = c_10;
					  highp float tmpvar_11;
					  tmpvar_11 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD4.xyz = u_xlat1.xyz * unity_ShadowFadeCenterAndType.www;
					    u_xlat1.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD5 = exp2((-u_xlat1.x));
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat2 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD4.w = u_xlat2 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
					    u_xlat16_1.xyz = vec3(2.0, 2.0, 2.0) * u_xlat10_0.xyz + u_xlat16_1.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
					    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
					    u_xlat12 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
					#else
					    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD4.xyz = u_xlat1.xyz * unity_ShadowFadeCenterAndType.www;
					    u_xlat1.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD5 = exp2((-u_xlat1.x));
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat2 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD4.w = u_xlat2 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
					    u_xlat16_1.xyz = vec3(2.0, 2.0, 2.0) * u_xlat10_0.xyz + u_xlat16_1.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
					    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
					    u_xlat12 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
					#else
					    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec3 vs_TEXCOORD1;
					out highp float vs_TEXCOORD5;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat2;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    gl_Position = u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD4.xyz = u_xlat1.xyz * unity_ShadowFadeCenterAndType.www;
					    u_xlat1.x = u_xlat0.z * unity_FogParams.y;
					    vs_TEXCOORD5 = exp2((-u_xlat1.x));
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD2.zw = u_xlat0.zw;
					    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat2 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD4.w = u_xlat2 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform 	lowp vec4 unity_FogColor;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _LightBuffer;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp float vs_TEXCOORD5;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					layout(location = 0) out lowp vec4 SV_Target0;
					vec3 u_xlat0;
					mediump vec3 u_xlat16_0;
					lowp vec3 u_xlat10_0;
					mediump vec3 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					float u_xlat12;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
					    u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
					    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
					    u_xlat16_1.xyz = vec3(2.0, 2.0, 2.0) * u_xlat10_0.xyz + u_xlat16_1.xyz;
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
					    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
					    u_xlat12 = vs_TEXCOORD5;
					#ifdef UNITY_ADRENO_ES3
					    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
					#else
					    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
					#endif
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
					    SV_Target0.xyz = u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}
					#endif"
}
}
Program "fp" {
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
					"!!GLES3"
}
}
 }
 Pass {
  Name "DEFERRED"
  Tags { "LIGHTMODE"="Deferred" "RenderType"="Opaque" }
  GpuProgramID 245672
Program "vp" {
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_7.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_7.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_7.z;
					  tmpvar_5.zw = vec2(0.0, 0.0);
					  tmpvar_5.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_19;
					  normal_19 = worldNormal_3;
					  mediump vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = normal_19;
					  mediump vec3 res_21;
					  mediump vec3 x_22;
					  x_22.x = dot (unity_SHAr, tmpvar_20);
					  x_22.y = dot (unity_SHAg, tmpvar_20);
					  x_22.z = dot (unity_SHAb, tmpvar_20);
					  mediump vec3 x1_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24 = (normal_19.xyzz * normal_19.yzzx);
					  x1_23.x = dot (unity_SHBr, tmpvar_24);
					  x1_23.y = dot (unity_SHBg, tmpvar_24);
					  x1_23.z = dot (unity_SHBb, tmpvar_24);
					  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
					    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
					  )));
					  res_21 = max (((1.055 * 
					    pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = (glstate_matrix_mvp * tmpvar_6);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), res_21);
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 worldN_3;
					  lowp vec3 tmpvar_4;
					  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_5;
					  tmpvar_5 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_6;
					  tmpvar_6 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_3.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_3.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_3.z = tmpvar_8;
					  mediump vec4 outDiffuseOcclusion_9;
					  mediump vec4 outNormal_10;
					  mediump vec4 emission_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = tmpvar_4;
					  outDiffuseOcclusion_9 = tmpvar_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = ((worldN_3 * 0.5) + 0.5);
					  outNormal_10 = tmpvar_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = vec3(0.0, 0.0, 0.0);
					  emission_11 = tmpvar_14;
					  emission_11.xyz = (emission_11.xyz + (tmpvar_4 * xlv_TEXCOORD5));
					  outDiffuse_1.xyz = outDiffuseOcclusion_9.xyz;
					  outEmission_2.w = emission_11.w;
					  outEmission_2.xyz = exp2(-(emission_11.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = vec4(0.0, 0.0, 0.0, 0.0);
					  gl_FragData[2] = outNormal_10;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_7.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_7.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_7.z;
					  tmpvar_5.zw = vec2(0.0, 0.0);
					  tmpvar_5.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_19;
					  normal_19 = worldNormal_3;
					  mediump vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = normal_19;
					  mediump vec3 res_21;
					  mediump vec3 x_22;
					  x_22.x = dot (unity_SHAr, tmpvar_20);
					  x_22.y = dot (unity_SHAg, tmpvar_20);
					  x_22.z = dot (unity_SHAb, tmpvar_20);
					  mediump vec3 x1_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24 = (normal_19.xyzz * normal_19.yzzx);
					  x1_23.x = dot (unity_SHBr, tmpvar_24);
					  x1_23.y = dot (unity_SHBg, tmpvar_24);
					  x1_23.z = dot (unity_SHBb, tmpvar_24);
					  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
					    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
					  )));
					  res_21 = max (((1.055 * 
					    pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = (glstate_matrix_mvp * tmpvar_6);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), res_21);
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 worldN_3;
					  lowp vec3 tmpvar_4;
					  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_5;
					  tmpvar_5 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_6;
					  tmpvar_6 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_3.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_3.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_3.z = tmpvar_8;
					  mediump vec4 outDiffuseOcclusion_9;
					  mediump vec4 outNormal_10;
					  mediump vec4 emission_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = tmpvar_4;
					  outDiffuseOcclusion_9 = tmpvar_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = ((worldN_3 * 0.5) + 0.5);
					  outNormal_10 = tmpvar_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = vec3(0.0, 0.0, 0.0);
					  emission_11 = tmpvar_14;
					  emission_11.xyz = (emission_11.xyz + (tmpvar_4 * xlv_TEXCOORD5));
					  outDiffuse_1.xyz = outDiffuseOcclusion_9.xyz;
					  outEmission_2.w = emission_11.w;
					  outEmission_2.xyz = exp2(-(emission_11.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = vec4(0.0, 0.0, 0.0, 0.0);
					  gl_FragData[2] = outNormal_10;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_7.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_7.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_7.z;
					  tmpvar_5.zw = vec2(0.0, 0.0);
					  tmpvar_5.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_19;
					  normal_19 = worldNormal_3;
					  mediump vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = normal_19;
					  mediump vec3 res_21;
					  mediump vec3 x_22;
					  x_22.x = dot (unity_SHAr, tmpvar_20);
					  x_22.y = dot (unity_SHAg, tmpvar_20);
					  x_22.z = dot (unity_SHAb, tmpvar_20);
					  mediump vec3 x1_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24 = (normal_19.xyzz * normal_19.yzzx);
					  x1_23.x = dot (unity_SHBr, tmpvar_24);
					  x1_23.y = dot (unity_SHBg, tmpvar_24);
					  x1_23.z = dot (unity_SHBb, tmpvar_24);
					  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
					    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
					  )));
					  res_21 = max (((1.055 * 
					    pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = (glstate_matrix_mvp * tmpvar_6);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), res_21);
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 worldN_3;
					  lowp vec3 tmpvar_4;
					  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_5;
					  tmpvar_5 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_6;
					  tmpvar_6 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_3.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_3.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_3.z = tmpvar_8;
					  mediump vec4 outDiffuseOcclusion_9;
					  mediump vec4 outNormal_10;
					  mediump vec4 emission_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = tmpvar_4;
					  outDiffuseOcclusion_9 = tmpvar_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = ((worldN_3 * 0.5) + 0.5);
					  outNormal_10 = tmpvar_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = vec3(0.0, 0.0, 0.0);
					  emission_11 = tmpvar_14;
					  emission_11.xyz = (emission_11.xyz + (tmpvar_4 * xlv_TEXCOORD5));
					  outDiffuse_1.xyz = outDiffuseOcclusion_9.xyz;
					  outEmission_2.w = emission_11.w;
					  outEmission_2.xyz = exp2(-(emission_11.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = vec4(0.0, 0.0, 0.0, 0.0);
					  gl_FragData[2] = outNormal_10;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out mediump vec3 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD5.xyz = u_xlat0.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD5;
					layout(location = 0) out mediump vec4 SV_Target0;
					layout(location = 1) out mediump vec4 SV_Target1;
					layout(location = 2) out mediump vec4 SV_Target2;
					layout(location = 3) out mediump vec4 SV_Target3;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					mediump vec3 u_xlat16_3;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    SV_Target0.xyz = u_xlat10_2.xyz;
					    u_xlat16_3.xyz = u_xlat10_2.xyz * vs_TEXCOORD5.xyz;
					    SV_Target3.xyz = exp2((-u_xlat16_3.xyz));
					    SV_Target0.w = 1.0;
					    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_2.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_2.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_2.xyz);
					    u_xlat10_2.xyz = u_xlat0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
					    SV_Target2.xyz = u_xlat10_2.xyz;
					    SV_Target2.w = 1.0;
					    SV_Target3.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out mediump vec3 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD5.xyz = u_xlat0.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD5;
					layout(location = 0) out mediump vec4 SV_Target0;
					layout(location = 1) out mediump vec4 SV_Target1;
					layout(location = 2) out mediump vec4 SV_Target2;
					layout(location = 3) out mediump vec4 SV_Target3;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					mediump vec3 u_xlat16_3;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    SV_Target0.xyz = u_xlat10_2.xyz;
					    u_xlat16_3.xyz = u_xlat10_2.xyz * vs_TEXCOORD5.xyz;
					    SV_Target3.xyz = exp2((-u_xlat16_3.xyz));
					    SV_Target0.w = 1.0;
					    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_2.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_2.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_2.xyz);
					    u_xlat10_2.xyz = u_xlat0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
					    SV_Target2.xyz = u_xlat10_2.xyz;
					    SV_Target2.w = 1.0;
					    SV_Target3.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out mediump vec3 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD5.xyz = u_xlat0.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD5;
					layout(location = 0) out mediump vec4 SV_Target0;
					layout(location = 1) out mediump vec4 SV_Target1;
					layout(location = 2) out mediump vec4 SV_Target2;
					layout(location = 3) out mediump vec4 SV_Target3;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					mediump vec3 u_xlat16_3;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    SV_Target0.xyz = u_xlat10_2.xyz;
					    u_xlat16_3.xyz = u_xlat10_2.xyz * vs_TEXCOORD5.xyz;
					    SV_Target3.xyz = exp2((-u_xlat16_3.xyz));
					    SV_Target0.w = 1.0;
					    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_2.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_2.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_2.xyz);
					    u_xlat10_2.xyz = u_xlat0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
					    SV_Target2.xyz = u_xlat10_2.xyz;
					    SV_Target2.w = 1.0;
					    SV_Target3.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  lowp float tangentSign_2;
					  lowp vec3 worldTangent_3;
					  lowp vec3 worldNormal_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = tmpvar_1.xyz;
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_9;
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_9 = tmpvar_10.xyz;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].x;
					  v_11.y = unity_WorldToObject[1].x;
					  v_11.z = unity_WorldToObject[2].x;
					  v_11.w = unity_WorldToObject[3].x;
					  highp vec4 v_12;
					  v_12.x = unity_WorldToObject[0].y;
					  v_12.y = unity_WorldToObject[1].y;
					  v_12.z = unity_WorldToObject[2].y;
					  v_12.w = unity_WorldToObject[3].y;
					  highp vec4 v_13;
					  v_13.x = unity_WorldToObject[0].z;
					  v_13.y = unity_WorldToObject[1].z;
					  v_13.z = unity_WorldToObject[2].z;
					  v_13.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize(((
					    (v_11.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  worldNormal_4 = tmpvar_14;
					  highp mat3 tmpvar_15;
					  tmpvar_15[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_15[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_15[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_16;
					  tmpvar_16 = normalize((tmpvar_15 * _glesTANGENT.xyz));
					  worldTangent_3 = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_2 = tmpvar_17;
					  lowp vec3 tmpvar_18;
					  tmpvar_18 = (((worldNormal_4.yzx * worldTangent_3.zxy) - (worldNormal_4.zxy * worldTangent_3.yzx)) * tangentSign_2);
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_3.x;
					  tmpvar_19.y = tmpvar_18.x;
					  tmpvar_19.z = worldNormal_4.x;
					  tmpvar_19.w = tmpvar_9.x;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_3.y;
					  tmpvar_20.y = tmpvar_18.y;
					  tmpvar_20.z = worldNormal_4.y;
					  tmpvar_20.w = tmpvar_9.y;
					  highp vec4 tmpvar_21;
					  tmpvar_21.x = worldTangent_3.z;
					  tmpvar_21.y = tmpvar_18.z;
					  tmpvar_21.z = worldNormal_4.z;
					  tmpvar_21.w = tmpvar_9.z;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  tmpvar_7.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = tmpvar_1.xyz;
					  tmpvar_7.w = (-((glstate_matrix_modelview0 * tmpvar_22).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = (glstate_matrix_mvp * tmpvar_8);
					  xlv_TEXCOORD0 = tmpvar_5;
					  xlv_TEXCOORD1 = tmpvar_19;
					  xlv_TEXCOORD2 = tmpvar_20;
					  xlv_TEXCOORD3 = tmpvar_21;
					  xlv_TEXCOORD4 = tmpvar_6;
					  xlv_TEXCOORD5 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 worldN_3;
					  lowp vec3 tmpvar_4;
					  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_5;
					  tmpvar_5 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_6;
					  tmpvar_6 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_3.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_3.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_3.z = tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_10;
					  tmpvar_10 = (2.0 * tmpvar_9.xyz);
					  mediump vec4 outDiffuseOcclusion_11;
					  mediump vec4 outNormal_12;
					  mediump vec4 emission_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = tmpvar_4;
					  outDiffuseOcclusion_11 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = ((worldN_3 * 0.5) + 0.5);
					  outNormal_12 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = vec3(0.0, 0.0, 0.0);
					  emission_13 = tmpvar_16;
					  emission_13.xyz = (emission_13.xyz + (tmpvar_4 * tmpvar_10));
					  outDiffuse_1.xyz = outDiffuseOcclusion_11.xyz;
					  outEmission_2.w = emission_13.w;
					  outEmission_2.xyz = exp2(-(emission_13.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = vec4(0.0, 0.0, 0.0, 0.0);
					  gl_FragData[2] = outNormal_12;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  lowp float tangentSign_2;
					  lowp vec3 worldTangent_3;
					  lowp vec3 worldNormal_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = tmpvar_1.xyz;
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_9;
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_9 = tmpvar_10.xyz;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].x;
					  v_11.y = unity_WorldToObject[1].x;
					  v_11.z = unity_WorldToObject[2].x;
					  v_11.w = unity_WorldToObject[3].x;
					  highp vec4 v_12;
					  v_12.x = unity_WorldToObject[0].y;
					  v_12.y = unity_WorldToObject[1].y;
					  v_12.z = unity_WorldToObject[2].y;
					  v_12.w = unity_WorldToObject[3].y;
					  highp vec4 v_13;
					  v_13.x = unity_WorldToObject[0].z;
					  v_13.y = unity_WorldToObject[1].z;
					  v_13.z = unity_WorldToObject[2].z;
					  v_13.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize(((
					    (v_11.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  worldNormal_4 = tmpvar_14;
					  highp mat3 tmpvar_15;
					  tmpvar_15[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_15[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_15[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_16;
					  tmpvar_16 = normalize((tmpvar_15 * _glesTANGENT.xyz));
					  worldTangent_3 = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_2 = tmpvar_17;
					  lowp vec3 tmpvar_18;
					  tmpvar_18 = (((worldNormal_4.yzx * worldTangent_3.zxy) - (worldNormal_4.zxy * worldTangent_3.yzx)) * tangentSign_2);
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_3.x;
					  tmpvar_19.y = tmpvar_18.x;
					  tmpvar_19.z = worldNormal_4.x;
					  tmpvar_19.w = tmpvar_9.x;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_3.y;
					  tmpvar_20.y = tmpvar_18.y;
					  tmpvar_20.z = worldNormal_4.y;
					  tmpvar_20.w = tmpvar_9.y;
					  highp vec4 tmpvar_21;
					  tmpvar_21.x = worldTangent_3.z;
					  tmpvar_21.y = tmpvar_18.z;
					  tmpvar_21.z = worldNormal_4.z;
					  tmpvar_21.w = tmpvar_9.z;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  tmpvar_7.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = tmpvar_1.xyz;
					  tmpvar_7.w = (-((glstate_matrix_modelview0 * tmpvar_22).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = (glstate_matrix_mvp * tmpvar_8);
					  xlv_TEXCOORD0 = tmpvar_5;
					  xlv_TEXCOORD1 = tmpvar_19;
					  xlv_TEXCOORD2 = tmpvar_20;
					  xlv_TEXCOORD3 = tmpvar_21;
					  xlv_TEXCOORD4 = tmpvar_6;
					  xlv_TEXCOORD5 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 worldN_3;
					  lowp vec3 tmpvar_4;
					  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_5;
					  tmpvar_5 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_6;
					  tmpvar_6 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_3.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_3.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_3.z = tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_10;
					  tmpvar_10 = (2.0 * tmpvar_9.xyz);
					  mediump vec4 outDiffuseOcclusion_11;
					  mediump vec4 outNormal_12;
					  mediump vec4 emission_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = tmpvar_4;
					  outDiffuseOcclusion_11 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = ((worldN_3 * 0.5) + 0.5);
					  outNormal_12 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = vec3(0.0, 0.0, 0.0);
					  emission_13 = tmpvar_16;
					  emission_13.xyz = (emission_13.xyz + (tmpvar_4 * tmpvar_10));
					  outDiffuse_1.xyz = outDiffuseOcclusion_11.xyz;
					  outEmission_2.w = emission_13.w;
					  outEmission_2.xyz = exp2(-(emission_13.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = vec4(0.0, 0.0, 0.0, 0.0);
					  gl_FragData[2] = outNormal_12;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  lowp float tangentSign_2;
					  lowp vec3 worldTangent_3;
					  lowp vec3 worldNormal_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = tmpvar_1.xyz;
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_9;
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_9 = tmpvar_10.xyz;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].x;
					  v_11.y = unity_WorldToObject[1].x;
					  v_11.z = unity_WorldToObject[2].x;
					  v_11.w = unity_WorldToObject[3].x;
					  highp vec4 v_12;
					  v_12.x = unity_WorldToObject[0].y;
					  v_12.y = unity_WorldToObject[1].y;
					  v_12.z = unity_WorldToObject[2].y;
					  v_12.w = unity_WorldToObject[3].y;
					  highp vec4 v_13;
					  v_13.x = unity_WorldToObject[0].z;
					  v_13.y = unity_WorldToObject[1].z;
					  v_13.z = unity_WorldToObject[2].z;
					  v_13.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize(((
					    (v_11.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  worldNormal_4 = tmpvar_14;
					  highp mat3 tmpvar_15;
					  tmpvar_15[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_15[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_15[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_16;
					  tmpvar_16 = normalize((tmpvar_15 * _glesTANGENT.xyz));
					  worldTangent_3 = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_2 = tmpvar_17;
					  lowp vec3 tmpvar_18;
					  tmpvar_18 = (((worldNormal_4.yzx * worldTangent_3.zxy) - (worldNormal_4.zxy * worldTangent_3.yzx)) * tangentSign_2);
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_3.x;
					  tmpvar_19.y = tmpvar_18.x;
					  tmpvar_19.z = worldNormal_4.x;
					  tmpvar_19.w = tmpvar_9.x;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_3.y;
					  tmpvar_20.y = tmpvar_18.y;
					  tmpvar_20.z = worldNormal_4.y;
					  tmpvar_20.w = tmpvar_9.y;
					  highp vec4 tmpvar_21;
					  tmpvar_21.x = worldTangent_3.z;
					  tmpvar_21.y = tmpvar_18.z;
					  tmpvar_21.z = worldNormal_4.z;
					  tmpvar_21.w = tmpvar_9.z;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  tmpvar_7.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = tmpvar_1.xyz;
					  tmpvar_7.w = (-((glstate_matrix_modelview0 * tmpvar_22).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = (glstate_matrix_mvp * tmpvar_8);
					  xlv_TEXCOORD0 = tmpvar_5;
					  xlv_TEXCOORD1 = tmpvar_19;
					  xlv_TEXCOORD2 = tmpvar_20;
					  xlv_TEXCOORD3 = tmpvar_21;
					  xlv_TEXCOORD4 = tmpvar_6;
					  xlv_TEXCOORD5 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 worldN_3;
					  lowp vec3 tmpvar_4;
					  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_5;
					  tmpvar_5 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_6;
					  tmpvar_6 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_3.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_3.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_3.z = tmpvar_8;
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_10;
					  tmpvar_10 = (2.0 * tmpvar_9.xyz);
					  mediump vec4 outDiffuseOcclusion_11;
					  mediump vec4 outNormal_12;
					  mediump vec4 emission_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = tmpvar_4;
					  outDiffuseOcclusion_11 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = ((worldN_3 * 0.5) + 0.5);
					  outNormal_12 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = vec3(0.0, 0.0, 0.0);
					  emission_13 = tmpvar_16;
					  emission_13.xyz = (emission_13.xyz + (tmpvar_4 * tmpvar_10));
					  outDiffuse_1.xyz = outDiffuseOcclusion_11.xyz;
					  outEmission_2.w = emission_13.w;
					  outEmission_2.xyz = exp2(-(emission_13.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = vec4(0.0, 0.0, 0.0, 0.0);
					  gl_FragData[2] = outNormal_12;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec3 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    u_xlat0.xyz = u_xlat3.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD5.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat4 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD5.w = u_xlat4 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in highp vec4 vs_TEXCOORD4;
					layout(location = 0) out mediump vec4 SV_Target0;
					layout(location = 1) out mediump vec4 SV_Target1;
					layout(location = 2) out mediump vec4 SV_Target2;
					layout(location = 3) out mediump vec4 SV_Target3;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    SV_Target0.xyz = u_xlat10_2.xyz;
					    SV_Target0.w = 1.0;
					    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_3.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_3.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
					    SV_Target2.xyz = u_xlat10_3.xyz;
					    SV_Target2.w = 1.0;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    SV_Target3.xyz = exp2((-u_xlat16_4.xyz));
					    SV_Target3.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec3 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    u_xlat0.xyz = u_xlat3.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD5.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat4 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD5.w = u_xlat4 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in highp vec4 vs_TEXCOORD4;
					layout(location = 0) out mediump vec4 SV_Target0;
					layout(location = 1) out mediump vec4 SV_Target1;
					layout(location = 2) out mediump vec4 SV_Target2;
					layout(location = 3) out mediump vec4 SV_Target3;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    SV_Target0.xyz = u_xlat10_2.xyz;
					    SV_Target0.w = 1.0;
					    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_3.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_3.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
					    SV_Target2.xyz = u_xlat10_3.xyz;
					    SV_Target2.w = 1.0;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    SV_Target3.xyz = exp2((-u_xlat16_4.xyz));
					    SV_Target3.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec3 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    u_xlat0.xyz = u_xlat3.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD5.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat4 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD5.w = u_xlat4 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in highp vec4 vs_TEXCOORD4;
					layout(location = 0) out mediump vec4 SV_Target0;
					layout(location = 1) out mediump vec4 SV_Target1;
					layout(location = 2) out mediump vec4 SV_Target2;
					layout(location = 3) out mediump vec4 SV_Target3;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					mediump vec3 u_xlat16_4;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    SV_Target0.xyz = u_xlat10_2.xyz;
					    SV_Target0.w = 1.0;
					    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_3.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_3.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
					    SV_Target2.xyz = u_xlat10_3.xyz;
					    SV_Target2.w = 1.0;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    u_xlat16_4.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    SV_Target3.xyz = exp2((-u_xlat16_4.xyz));
					    SV_Target3.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_7.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_7.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_7.z;
					  tmpvar_5.zw = vec2(0.0, 0.0);
					  tmpvar_5.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_19;
					  normal_19 = worldNormal_3;
					  mediump vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = normal_19;
					  mediump vec3 res_21;
					  mediump vec3 x_22;
					  x_22.x = dot (unity_SHAr, tmpvar_20);
					  x_22.y = dot (unity_SHAg, tmpvar_20);
					  x_22.z = dot (unity_SHAb, tmpvar_20);
					  mediump vec3 x1_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24 = (normal_19.xyzz * normal_19.yzzx);
					  x1_23.x = dot (unity_SHBr, tmpvar_24);
					  x1_23.y = dot (unity_SHBg, tmpvar_24);
					  x1_23.z = dot (unity_SHBb, tmpvar_24);
					  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
					    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
					  )));
					  res_21 = max (((1.055 * 
					    pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = (glstate_matrix_mvp * tmpvar_6);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), res_21);
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  tmpvar_3 = (texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_4;
					  tmpvar_4 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_5;
					  tmpvar_5 = dot (xlv_TEXCOORD1.xyz, tmpvar_4);
					  worldN_2.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = dot (xlv_TEXCOORD2.xyz, tmpvar_4);
					  worldN_2.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = dot (xlv_TEXCOORD3.xyz, tmpvar_4);
					  worldN_2.z = tmpvar_7;
					  mediump vec4 outDiffuseOcclusion_8;
					  mediump vec4 outNormal_9;
					  mediump vec4 emission_10;
					  lowp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_3;
					  outDiffuseOcclusion_8 = tmpvar_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = ((worldN_2 * 0.5) + 0.5);
					  outNormal_9 = tmpvar_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = vec3(0.0, 0.0, 0.0);
					  emission_10 = tmpvar_13;
					  emission_10.xyz = (emission_10.xyz + (tmpvar_3 * xlv_TEXCOORD5));
					  outDiffuse_1.xyz = outDiffuseOcclusion_8.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = vec4(0.0, 0.0, 0.0, 0.0);
					  gl_FragData[2] = outNormal_9;
					  gl_FragData[3] = emission_10;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_7.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_7.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_7.z;
					  tmpvar_5.zw = vec2(0.0, 0.0);
					  tmpvar_5.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_19;
					  normal_19 = worldNormal_3;
					  mediump vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = normal_19;
					  mediump vec3 res_21;
					  mediump vec3 x_22;
					  x_22.x = dot (unity_SHAr, tmpvar_20);
					  x_22.y = dot (unity_SHAg, tmpvar_20);
					  x_22.z = dot (unity_SHAb, tmpvar_20);
					  mediump vec3 x1_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24 = (normal_19.xyzz * normal_19.yzzx);
					  x1_23.x = dot (unity_SHBr, tmpvar_24);
					  x1_23.y = dot (unity_SHBg, tmpvar_24);
					  x1_23.z = dot (unity_SHBb, tmpvar_24);
					  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
					    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
					  )));
					  res_21 = max (((1.055 * 
					    pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = (glstate_matrix_mvp * tmpvar_6);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), res_21);
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  tmpvar_3 = (texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_4;
					  tmpvar_4 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_5;
					  tmpvar_5 = dot (xlv_TEXCOORD1.xyz, tmpvar_4);
					  worldN_2.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = dot (xlv_TEXCOORD2.xyz, tmpvar_4);
					  worldN_2.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = dot (xlv_TEXCOORD3.xyz, tmpvar_4);
					  worldN_2.z = tmpvar_7;
					  mediump vec4 outDiffuseOcclusion_8;
					  mediump vec4 outNormal_9;
					  mediump vec4 emission_10;
					  lowp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_3;
					  outDiffuseOcclusion_8 = tmpvar_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = ((worldN_2 * 0.5) + 0.5);
					  outNormal_9 = tmpvar_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = vec3(0.0, 0.0, 0.0);
					  emission_10 = tmpvar_13;
					  emission_10.xyz = (emission_10.xyz + (tmpvar_3 * xlv_TEXCOORD5));
					  outDiffuse_1.xyz = outDiffuseOcclusion_8.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = vec4(0.0, 0.0, 0.0, 0.0);
					  gl_FragData[2] = outNormal_9;
					  gl_FragData[3] = emission_10;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp vec4 v_8;
					  v_8.x = unity_WorldToObject[0].x;
					  v_8.y = unity_WorldToObject[1].x;
					  v_8.z = unity_WorldToObject[2].x;
					  v_8.w = unity_WorldToObject[3].x;
					  highp vec4 v_9;
					  v_9.x = unity_WorldToObject[0].y;
					  v_9.y = unity_WorldToObject[1].y;
					  v_9.z = unity_WorldToObject[2].y;
					  v_9.w = unity_WorldToObject[3].y;
					  highp vec4 v_10;
					  v_10.x = unity_WorldToObject[0].z;
					  v_10.y = unity_WorldToObject[1].z;
					  v_10.z = unity_WorldToObject[2].z;
					  v_10.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_10.xyz * _glesNormal.z)));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_7.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_7.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_7.z;
					  tmpvar_5.zw = vec2(0.0, 0.0);
					  tmpvar_5.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_19;
					  normal_19 = worldNormal_3;
					  mediump vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = normal_19;
					  mediump vec3 res_21;
					  mediump vec3 x_22;
					  x_22.x = dot (unity_SHAr, tmpvar_20);
					  x_22.y = dot (unity_SHAg, tmpvar_20);
					  x_22.z = dot (unity_SHAb, tmpvar_20);
					  mediump vec3 x1_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24 = (normal_19.xyzz * normal_19.yzzx);
					  x1_23.x = dot (unity_SHBr, tmpvar_24);
					  x1_23.y = dot (unity_SHBg, tmpvar_24);
					  x1_23.z = dot (unity_SHBb, tmpvar_24);
					  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
					    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
					  )));
					  res_21 = max (((1.055 * 
					    pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  gl_Position = (glstate_matrix_mvp * tmpvar_6);
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), res_21);
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  tmpvar_3 = (texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_4;
					  tmpvar_4 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_5;
					  tmpvar_5 = dot (xlv_TEXCOORD1.xyz, tmpvar_4);
					  worldN_2.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = dot (xlv_TEXCOORD2.xyz, tmpvar_4);
					  worldN_2.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = dot (xlv_TEXCOORD3.xyz, tmpvar_4);
					  worldN_2.z = tmpvar_7;
					  mediump vec4 outDiffuseOcclusion_8;
					  mediump vec4 outNormal_9;
					  mediump vec4 emission_10;
					  lowp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_3;
					  outDiffuseOcclusion_8 = tmpvar_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = ((worldN_2 * 0.5) + 0.5);
					  outNormal_9 = tmpvar_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = vec3(0.0, 0.0, 0.0);
					  emission_10 = tmpvar_13;
					  emission_10.xyz = (emission_10.xyz + (tmpvar_3 * xlv_TEXCOORD5));
					  outDiffuse_1.xyz = outDiffuseOcclusion_8.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = vec4(0.0, 0.0, 0.0, 0.0);
					  gl_FragData[2] = outNormal_9;
					  gl_FragData[3] = emission_10;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out mediump vec3 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD5.xyz = u_xlat0.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD5;
					layout(location = 0) out mediump vec4 SV_Target0;
					layout(location = 1) out mediump vec4 SV_Target1;
					layout(location = 2) out mediump vec4 SV_Target2;
					layout(location = 3) out mediump vec4 SV_Target3;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    SV_Target0.xyz = u_xlat10_2.xyz;
					    SV_Target3.xyz = u_xlat10_2.xyz * vs_TEXCOORD5.xyz;
					    SV_Target0.w = 1.0;
					    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_2.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_2.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_2.xyz);
					    u_xlat10_2.xyz = u_xlat0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
					    SV_Target2.xyz = u_xlat10_2.xyz;
					    SV_Target2.w = 1.0;
					    SV_Target3.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out mediump vec3 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD5.xyz = u_xlat0.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD5;
					layout(location = 0) out mediump vec4 SV_Target0;
					layout(location = 1) out mediump vec4 SV_Target1;
					layout(location = 2) out mediump vec4 SV_Target2;
					layout(location = 3) out mediump vec4 SV_Target3;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    SV_Target0.xyz = u_xlat10_2.xyz;
					    SV_Target3.xyz = u_xlat10_2.xyz * vs_TEXCOORD5.xyz;
					    SV_Target0.w = 1.0;
					    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_2.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_2.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_2.xyz);
					    u_xlat10_2.xyz = u_xlat0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
					    SV_Target2.xyz = u_xlat10_2.xyz;
					    SV_Target2.w = 1.0;
					    SV_Target3.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out mediump vec3 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					mediump vec4 u_xlat16_1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					mediump vec3 u_xlat16_4;
					mediump vec3 u_xlat16_5;
					float u_xlat19;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.zw = in_NORMAL0.xx * hlslcc_mtx4unity_WorldToObject[2].xx;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.zw = in_NORMAL0.yy * hlslcc_mtx4unity_WorldToObject[2].yy;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.zw = in_NORMAL0.zz * hlslcc_mtx4unity_WorldToObject[2].zz;
					    u_xlat0 = u_xlat0 + u_xlat1;
					    u_xlat1.x = dot(u_xlat0.xyw, u_xlat0.xyw);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat0 = u_xlat0.xywz * u_xlat1.xxxx;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat19 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat19 = inversesqrt(u_xlat19);
					    u_xlat1.xyz = vec3(u_xlat19) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.yzx * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat19 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat19) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat0.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat0.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD3.z = u_xlat0.z;
					    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat16_4.x = u_xlat0.y * u_xlat0.y;
					    u_xlat16_4.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_4.x);
					    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
					    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
					    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
					    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
					    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat16_5.x = dot(unity_SHAr, u_xlat0);
					    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);
					    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);
					    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
					    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat16_4.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    vs_TEXCOORD5.xyz = u_xlat0.xyz;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in mediump vec3 vs_TEXCOORD5;
					layout(location = 0) out mediump vec4 SV_Target0;
					layout(location = 1) out mediump vec4 SV_Target1;
					layout(location = 2) out mediump vec4 SV_Target2;
					layout(location = 3) out mediump vec4 SV_Target3;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    SV_Target0.xyz = u_xlat10_2.xyz;
					    SV_Target3.xyz = u_xlat10_2.xyz * vs_TEXCOORD5.xyz;
					    SV_Target0.w = 1.0;
					    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_2.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_2.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_2.xyz);
					    u_xlat10_2.xyz = u_xlat0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
					    SV_Target2.xyz = u_xlat10_2.xyz;
					    SV_Target2.w = 1.0;
					    SV_Target3.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  lowp float tangentSign_2;
					  lowp vec3 worldTangent_3;
					  lowp vec3 worldNormal_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = tmpvar_1.xyz;
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_9;
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_9 = tmpvar_10.xyz;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].x;
					  v_11.y = unity_WorldToObject[1].x;
					  v_11.z = unity_WorldToObject[2].x;
					  v_11.w = unity_WorldToObject[3].x;
					  highp vec4 v_12;
					  v_12.x = unity_WorldToObject[0].y;
					  v_12.y = unity_WorldToObject[1].y;
					  v_12.z = unity_WorldToObject[2].y;
					  v_12.w = unity_WorldToObject[3].y;
					  highp vec4 v_13;
					  v_13.x = unity_WorldToObject[0].z;
					  v_13.y = unity_WorldToObject[1].z;
					  v_13.z = unity_WorldToObject[2].z;
					  v_13.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize(((
					    (v_11.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  worldNormal_4 = tmpvar_14;
					  highp mat3 tmpvar_15;
					  tmpvar_15[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_15[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_15[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_16;
					  tmpvar_16 = normalize((tmpvar_15 * _glesTANGENT.xyz));
					  worldTangent_3 = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_2 = tmpvar_17;
					  lowp vec3 tmpvar_18;
					  tmpvar_18 = (((worldNormal_4.yzx * worldTangent_3.zxy) - (worldNormal_4.zxy * worldTangent_3.yzx)) * tangentSign_2);
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_3.x;
					  tmpvar_19.y = tmpvar_18.x;
					  tmpvar_19.z = worldNormal_4.x;
					  tmpvar_19.w = tmpvar_9.x;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_3.y;
					  tmpvar_20.y = tmpvar_18.y;
					  tmpvar_20.z = worldNormal_4.y;
					  tmpvar_20.w = tmpvar_9.y;
					  highp vec4 tmpvar_21;
					  tmpvar_21.x = worldTangent_3.z;
					  tmpvar_21.y = tmpvar_18.z;
					  tmpvar_21.z = worldNormal_4.z;
					  tmpvar_21.w = tmpvar_9.z;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  tmpvar_7.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = tmpvar_1.xyz;
					  tmpvar_7.w = (-((glstate_matrix_modelview0 * tmpvar_22).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = (glstate_matrix_mvp * tmpvar_8);
					  xlv_TEXCOORD0 = tmpvar_5;
					  xlv_TEXCOORD1 = tmpvar_19;
					  xlv_TEXCOORD2 = tmpvar_20;
					  xlv_TEXCOORD3 = tmpvar_21;
					  xlv_TEXCOORD4 = tmpvar_6;
					  xlv_TEXCOORD5 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  tmpvar_3 = (texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_4;
					  tmpvar_4 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_5;
					  tmpvar_5 = dot (xlv_TEXCOORD1.xyz, tmpvar_4);
					  worldN_2.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = dot (xlv_TEXCOORD2.xyz, tmpvar_4);
					  worldN_2.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = dot (xlv_TEXCOORD3.xyz, tmpvar_4);
					  worldN_2.z = tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = (2.0 * tmpvar_8.xyz);
					  mediump vec4 outDiffuseOcclusion_10;
					  mediump vec4 outNormal_11;
					  mediump vec4 emission_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = tmpvar_3;
					  outDiffuseOcclusion_10 = tmpvar_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = ((worldN_2 * 0.5) + 0.5);
					  outNormal_11 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = vec3(0.0, 0.0, 0.0);
					  emission_12 = tmpvar_15;
					  emission_12.xyz = (emission_12.xyz + (tmpvar_3 * tmpvar_9));
					  outDiffuse_1.xyz = outDiffuseOcclusion_10.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = vec4(0.0, 0.0, 0.0, 0.0);
					  gl_FragData[2] = outNormal_11;
					  gl_FragData[3] = emission_12;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  lowp float tangentSign_2;
					  lowp vec3 worldTangent_3;
					  lowp vec3 worldNormal_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = tmpvar_1.xyz;
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_9;
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_9 = tmpvar_10.xyz;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].x;
					  v_11.y = unity_WorldToObject[1].x;
					  v_11.z = unity_WorldToObject[2].x;
					  v_11.w = unity_WorldToObject[3].x;
					  highp vec4 v_12;
					  v_12.x = unity_WorldToObject[0].y;
					  v_12.y = unity_WorldToObject[1].y;
					  v_12.z = unity_WorldToObject[2].y;
					  v_12.w = unity_WorldToObject[3].y;
					  highp vec4 v_13;
					  v_13.x = unity_WorldToObject[0].z;
					  v_13.y = unity_WorldToObject[1].z;
					  v_13.z = unity_WorldToObject[2].z;
					  v_13.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize(((
					    (v_11.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  worldNormal_4 = tmpvar_14;
					  highp mat3 tmpvar_15;
					  tmpvar_15[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_15[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_15[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_16;
					  tmpvar_16 = normalize((tmpvar_15 * _glesTANGENT.xyz));
					  worldTangent_3 = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_2 = tmpvar_17;
					  lowp vec3 tmpvar_18;
					  tmpvar_18 = (((worldNormal_4.yzx * worldTangent_3.zxy) - (worldNormal_4.zxy * worldTangent_3.yzx)) * tangentSign_2);
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_3.x;
					  tmpvar_19.y = tmpvar_18.x;
					  tmpvar_19.z = worldNormal_4.x;
					  tmpvar_19.w = tmpvar_9.x;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_3.y;
					  tmpvar_20.y = tmpvar_18.y;
					  tmpvar_20.z = worldNormal_4.y;
					  tmpvar_20.w = tmpvar_9.y;
					  highp vec4 tmpvar_21;
					  tmpvar_21.x = worldTangent_3.z;
					  tmpvar_21.y = tmpvar_18.z;
					  tmpvar_21.z = worldNormal_4.z;
					  tmpvar_21.w = tmpvar_9.z;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  tmpvar_7.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = tmpvar_1.xyz;
					  tmpvar_7.w = (-((glstate_matrix_modelview0 * tmpvar_22).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = (glstate_matrix_mvp * tmpvar_8);
					  xlv_TEXCOORD0 = tmpvar_5;
					  xlv_TEXCOORD1 = tmpvar_19;
					  xlv_TEXCOORD2 = tmpvar_20;
					  xlv_TEXCOORD3 = tmpvar_21;
					  xlv_TEXCOORD4 = tmpvar_6;
					  xlv_TEXCOORD5 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  tmpvar_3 = (texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_4;
					  tmpvar_4 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_5;
					  tmpvar_5 = dot (xlv_TEXCOORD1.xyz, tmpvar_4);
					  worldN_2.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = dot (xlv_TEXCOORD2.xyz, tmpvar_4);
					  worldN_2.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = dot (xlv_TEXCOORD3.xyz, tmpvar_4);
					  worldN_2.z = tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = (2.0 * tmpvar_8.xyz);
					  mediump vec4 outDiffuseOcclusion_10;
					  mediump vec4 outNormal_11;
					  mediump vec4 emission_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = tmpvar_3;
					  outDiffuseOcclusion_10 = tmpvar_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = ((worldN_2 * 0.5) + 0.5);
					  outNormal_11 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = vec3(0.0, 0.0, 0.0);
					  emission_12 = tmpvar_15;
					  emission_12.xyz = (emission_12.xyz + (tmpvar_3 * tmpvar_9));
					  outDiffuse_1.xyz = outDiffuseOcclusion_10.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = vec4(0.0, 0.0, 0.0, 0.0);
					  gl_FragData[2] = outNormal_11;
					  gl_FragData[3] = emission_12;
					}
					
					
					#endif"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 glstate_matrix_modelview0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _DetailTex_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  tmpvar_1 = _glesVertex;
					  lowp float tangentSign_2;
					  lowp vec3 worldTangent_3;
					  lowp vec3 worldNormal_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = tmpvar_1.xyz;
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _DetailTex_ST.xy) + _DetailTex_ST.zw);
					  highp vec3 tmpvar_9;
					  highp vec4 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex);
					  tmpvar_9 = tmpvar_10.xyz;
					  highp vec4 v_11;
					  v_11.x = unity_WorldToObject[0].x;
					  v_11.y = unity_WorldToObject[1].x;
					  v_11.z = unity_WorldToObject[2].x;
					  v_11.w = unity_WorldToObject[3].x;
					  highp vec4 v_12;
					  v_12.x = unity_WorldToObject[0].y;
					  v_12.y = unity_WorldToObject[1].y;
					  v_12.z = unity_WorldToObject[2].y;
					  v_12.w = unity_WorldToObject[3].y;
					  highp vec4 v_13;
					  v_13.x = unity_WorldToObject[0].z;
					  v_13.y = unity_WorldToObject[1].z;
					  v_13.z = unity_WorldToObject[2].z;
					  v_13.w = unity_WorldToObject[3].z;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize(((
					    (v_11.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  worldNormal_4 = tmpvar_14;
					  highp mat3 tmpvar_15;
					  tmpvar_15[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_15[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_15[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_16;
					  tmpvar_16 = normalize((tmpvar_15 * _glesTANGENT.xyz));
					  worldTangent_3 = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_2 = tmpvar_17;
					  lowp vec3 tmpvar_18;
					  tmpvar_18 = (((worldNormal_4.yzx * worldTangent_3.zxy) - (worldNormal_4.zxy * worldTangent_3.yzx)) * tangentSign_2);
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_3.x;
					  tmpvar_19.y = tmpvar_18.x;
					  tmpvar_19.z = worldNormal_4.x;
					  tmpvar_19.w = tmpvar_9.x;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_3.y;
					  tmpvar_20.y = tmpvar_18.y;
					  tmpvar_20.z = worldNormal_4.y;
					  tmpvar_20.w = tmpvar_9.y;
					  highp vec4 tmpvar_21;
					  tmpvar_21.x = worldTangent_3.z;
					  tmpvar_21.y = tmpvar_18.z;
					  tmpvar_21.z = worldNormal_4.z;
					  tmpvar_21.w = tmpvar_9.z;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					  tmpvar_7.xyz = ((tmpvar_10.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
					  highp vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = tmpvar_1.xyz;
					  tmpvar_7.w = (-((glstate_matrix_modelview0 * tmpvar_22).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
					  gl_Position = (glstate_matrix_mvp * tmpvar_8);
					  xlv_TEXCOORD0 = tmpvar_5;
					  xlv_TEXCOORD1 = tmpvar_19;
					  xlv_TEXCOORD2 = tmpvar_20;
					  xlv_TEXCOORD3 = tmpvar_21;
					  xlv_TEXCOORD4 = tmpvar_6;
					  xlv_TEXCOORD5 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D unity_Lightmap;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _DetailTex;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  tmpvar_3 = (texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz * texture2D (_DetailTex, xlv_TEXCOORD0.zw).xyz);
					  lowp vec3 tmpvar_4;
					  tmpvar_4 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
					  highp float tmpvar_5;
					  tmpvar_5 = dot (xlv_TEXCOORD1.xyz, tmpvar_4);
					  worldN_2.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = dot (xlv_TEXCOORD2.xyz, tmpvar_4);
					  worldN_2.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = dot (xlv_TEXCOORD3.xyz, tmpvar_4);
					  worldN_2.z = tmpvar_7;
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = (2.0 * tmpvar_8.xyz);
					  mediump vec4 outDiffuseOcclusion_10;
					  mediump vec4 outNormal_11;
					  mediump vec4 emission_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = tmpvar_3;
					  outDiffuseOcclusion_10 = tmpvar_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = ((worldN_2 * 0.5) + 0.5);
					  outNormal_11 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = vec3(0.0, 0.0, 0.0);
					  emission_12 = tmpvar_15;
					  emission_12.xyz = (emission_12.xyz + (tmpvar_3 * tmpvar_9));
					  outDiffuse_1.xyz = outDiffuseOcclusion_10.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = vec4(0.0, 0.0, 0.0, 0.0);
					  gl_FragData[2] = outNormal_11;
					  gl_FragData[3] = emission_12;
					}
					
					
					#endif"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec3 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    u_xlat0.xyz = u_xlat3.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD5.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat4 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD5.w = u_xlat4 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in highp vec4 vs_TEXCOORD4;
					layout(location = 0) out mediump vec4 SV_Target0;
					layout(location = 1) out mediump vec4 SV_Target1;
					layout(location = 2) out mediump vec4 SV_Target2;
					layout(location = 3) out mediump vec4 SV_Target3;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    SV_Target0.xyz = u_xlat10_2.xyz;
					    SV_Target0.w = 1.0;
					    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_3.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_3.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
					    SV_Target2.xyz = u_xlat10_3.xyz;
					    SV_Target2.w = 1.0;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    SV_Target3.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    SV_Target3.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec3 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    u_xlat0.xyz = u_xlat3.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD5.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat4 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD5.w = u_xlat4 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in highp vec4 vs_TEXCOORD4;
					layout(location = 0) out mediump vec4 SV_Target0;
					layout(location = 1) out mediump vec4 SV_Target1;
					layout(location = 2) out mediump vec4 SV_Target2;
					layout(location = 3) out mediump vec4 SV_Target3;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    SV_Target0.xyz = u_xlat10_2.xyz;
					    SV_Target0.w = 1.0;
					    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_3.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_3.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
					    SV_Target2.xyz = u_xlat10_3.xyz;
					    SV_Target2.w = 1.0;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    SV_Target3.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    SV_Target3.w = 1.0;
					    return;
					}
					#endif"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3
					#ifdef VERTEX
					#version 300 es
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	vec4 hlslcc_mtx4glstate_matrix_mvp[4];
					uniform 	vec4 hlslcc_mtx4glstate_matrix_modelview0[4];
					uniform 	vec4 hlslcc_mtx4unity_ObjectToWorld[4];
					uniform 	vec4 hlslcc_mtx4unity_WorldToObject[4];
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 _MainTex_ST;
					uniform 	vec4 _DetailTex_ST;
					in highp vec4 in_POSITION0;
					in highp vec4 in_TANGENT0;
					in highp vec3 in_NORMAL0;
					in highp vec4 in_TEXCOORD0;
					in highp vec4 in_TEXCOORD1;
					out highp vec4 vs_TEXCOORD0;
					out highp vec4 vs_TEXCOORD1;
					out highp vec4 vs_TEXCOORD2;
					out highp vec4 vs_TEXCOORD3;
					out highp vec4 vs_TEXCOORD4;
					out highp vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec3 u_xlat1;
					lowp vec3 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat4;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4glstate_matrix_mvp[1];
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = hlslcc_mtx4glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + hlslcc_mtx4glstate_matrix_mvp[3];
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _DetailTex_ST.xy + _DetailTex_ST.zw;
					    u_xlat0.y = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[0].x;
					    u_xlat0.z = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[1].x;
					    u_xlat0.x = in_NORMAL0.x * hlslcc_mtx4unity_WorldToObject[2].x;
					    u_xlat1.y = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[0].y;
					    u_xlat1.z = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[1].y;
					    u_xlat1.x = in_NORMAL0.y * hlslcc_mtx4unity_WorldToObject[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.y = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[0].z;
					    u_xlat1.z = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[1].z;
					    u_xlat1.x = in_NORMAL0.z * hlslcc_mtx4unity_WorldToObject[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = hlslcc_mtx4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat10_2.xyz);
					    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat10_2.xyz = vec3(u_xlat4) * u_xlat10_2.xyz;
					    vs_TEXCOORD1.y = u_xlat10_2.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4unity_ObjectToWorld[1].xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
					    u_xlat3.xyz = hlslcc_mtx4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
					    vs_TEXCOORD1.w = u_xlat3.x;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.y = u_xlat10_2.y;
					    vs_TEXCOORD3.y = u_xlat10_2.z;
					    vs_TEXCOORD2.w = u_xlat3.y;
					    vs_TEXCOORD3.w = u_xlat3.z;
					    u_xlat0.xyz = u_xlat3.xyz + (-unity_ShadowFadeCenterAndType.xyz);
					    vs_TEXCOORD5.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    u_xlat0.x = in_POSITION0.y * hlslcc_mtx4glstate_matrix_modelview0[1].z;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = hlslcc_mtx4glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + hlslcc_mtx4glstate_matrix_modelview0[3].z;
					    u_xlat4 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
					    vs_TEXCOORD5.w = u_xlat4 * (-u_xlat0.x);
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp int;
					uniform lowp sampler2D _MainTex;
					uniform lowp sampler2D _DetailTex;
					uniform lowp sampler2D _BumpMap;
					uniform lowp sampler2D unity_Lightmap;
					in highp vec4 vs_TEXCOORD0;
					in highp vec4 vs_TEXCOORD1;
					in highp vec4 vs_TEXCOORD2;
					in highp vec4 vs_TEXCOORD3;
					in highp vec4 vs_TEXCOORD4;
					layout(location = 0) out mediump vec4 SV_Target0;
					layout(location = 1) out mediump vec4 SV_Target1;
					layout(location = 2) out mediump vec4 SV_Target2;
					layout(location = 3) out mediump vec4 SV_Target3;
					vec3 u_xlat0;
					lowp vec3 u_xlat10_0;
					lowp vec3 u_xlat10_1;
					lowp vec3 u_xlat10_2;
					lowp vec3 u_xlat10_3;
					void main()
					{
					    u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_1.xyz = texture(_DetailTex, vs_TEXCOORD0.zw).xyz;
					    u_xlat10_2.xyz = u_xlat10_0.xyz * u_xlat10_1.xyz;
					    SV_Target0.xyz = u_xlat10_2.xyz;
					    SV_Target0.w = 1.0;
					    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
					    u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
					    u_xlat0.x = dot(vs_TEXCOORD1.xyz, u_xlat10_3.xyz);
					    u_xlat0.y = dot(vs_TEXCOORD2.xyz, u_xlat10_3.xyz);
					    u_xlat0.z = dot(vs_TEXCOORD3.xyz, u_xlat10_3.xyz);
					    u_xlat10_3.xyz = u_xlat0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
					    SV_Target2.xyz = u_xlat10_3.xyz;
					    SV_Target2.w = 1.0;
					    u_xlat10_0.xyz = texture(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
					    u_xlat10_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0);
					    SV_Target3.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz;
					    SV_Target3.w = 1.0;
					    return;
					}
					#endif"
}
}
Program "fp" {
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3"
}
SubProgram "gles3 hw_tier03 " {
Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
					"!!GLES3"
}
}
 }
}
Fallback "Mobile/Diffuse"
}